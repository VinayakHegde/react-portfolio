{"version":3,"sources":["Data/profile.pdf","Helpers/Enums.js","Components/DiscMenu/DiscMenu.js","Components/Header/Header.js","Helpers/DataValidator.js","Components/Buttons/DownloadButton/DownloadButton.js","Components/Cards/UserCard/UserCard.js","Components/Display/Description/Description.js","Components/Cards/SkillCard/SkillCard.js","Components/AnimatedVisibility/AnimatedVisibility.js","Components/About/About.js","Components/Timeline/Timeline.js","Components/Cards/StoryCard/StoryCard.js","Components/Experience/Experience.js","Components/Cards/ProjectCard/ProjectCard.js","Components/Projects/Projects.js","Components/Skills/Skills.js","Components/Main/Main.js","Components/Buttons/ActionButton/ActionButton.js","Components/Footer/Footer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MENU","ABOUT","EXPERIENCE","PROJECTS","SKILLS","ICONTYPE","DESCRIPTIONFOR","DiscMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","_onItemClick","bind","assertThisInitialized","_onClick","setState","item","onItemClick","_this2","menus","keys","map","key","metric","x","o","react_default","a","createElement","className","DiscMenu_ButtonGroup","react_motion","defaultStyles","styles","prevInterpolatedStyles","_","i","length","spring","stiffness","damping","interpolatingStyles","style","background","DiscMenu_Button","onClick","position","right","opacity","pointerEvents","DiscMenu_Tooltip","text","iconFor","defaultStyle","s","transform","menu","index_es","icon","faProjectDiagram","faBriefcase","faTools","faHome","Component","Tooltip","ButtonGroup","classNames","children","Button","Header","setRoute","route","Components_DiscMenu_DiscMenu","UserDetails","FirstName","data","user","firstName","LastName","lastName","FriendlyName","concat","KnownAs","knownAs","Location","location","JobTitle","jobTitle","SubTitle","subTitle","Description","description","UserContacts","Mobile","contact","phone","countryCode","number","Email","email","LinkedIn","social","linkedIn","Github","gitHub","UserExperiences","experiences","UserProjects","projects","UserSkills","skills","Experience","exp","forEach","uexp","months","d1","Date","startDate","split","indexOf","toUpperCase","d2","isPresent","endDate","diff","getFullYear","getMonth","monthDiff","toFixed","Download","_this$props","btnClass","linkClass","value","type","tooltip","faFileDownload","target","rel","href","title","UserCard","cssClass","faUserSecret","faMapMarked","DownloadButton","resume","descriptionFor","dangerouslySetInnerHTML","__html","getText","replace","SkillCard","bar","getSkill","charts","skill","index","header","toLowerCase","getSkillTopics","getScoreLevels","skillsText","topics","tpcs","name","toString","Display_Description_Description","tpc","width","score","AnimatedVisibility","visibility_sensor_default","assign","partialVisibility","offset","bottom","onChange","notifyChange","react","About","visible","isVisible","Components_AnimatedVisibility_AnimatedVisibility","onSensorChange","Cards_UserCard_UserCard","Cards_SkillCard_SkillCard","Timeline","_ref","animate","lineColor","timeline--animate","color","defaultProps","StoryCard","when","where","who","whom","count","theme","borderColor","getProjectCount","Components_Timeline_Timeline","getStories","achievements","achDetails","achievement","details","other","ind","dto","Cards_StoryCard_StoryCard","company","office","addAchievements","addOtherResponsibilities","project","companyKey","misc","ProjectCard","getProjectTitle","getElementFor","getSubProjects","programming","tools","_this3","subProjects","subProjs","Projects","getProjectCards","options","getOptions","Cards_ProjectCard_ProjectCard","experience","find","Skills","Main","Components_About_About","Components_Experience_Experience","Components_Projects_Projects","Components_Skills_Skills","ActionButton","stopPropagation","e","getIcon","faPhone","faEnvelope","faGithub","faLinkedinIn","Footer","Buttons_ActionButton_ActionButton","Phone","App","Components_Header_Header","Components_Main_Main","Components_Footer_Footer","Boolean","window","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09ae5467.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.e0bd2ee4.pdf\";","const MENU = {\r\n    ABOUT : 'ABOUT',\r\n    EXPERIENCE: 'EXPERIENCE', \r\n    PROJECTS: 'PROJECTS', \r\n    SKILLS: 'SKILLS' \r\n};\r\nconst ICONTYPE = {\r\n    PHONE : 'PHONE',\r\n    EMAIL: 'EMAIL',\r\n    FILEDOWNLOAD : 'FILEDOWNLOAD',\r\n    GITHUB: 'GITHUB',\r\n    LINKEDIN:'LINKEDIN'\r\n};\r\nconst DESCRIPTIONFOR = { \r\n    USERDESCRIPTION: 'USERDESCRIPTION'\r\n};\r\n\r\nexport {\r\n    MENU,\r\n    ICONTYPE,\r\n    DESCRIPTIONFOR\r\n};","import React, {Component} from 'react';\r\nimport { Motion, StaggeredMotion, spring } from 'react-motion';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faHome, faBriefcase, faProjectDiagram, faTools } from '@fortawesome/free-solid-svg-icons';\r\n \r\nimport {MENU} from '../../Helpers/Enums';\r\nimport './DiscMenu.css';\r\n\r\nclass DiscMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      active: false,\r\n    }\r\n    this._onItemClick = this._onItemClick.bind(this);\r\n    this._onClick = this._onClick.bind(this);\r\n  }\r\n  \r\n  _onClick() {\r\n    this.setState({ \r\n      active: !this.state.active \r\n    });\r\n  }\r\n  _onItemClick(item){\r\n    this._onClick();\r\n    this.props.onItemClick(item)\r\n  }\r\n\r\n  render() {\r\n    const menus = Object.keys(MENU).map(key=> MENU[key]);\r\n    const metric =  { x: -45, o: 0 };\r\n    return (\r\n      <div className=\"container\">\r\n        <ButtonGroup>\r\n          <StaggeredMotion\r\n            defaultStyles={menus.map(() => metric)}\r\n            styles={prevInterpolatedStyles => prevInterpolatedStyles.map((_, i) => {\r\n              return i === prevInterpolatedStyles.length - 1\r\n                ? {\r\n                  x: spring(this.state.active ? 0 : -45, { stiffness: 330, damping: 20 }),\r\n                  o: spring(this.state.active ? 1 : 0, { stiffness: 330, damping: 20 }),\r\n                } : {\r\n                  x: spring(prevInterpolatedStyles[i + 1].x, { stiffness: 330, damping: 20 }),\r\n                  o: spring(prevInterpolatedStyles[i + 1].o, { stiffness: 330, damping: 20 }),\r\n                };\r\n            })}\r\n          >\r\n            {interpolatingStyles =>\r\n              <ButtonGroup style={{ \r\n                background: this.state.active ? '#333' : 'transparent',\r\n              }}>\r\n                {interpolatingStyles.map((style, i) =>\r\n                  <Button\r\n                    key={menus[i]}\r\n                    onClick={() => this._onItemClick(menus[i])} \r\n                    style={{\r\n                      position: 'relative',\r\n                      right: style.x,\r\n                      opacity: style.o,\r\n                      pointerEvents: this.state.active ? 'auto' : 'none',\r\n                    }}\r\n                  >\r\n                    <Tooltip text={menus[i]} />\r\n                    {this.iconFor(menus[i])}\r\n                 </Button>\r\n                )}\r\n              </ButtonGroup>\r\n            }\r\n          </StaggeredMotion>\r\n          \r\n          <Motion\r\n            defaultStyle={{ s: 0.675 }}\r\n            style={{ s: spring(this.state.active ? 1 : 0.675, { stiffness: 330, damping: 14 }) }}\r\n          >\r\n            {interpolatingStyles =>\r\n              <Button \r\n                className=\"button--large\" \r\n                onClick={this._onClick} \r\n                style={{ \r\n                  transform: 'scale(' + interpolatingStyles.s + ')',\r\n                }}\r\n              >\r\n                <span className={this.state.active ? 'icon active' : 'icon'} />\r\n              </Button>\r\n            }\r\n          </Motion>\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n    iconFor(menu){\r\n        switch(menu){\r\n            case MENU.PROJECTS:\r\n                return (\r\n                    <FontAwesomeIcon icon={faProjectDiagram}/>\r\n                );\r\n            case MENU.EXPERIENCE:\r\n                return (\r\n                    <FontAwesomeIcon icon={faBriefcase}/>\r\n                );\r\n            case MENU.SKILLS:\r\n                return (\r\n                    <FontAwesomeIcon icon={faTools}/>\r\n                );\r\n            default: \r\n                return(\r\n                    <FontAwesomeIcon icon={faHome}/>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * <Tooltip />\r\n */\r\nconst Tooltip = (props) => <span className=\"tooltip\">{props.text}</span>;\r\n\r\n/**\r\n * <ButtonGroup />\r\n */\r\nconst ButtonGroup = (props) => <div className={classNames('button-group', props.active)} style={props.style}>{props.children}</div>;\r\n\r\n/**\r\n * <Button />\r\n */\r\nconst Button = (props) => <button className={classNames('button', props.className)} style={props.style} onClick={props.onClick}>{props.children}</button>;\r\n\r\nDiscMenu.propTypes = {\r\n    onItemClick: PropTypes.func\r\n}\r\nexport default DiscMenu;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Header.css';\r\nimport DiscMenu from '../DiscMenu/DiscMenu';\r\n\r\nclass Header extends Component {\r\n    onItemClick(item){\r\n        this.props.setRoute(item);\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"header-bar\">\r\n                {this.props.route}\r\n                <DiscMenu onItemClick={this.onItemClick.bind(this)}></DiscMenu>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    setRoute : PropTypes.func,\r\n    route : PropTypes.string\r\n};\r\n\r\nexport default Header;","import data from '../Data/profile.json';\r\n\r\nconst UserDetails = {\r\n    FirstName : data.user ? data.user.firstName || '' :  '',\r\n    LastName : data.user ? data.user.lastName || '' : '',\r\n    FriendlyName: data.user ? (data.user.firstName || '').concat(' ', (data.user.lastName || '')) : '',\r\n    KnownAs : data.user ? (data.user.knownAs || '') : '',\r\n    Location : data.user ? (data.user.location || '') : '',\r\n    JobTitle : data.user ? (data.user.jobTitle || '') : '',\r\n    SubTitle : data.user ? (data.user.subTitle || '') : '',\r\n    Description : data.user ? (data.user.description || '') : ''\r\n};\r\n\r\nconst UserContacts = {\r\n    Mobile : data.user ? (''.concat(data.user.contact ? ('+', data.user.contact.phone.countryCode || '', data.user.contact.phone.number || '') : '')) : '',\r\n    Email: data.user && data.user.contact ? (data.user.contact.email || '') : '',\r\n    LinkedIn : data.user && data.user.contact && data.user.contact.social ? (data.user.contact.social.linkedIn || '') : '', \r\n    Github : data.user && data.user.contact && data.user.contact.social ?  (data.user.contact.social.gitHub || '') : '' \r\n};\r\n\r\nconst UserExperiences = data.experiences || [];\r\nconst UserProjects = data.projects || [];\r\nconst UserSkills = data.skills || [];\r\n\r\nUserDetails.Experience = () =>{\r\n    let exp = 0;\r\n    if(UserExperiences.length > 0){\r\n\r\n        function monthDiff(d1, d2) {\r\n            let diff;\r\n            diff = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n            diff -= d1.getMonth();\r\n            diff += d2.getMonth() +1;\r\n            return diff <= 0 ? 0 : diff;\r\n        }\r\n\r\n        UserExperiences.forEach((uexp)=>{\r\n            const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n            let d1 = new Date(uexp.startDate.split(' ')[1], months.indexOf(uexp.startDate.split(' ')[0].toUpperCase()));\r\n            let d2 = uexp.isPresent ? new Date() : new Date(uexp.endDate.split(' ')[1], months.indexOf(uexp.endDate.split(' ')[0].toUpperCase()));\r\n            \r\n            exp += monthDiff(d1, d2);\r\n        });\r\n\r\n    }\r\n    return exp ? (exp/12).toFixed(1) : exp;\r\n}\r\n\r\nexport { \r\n    UserDetails, \r\n    UserContacts,\r\n    UserExperiences,\r\n    UserProjects,\r\n    UserSkills\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\n\r\nclass Download extends Component {\r\n    render() {\r\n        const {btnClass, linkClass, value, type, tooltip, children} = this.props;\r\n        let icon = type === ICONTYPE.FILEDOWNLOAD ? faFileDownload : null;\r\n        return (\r\n            <button className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                    {children}\r\n                </a>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nDownload.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\nexport default Download;","import React, { Component } from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faUserSecret, faMapMarked} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport resume from '../../../Data/profile.pdf';\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\nimport {UserDetails} from '../../../Helpers/DataValidator';\r\nimport DownloadButton from '../../Buttons/DownloadButton/DownloadButton';\r\nimport './UserCard.css';\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        const cssClass = \"user-card \".concat(this.props.cssClass);\r\n        const knownAs = UserDetails.KnownAs.length ? \"(Known as \".concat(UserDetails.KnownAs, ')') : '';\r\n        return (\r\n            <div className={cssClass}>\r\n                <div className=\"user-icon\" title={UserDetails.KnownAs}>\r\n                    <FontAwesomeIcon icon={faUserSecret}/>\r\n                </div>\r\n                <div className=\"user-details user-name user-friendly-name\">\r\n                    {UserDetails.FriendlyName} \r\n                </div>\r\n                <div className=\"user-details user-name user-known-as\">\r\n                    {knownAs}\r\n                </div>\r\n                <div className=\"user-details user-name user-known-as\">\r\n                    {UserDetails.JobTitle}\r\n                </div>\r\n                <div className=\"user-details user-title\">\r\n                    {UserDetails.subTitle}\r\n                </div>\r\n                <div className=\"user-details user-based-in\">\r\n                    <FontAwesomeIcon icon={faMapMarked}/>\r\n                    <span className=\"iconed-label\">{UserDetails.Location}</span>\r\n                </div>\r\n                <div className=\"user-details download-wrapper\">\r\n                    <DownloadButton type={ICONTYPE.FILEDOWNLOAD}\r\n                        value={resume}\r\n                        btnClass=\"download-button resume\"\r\n                        linkClass=\"button-link\"\r\n                        tooltip=\"Download resume\">\r\n                        <span className=\"iconed-label\">Download Resume</span>                        \r\n                    </DownloadButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {UserDetails} from '../../../Helpers/DataValidator';\r\nimport {DESCRIPTIONFOR} from '../../../Helpers/Enums';\r\n\r\nclass Description extends Component {\r\n    render() {\r\n        const {cssClass, descriptionFor} = this.props;\r\n        return (\r\n            <div className={cssClass}>\r\n                <p dangerouslySetInnerHTML={{__html:`${this.getText(descriptionFor)}`}}></p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getText(key){\r\n        switch(key){\r\n            case DESCRIPTIONFOR.USERDESCRIPTION:\r\n                return UserDetails.Description.replace('{autoexp}', UserDetails.Experience());\r\n            default: return key;\r\n        }\r\n    }\r\n}\r\n\r\nDescription.propTypes = {\r\n    cssClass: PropTypes.string,\r\n    descriptionFor:PropTypes.string\r\n}\r\n\r\nexport default Description;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {UserSkills} from '../../../Helpers/DataValidator';\r\nimport Description from '../../Display/Description/Description';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {bar} = this.props;\r\n        return (\r\n            <div className=\"skill-card\">\r\n                {this.getSkill(bar)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSkill(bar){\r\n        if(!bar){\r\n            if(UserSkills.length){\r\n                let skillsText = '<strong>Core Competencies : </strong>'\r\n                UserSkills.forEach((skill, index) => {\r\n                    skillsText = skillsText.concat('<br/><em><u>', skill.header, '</u></em>');\r\n\r\n                    if(skill.topics && skill.topics.length){\r\n                        let topics = skill.topics.map(tpcs => tpcs.name);\r\n\r\n                        if(topics.length){\r\n                            skillsText = skillsText.concat('<em> : </em>', topics.toString().replace(/,/g, ', '));\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return (\r\n                    <Description cssClass=\"skills-text\" descriptionFor={skillsText}></Description>\r\n                );\r\n            } \r\n            return null;\r\n        } else {\r\n            const charts = UserSkills.map((skill, index) => {\r\n                const className = ''.concat('chart ', skill.header.toLowerCase());\r\n                return (\r\n                    <div key={index+1} className={className}>\r\n                        <span className=\"chart__title\">{skill.header}</span>\r\n                        <ul className=\"chart--horiz\">\r\n                            {this.getSkillTopics(skill)}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"skills\">\r\n                    {charts}\r\n                    {this.getScoreLevels()}\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    getSkillTopics(skill){\r\n        const topics = skill.topics.map((tpc, index) => {\r\n            const width = tpc.score.toString().concat('%');\r\n            return (\r\n                <li key={index+1} className=\"chart__bar\" style={{width: `${width}`}}>\r\n                    <span className=\"chart__label\">\r\n                        {tpc.name}\r\n                    </span>\r\n                </li>\r\n            );    \r\n        });\r\n\r\n        return topics;\r\n    }\r\n\r\n    getScoreLevels(){\r\n        if(!UserSkills.length) return (\r\n            <span className=\"no-skills\">Skills not found!</span>\r\n        );\r\n        return(\r\n            <ul className=\"lines\">\r\n                <li className=\"line l--0\">\r\n                    <span className=\"line__label\">\r\n                        Started\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--25\">\r\n                    <span className=\"line__label\">\r\n                        Beginner\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--50\">\r\n                    <span className=\"line__label\">\r\n                        Itermediate\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--75\">\r\n                    <span className=\"line__label\">\r\n                        Advanced\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--100\">\r\n                    <span className=\"line__label\">\r\n                        Expert\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nSkillCard.propTypes = {\r\n    bar : PropTypes.bool\r\n}\r\nexport default SkillCard;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nimport './AnimatedVisibility.css';\r\n\r\n\r\nclass AnimatedVisibility extends Component {\r\n    render() {\r\n        const visibilitySensorProps = { \r\n            partialVisibility: true, \r\n            offset: { \r\n                bottom: 50 \r\n            } \r\n        };\r\n        const {children} = this.props;\r\n        return (\r\n            <div className=\"animated-visibility-container\">\r\n                <VisibilitySensor {...visibilitySensorProps} onChange={this.props.notifyChange}>\r\n                    <Fragment>\r\n                        {children}\r\n                    </Fragment>\r\n                </VisibilitySensor>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedVisibility.propTypes = {\r\n    notifyChange : PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ])\r\n};\r\nexport default AnimatedVisibility;","import React, { Component } from 'react';\r\n\r\nimport UserCard from \"../Cards/UserCard/UserCard\";\r\nimport Description from '../Display/Description/Description';\r\nimport {DESCRIPTIONFOR} from '../../Helpers/Enums';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nimport './About.css';\r\nimport AnimatedVisibility from '../AnimatedVisibility/AnimatedVisibility';\r\n\r\nclass About extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n    render() {\r\n        const {visible} = this.state;\r\n        return (\r\n            <article className=\"profile-content about\">\r\n                <div className=\"content-wrapper\">\r\n                    <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                        <UserCard cssClass={`${visible ? 'about-content bounce-in' : 'about-content is-hidden'}`}/>\r\n\r\n                        <Description cssClass={`${visible ? 'about-content about-description bounce-in' : 'about-content about-description is-hidden'}`}\r\n                                descriptionFor={DESCRIPTIONFOR.USERDESCRIPTION}/>\r\n                            \r\n                        <div className={`${visible ? 'about-content bounce-in' : 'about-content is-hidden'}`}>\r\n                            <SkillCard bar={false}/>\r\n                        </div>\r\n                    </AnimatedVisibility>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Timeline.css';\r\n\r\nconst Timeline = ({ animate, children, className, lineColor }) => (\r\n    <div className=\"timeline-wrapper\">\r\n        <div className={classNames(className, 'timeline', {\r\n            'timeline--animate': animate,\r\n            })} style={{ color: `${lineColor}` }}>\r\n                {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]).isRequired,\r\n    className: PropTypes.string,\r\n    lineColor: PropTypes.string,\r\n    animate: PropTypes.bool\r\n};\r\n\r\nTimeline.defaultProps = {\r\n    animate: true,\r\n    className: '',\r\n    lineColor: '#000'\r\n};\r\n\r\nexport default Timeline;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AnimatedVisibility from '../../AnimatedVisibility/AnimatedVisibility';\r\nimport './StoryCard.css';\r\n\r\n\r\nclass StoryCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n\r\n    render(){\r\n        let {when, where, who, whom, count, theme, children} = this.props,\r\n            {visible } = this.state;\r\n\r\n        if(whom.length > 0){\r\n            whom = '@ '.concat(whom, ', ', where);\r\n        }\r\n\r\n        return ( \r\n            <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                <div className=\"story-caption-wrapper\" style={{color:`${theme}`}}>\r\n                    <div className={`${visible ? 'bounce-in' : 'is-hidden'}`}>\r\n                        <span className=\"story-caption-container\">\r\n                            <time className=\"story-caption\"\r\n                                style={{background:`${theme}`}}\r\n                                title={when}>\r\n                                {when}\r\n                            </time>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"story-continer\">\r\n                    <div className={`story-content ${ visible ? 'bounce-in' : 'is-hidden'} ${children === '' ? 'empty' : ''}`}\r\n                        style={{borderColor:`${theme}`}}>\r\n                        <h3 style={{color:`${theme}`}}>{who}</h3>\r\n                        <h4 style={{color:`${theme}`}}>{whom}</h4>\r\n                        <hr/>\r\n                        {this.getProjectCount(count, theme)}\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </AnimatedVisibility>\r\n        );\r\n    }\r\n\r\n    getProjectCount(count, theme){\r\n        if(count > 0){\r\n            return (\r\n                <div className=\"project-count\" style={{background:`${theme}`}} title=\"Number of projects undertaken\">{count}</div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nStoryCard.propTypes = {\r\n    when : PropTypes.string,\r\n    where:PropTypes.string,\r\n    who:PropTypes.string,\r\n    whom:PropTypes.string,\r\n    count: PropTypes.number,\r\n    theme: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ])\r\n}\r\n\r\nStoryCard.defaultProps = {\r\n    when : '',\r\n    where:'',\r\n    who:'',\r\n    whom:'',\r\n    theme: '#ddd',\r\n    children: ''\r\n}\r\n\r\nexport default StoryCard;","import './Experience.css';\r\nimport Timeline from '../Timeline/Timeline';\r\nimport StoryCard from '../Cards/StoryCard/StoryCard';\r\nimport {UserExperiences, UserProjects} from '../../Helpers/DataValidator';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Experience extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <Timeline lineColor={'#ddd'}>\r\n                    {this.getStories()}\r\n                </Timeline>\r\n            </article>\r\n        );\r\n    }\r\n\r\n    addAchievements(exp){\r\n        let achievements = null;\r\n        if(exp.achievements && exp.achievements.length){\r\n            let achDetails = exp.achievements.map((achievement, index) => {\r\n                return (\r\n                    <li key={index.toString()}>{achievement.details}</li>\r\n                );\r\n            });\r\n            achievements = (\r\n                <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    <ol>\r\n                        {achDetails}\r\n                    </ol>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return achievements;\r\n    }\r\n\r\n    addOtherResponsibilities(exp){\r\n        return (exp.other ? (\r\n            <div>\r\n                <h5>Other responsibilities</h5>\r\n                <p>{exp.other}</p>\r\n            </div>\r\n        ): null);\r\n    }\r\n\r\n    getStories(){\r\n        if(!UserExperiences.length) return (\r\n            <span className=\"no-experiences\">No experience found!</span>\r\n        );\r\n        let stories = UserExperiences.map((exp, ind)=>{\r\n            let dto = this.dto(exp);\r\n            let when = dto.startDate.concat(' - ', dto.isPresent ? 'Present' : dto.endDate)\r\n            if(dto.startDate.length === 0 && (!dto.endDate || dto.endDate.length === 0)){\r\n                when = '';\r\n            }\r\n            return (\r\n                <StoryCard key={ind.toString()} theme={dto.theme}\r\n                    when= {when}\r\n                    who={dto.jobTitle}\r\n                    whom={dto.company}\r\n                    where={dto.office}\r\n                    count={this.getProjectCount(dto.key)}>\r\n                    <p>{dto.description}</p>\r\n                    {this.addAchievements(dto)}  \r\n                    {this.addOtherResponsibilities(dto)}  \r\n                </StoryCard>\r\n            );\r\n        });\r\n\r\n        return stories;\r\n    }\r\n    getProjectCount(key){\r\n        let count = 0;\r\n        UserProjects.forEach(project => {\r\n            if(key === project.companyKey){\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n    dto(exp){\r\n        return {\r\n            \"company\": exp.company || \"\",\r\n            \"office\": exp.office || \"\",\r\n            \"jobTitle\": exp.jobTitle || \"\",\r\n            \"isPresent\": exp.isPresent || false,\r\n            \"startDate\": exp.startDate || \"\",\r\n            \"endDate\" : exp.endDate || \"\",\r\n            \"description\": exp.description || \"\",\r\n            \"achievements\" : exp.achievements || [],\r\n            \"other\": exp.other || null,\r\n            \"key\":exp.misc.key,\r\n            \"theme\":exp.misc && exp.misc.theme ? exp.misc.theme: \"#000\"\r\n        };\r\n    }\r\n}\r\n\r\nexport default Experience;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Description from '../../Display/Description/Description';\r\nimport './ProjectCard.css';\r\nimport AnimatedVisibility from '../../AnimatedVisibility/AnimatedVisibility';\r\n\r\nclass ProjectCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {visible : false}\r\n    }\r\n    \r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n\r\n    render() {\r\n        const {project, theme, children, index} = this.props;\r\n        const {visible} = this.state;\r\n        return (\r\n            <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                <div className={`${visible ? 'bounce-in project-card' : 'is-hidden project-card'}`} style={{borderColor:`${theme}`}}>\r\n                    {this.getProjectTitle(project, 'project-header project-title', index, theme)}\r\n                    {children}\r\n                    {this.getElementFor('About Project', project.description)}\r\n                    {this.getSubProjects(project)}\r\n                    {this.getElementFor('Programming', project.programming)}\r\n                    {this.getElementFor('Tools', project.tools)}\r\n                </div>\r\n            </AnimatedVisibility>\r\n        );\r\n    }\r\n    getProjectTitle(project, className, key, theme){\r\n        if(project.title.length && project.startDate.length){\r\n            return (\r\n                <div className={className} key={key} style={{background:`${theme}`}}>\r\n                    {project.title}\r\n                    <small className=\"project-duration\">{' ('.concat(project.startDate, ' - ', project.isPresent ? 'Present' : project.endDate, ' )')}</small>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSubProjects(project){\r\n        const subProjects = project.subProjects.map((subProjs, index)=> {\r\n            const title = this.getProjectTitle(subProjs, 'sub-project-title', index);\r\n            if(title){\r\n                if(index === 0){\r\n                    return [(<div key=\"-1\" className=\"sub-project-header\"><strong>Sub-projects</strong></div>), title]\r\n                }\r\n                return title;\r\n            }\r\n            return null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"project-content sub-projects\">\r\n                {subProjects}\r\n            </div>\r\n        );\r\n    }\r\n    getElementFor(type, text){\r\n        if(text.length){\r\n            return (\r\n                <Description cssClass={type.concat(' project-content')} descriptionFor={`${'<strong>'.concat(type,'  : </strong>')} ${text}`}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nProjectCard.propTypes = {\r\n    project : PropTypes.instanceOf(Object),\r\n    theme : PropTypes.string,\r\n    index : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default ProjectCard;","import React, { Component } from 'react';\r\n\r\nimport ProjectCard from '../Cards/ProjectCard/ProjectCard';\r\nimport {UserProjects, UserExperiences} from '../../Helpers/DataValidator';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"content-wrapper\">\r\n                    {this.getProjectCards()}\r\n                </div>            \r\n            </article>\r\n        );\r\n    }\r\n    getProjectCards(){\r\n        if(!UserProjects.length) return (\r\n            <span className=\"no-projects\">No projects found!</span>\r\n        );\r\n        return UserProjects.map((project, index) =>{\r\n            const options = this.getOptions(project.companyKey);\r\n            return (\r\n                <ProjectCard key={index+1} index={(index+1).toString()} project={project} theme={options.theme}>\r\n                    <div className=\"project-header project-company\" style={{background:`${options.theme}`}}>{options.company}</div>\r\n                </ProjectCard>\r\n            );\r\n        });\r\n    }\r\n    getOptions(companyKey){\r\n        const experience = UserExperiences.find(function(exp) {\r\n            return (exp.misc.key === companyKey);\r\n        });\r\n        \r\n        return { \r\n            company: experience ? experience.company : '',\r\n            theme: experience ? experience.misc.theme : '#000'\r\n        };\r\n    }\r\n}\r\n\r\nexport default Projects;","import './Skills.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nclass Skills extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"content-wrapper\">\r\n                    <SkillCard bar={true}/>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport {MENU} from '../../Helpers/Enums';\r\nimport About from '../About/About';\r\nimport Experience from '../Experience/Experience';\r\nimport Projects from '../Projects/Projects';\r\nimport Skills from '../Skills/Skills';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        if(this.props.route === MENU.ABOUT){\r\n            return (<About/>);\r\n        } else if(this.props.route === MENU.EXPERIENCE){\r\n            return (<Experience/>);\r\n        } else if(this.props.route === MENU.PROJECTS){\r\n            return (<Projects/>);\r\n        } else if(this.props.route === MENU.SKILLS){\r\n            return (<Skills/>);\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport {faLinkedinIn, faGithub} from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\n\r\nclass ActionButton extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.stopPropagation = this.stopPropagation.bind(this);\r\n    }\r\n    \r\n    stopPropagation(e){\r\n        e.stopPropagation();\r\n        // show toast msg \r\n    }\r\n\r\n    render() {\r\n        const {btnClass, linkClass, value, children, type, tooltip} = this.props;\r\n        let icon = this.getIcon(type);\r\n        return (\r\n            <button className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}\r\n                    onClick={this.stopPropagation}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                    {children}\r\n                </a>\r\n            </button>\r\n\r\n        );\r\n    }\r\n\r\n    getIcon(type){\r\n        switch(type){\r\n            case ICONTYPE.PHONE:\r\n                return faPhone;\r\n            case ICONTYPE.EMAIL:\r\n                return faEnvelope;\r\n            case ICONTYPE.GITHUB:\r\n                return faGithub;\r\n            case ICONTYPE.LINKEDIN:\r\n                return faLinkedinIn;\r\n            default: break;\r\n        }\r\n    }\r\n}\r\n\r\nActionButton.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\n\r\nexport default ActionButton;","import React, { Component } from 'react';\r\n\r\nimport ActionButton from '../Buttons/ActionButton/ActionButton';\r\nimport {UserContacts} from '../../Helpers/DataValidator';\r\nimport {ICONTYPE} from '../../Helpers/Enums';\r\n\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <ActionButton type={ICONTYPE.PHONE}\r\n                                    value={'tel:'.concat(UserContacts.Phone)} \r\n                                    btnClass=\"button phone\" \r\n                                    linkClass=\"button-link\"\r\n                                    tooltip=\"Click to ring me\">\r\n                    </ActionButton>\r\n                    <ActionButton type={ICONTYPE.EMAIL}\r\n                                    value={'mailto:'.concat(UserContacts.Email)} \r\n                                    btnClass=\"button email\" \r\n                                    linkClass=\"button-link\"\r\n                                    tooltip=\"Click to open email client\">\r\n                    </ActionButton>\r\n                    <ActionButton type={ICONTYPE.LINKEDIN}\r\n                                    value={UserContacts.LinkedIn} \r\n                                    btnClass=\"button linkedin\" \r\n                                    linkClass=\"button-link\"\r\n                                    tooltip=\"Visit my linkedIn profile\">\r\n                    </ActionButton>\r\n                    <ActionButton type={ICONTYPE.GITHUB}\r\n                                    value={UserContacts.Github} \r\n                                    btnClass=\"button github\" \r\n                                    linkClass=\"button-link\"\r\n                                    tooltip=\"Visit my github\">\r\n                    </ActionButton>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\nimport {MENU} from '../../Helpers/Enums';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state= {\n      route : MENU.ABOUT\n    }\n  }\n  render() {\n    return (\n      <div className=\"personal-profile\">\n        <Header route={this.state.route} setRoute={this.setRoute.bind(this)} />\n        <Main route={this.state.route}/>\n        <Footer/>\n      </div>\n    );\n  }\n  setRoute(route) {\n    this.setState({\n      route : route\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}