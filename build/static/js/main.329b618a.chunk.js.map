{"version":3,"sources":["Data/profile.pdf","Helpers/Enums.js","Components/DiscMenu/DiscMenu.js","Components/Header/Header.js","Helpers/DataValidator.js","Components/Buttons/DownloadButton/DownloadButton.js","Components/Cards/UserCard/UserCard.js","Components/Display/Description/Description.js","Components/Cards/SkillCard/SkillCard.js","Components/AnimatedVisibility/AnimatedVisibility.js","Components/About/About.js","Components/Timeline/Timeline.js","Components/Cards/StoryCard/StoryCard.js","Components/Experience/Experience.js","Components/Buttons/ActionButton/ActionButton.js","Components/Cards/ProjectCard/ProjectCard.js","Components/Projects/Work.js","Components/Projects/Personal.js","Components/Projects/Projects.js","Components/Skills/Skills.js","Components/Main/Main.js","Components/Footer/Footer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MENU","ABOUT","EXPERIENCE","PROJECTS","SKILLS","PROJECTSTYPE","WORK","PERSONAL","ICONTYPE","DESCRIPTIONFOR","DiscMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","item","setState","onItemClick","_this2","menus","keys","map","key","springOption","stiffness","damping","staggeredMetric","bottom","opacity","defaultStaggeredMotion","motionMatric","scale","styleMotion","spring","react_default","a","createElement","className","react_motion","defaultStyles","styles","prevMotions","_","i","length","getDiscGroup","defaultStyle","style","getMainDisc","_this3","interpolatingStyles","DiscMenu_Disc","onClick","menuClicked","transform","_this4","getStyle","pointerEvents","DiscMenu_DiscGroup","DiscMenu_DiscLabel","text","iconFor","menu","index_es","icon","faProjectDiagram","faBriefcase","faTools","faHome","Component","DiscLabel","DiscGroup","classNames","children","Disc","Header","setRoute","route","Components_DiscMenu_DiscMenu","bind","UserDetails","FirstName","data","user","firstName","LastName","lastName","FriendlyName","concat","KnownAs","knownAs","Location","location","JobTitle","jobTitle","SubTitle","subTitle","Description","description","UserContacts","Mobile","contact","phone","countryCode","number","Email","email","LinkedIn","social","linkedIn","Github","gitHub","UserExperiences","experiences","UserProjects","projects","UserSkills","skills","personalProjects","Experience","exp","forEach","uexp","months","d1","Date","startDate","split","indexOf","toUpperCase","d2","isPresent","endDate","diff","getFullYear","getMonth","monthDiff","toFixed","Download","_this$props","btnClass","linkClass","value","type","tooltip","faFileDownload","target","rel","href","title","UserCard","cssClass","faUserSecret","faMapMarked","DownloadButton","resume","descriptionFor","dangerouslySetInnerHTML","__html","getText","replace","SkillCard","bar","getSkill","charts","skill","index","header","toLowerCase","getSkillTopics","getScoreLevels","skillsText","topics","tpcs","name","toString","Display_Description_Description","tpc","width","score","AnimatedVisibility","visibility_sensor_default","assign","partialVisibility","offset","onChange","notifyChange","react","About","visible","isVisible","Components_AnimatedVisibility_AnimatedVisibility","onSensorChange","Cards_UserCard_UserCard","Cards_SkillCard_SkillCard","Timeline","_ref","lineColor","color","defaultProps","StoryCard","when","where","who","whom","count","theme","background","borderColor","getProjectCount","Components_Timeline_Timeline","getStories","achievements","achDetails","achievement","details","other","ind","dto","Cards_StoryCard_StoryCard","company","office","addAchievements","addOtherResponsibilities","project","companyKey","misc","ActionButton","stopPropagation","assertThisInitialized","e","getIcon","faPhone","faEnvelope","faGithub","faLinkedinIn","faLaptop","faLaptopCode","ProjectCard","getProjectTitle","getElementFor","getSubProjects","getDemoLink","demo","getSourceLink","source","ProjectCard_Tags","tags","duration","subProjects","subProjs","link","Buttons_ActionButton_ActionButton","Tags","tag","Work","getProjectCards","options","getOptions","Cards_ProjectCard_ProjectCard","experience","find","Personal","Projects","setProjectType","Projects_Work","Projects_Personal","Skills","Main","Components_About_About","Components_Experience_Experience","Components_Projects_Projects","Components_Skills_Skills","Footer","Phone","App","Components_Header_Header","Components_Main_Main","Components_Footer_Footer","Boolean","window","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.329b618a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.e0bd2ee4.pdf\";","const MENU = {\r\n    ABOUT : 'ABOUT',\r\n    EXPERIENCE: 'EXPERIENCE', \r\n    PROJECTS: 'PROJECTS', \r\n    SKILLS: 'SKILLS' \r\n};\r\nconst PROJECTSTYPE = {\r\n    WORK : 'Work',\r\n    PERSONAL : 'Personal'\r\n}\r\nconst ICONTYPE = {\r\n    PHONE : 'PHONE',\r\n    EMAIL: 'EMAIL',\r\n    FILEDOWNLOAD : 'FILEDOWNLOAD',\r\n    GITHUB: 'GITHUB',\r\n    LINKEDIN:'LINKEDIN',\r\n    DEMO:'DEMO',\r\n    CODE:'CODE'\r\n};\r\nconst DESCRIPTIONFOR = { \r\n    USERDESCRIPTION: 'USERDESCRIPTION'\r\n};\r\n\r\nexport {\r\n    MENU,\r\n    PROJECTSTYPE,\r\n    ICONTYPE,\r\n    DESCRIPTIONFOR\r\n};","import React, {Component} from 'react';\r\nimport { Motion, StaggeredMotion, spring } from 'react-motion';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faHome, faBriefcase, faProjectDiagram, faTools } from '@fortawesome/free-solid-svg-icons';\r\n \r\nimport {MENU} from '../../Helpers/Enums';\r\nimport './DiscMenu.css';\r\n\r\nclass DiscMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            active: false,\r\n        }\r\n    }\r\n    menuClicked(item){\r\n        this.setState({ \r\n            active: !this.state.active \r\n        });\r\n        if(item)\r\n            this.props.onItemClick(item)\r\n    }\r\n    render() {\r\n        const menus = Object.keys(MENU).map(key=> MENU[key]);\r\n        const springOption = { stiffness: 330, damping: 20 };\r\n        const staggeredMetric =  { bottom: -45, opacity: 0 };\r\n        \r\n        const defaultStaggeredMotion = menus.map(() => staggeredMetric);\r\n\r\n        const nextStaggeredMotion = prevMotions => prevMotions.map((_, i) => {\r\n            return i === prevMotions.length - 1\r\n                ? {\r\n                    bottom: spring(this.state.active ? 0 : staggeredMetric.bottom, springOption),\r\n                    opacity: spring(this.state.active ? 1 : staggeredMetric.opacity, springOption),\r\n                } : {\r\n                    bottom: spring(prevMotions[i + 1].bottom, springOption),\r\n                    opacity: spring(prevMotions[i + 1].opacity, springOption),\r\n                };\r\n            }\r\n        );\r\n        const motionMatric = { scale: 0.675 };\r\n        const styleMotion = { scale: spring(this.state.active ? 1 : motionMatric.scale, springOption) };\r\n        return (\r\n            <div className=\"disc-menu-container\">\r\n                <StaggeredMotion defaultStyles={defaultStaggeredMotion} styles={nextStaggeredMotion}>\r\n                    {this.getDiscGroup(menus)}\r\n                </StaggeredMotion>\r\n                \r\n                <Motion defaultStyle={motionMatric} style={styleMotion}>\r\n                    { this.getMainDisc()}\r\n                </Motion>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n    getMainDisc(){\r\n        return interpolatingStyles =>\r\n            <Disc className=\"large\" onClick={() => this.menuClicked()} style={{ transform: 'scale(' + interpolatingStyles.scale + ')'}}>\r\n                <span className={this.state.active ? 'main-disc-icon active' : 'main-disc-icon'} />\r\n            </Disc>;\r\n    }\r\n    getDiscGroup(menus){\r\n        const getStyle = style =>{\r\n            return {\r\n                bottom: style.bottom,\r\n                opacity: style.opacity,\r\n                pointerEvents: this.state.active ? 'auto' : 'none',\r\n            };\r\n        }\r\n        return interpolatingStyles =>  <DiscGroup active={this.state.active ? 'active' : 'inactive' }>\r\n            { interpolatingStyles.map((style, i) =>\r\n                <Disc key={menus[i]} onClick={() => this.menuClicked(menus[i])} style={getStyle(style)}>\r\n                    <DiscLabel text={menus[i]}/>\r\n                    {this.iconFor(menus[i])}\r\n                </Disc>\r\n            )}\r\n        </DiscGroup>\r\n        \r\n    }\r\n\r\n    iconFor(menu){\r\n        switch(menu){\r\n            case MENU.PROJECTS:\r\n                return <FontAwesomeIcon icon={faProjectDiagram}/>;\r\n            case MENU.EXPERIENCE:\r\n                return <FontAwesomeIcon icon={faBriefcase}/>;\r\n            case MENU.SKILLS:\r\n                return <FontAwesomeIcon icon={faTools}/>;\r\n            default: \r\n                return <FontAwesomeIcon icon={faHome}/>;\r\n        }\r\n    }\r\n}\r\n\r\nconst DiscLabel = (props) => <span className=\"disc-label\" style={props.style}>{props.text}</span>;\r\n\r\nconst DiscGroup = (props) => <div className={classNames('disc-group', props.active)} style={props.style}>{props.children}</div>;\r\n\r\nconst Disc = (props) => <div className={classNames('disc', props.className)} style={props.style} onClick={props.onClick}>{props.children}</div>;\r\n\r\nDiscMenu.propTypes = {\r\n    onItemClick: PropTypes.func\r\n}\r\n\r\nexport default DiscMenu;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Header.css';\r\nimport DiscMenu from '../DiscMenu/DiscMenu';\r\n\r\nclass Header extends Component {\r\n    onItemClick(item){\r\n        this.props.setRoute(item);\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"header-bar\">\r\n                {this.props.route}\r\n                <DiscMenu onItemClick={this.onItemClick.bind(this)}></DiscMenu>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    setRoute : PropTypes.func,\r\n    route : PropTypes.string\r\n};\r\n\r\nexport default Header;","import data from '../Data/profile.json';\r\n\r\nconst UserDetails = {\r\n    FirstName : data.user ? data.user.firstName || '' :  '',\r\n    LastName : data.user ? data.user.lastName || '' : '',\r\n    FriendlyName: data.user ? (data.user.firstName || '').concat(' ', (data.user.lastName || '')) : '',\r\n    KnownAs : data.user ? (data.user.knownAs || '') : '',\r\n    Location : data.user ? (data.user.location || '') : '',\r\n    JobTitle : data.user ? (data.user.jobTitle || '') : '',\r\n    SubTitle : data.user ? (data.user.subTitle || '') : '',\r\n    Description : data.user ? (data.user.description || '') : ''\r\n};\r\n\r\nconst UserContacts = {\r\n    Mobile : data.user ? (''.concat(data.user.contact ? ('+', data.user.contact.phone.countryCode || '', data.user.contact.phone.number || '') : '')) : '',\r\n    Email: data.user && data.user.contact ? (data.user.contact.email || '') : '',\r\n    LinkedIn : data.user && data.user.contact && data.user.contact.social ? (data.user.contact.social.linkedIn || '') : '', \r\n    Github : data.user && data.user.contact && data.user.contact.social ?  (data.user.contact.social.gitHub || '') : '' \r\n};\r\n\r\nconst UserExperiences = data.experiences || [];\r\nconst UserProjects = data.projects || [];\r\nconst UserSkills = data.skills || [];\r\nconst PersonalProjects = data.personalProjects || [];\r\n\r\nUserDetails.Experience = () =>{\r\n    let exp = 0;\r\n    if(UserExperiences.length > 0){\r\n\r\n        function monthDiff(d1, d2) {\r\n            let diff;\r\n            diff = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n            diff -= d1.getMonth();\r\n            diff += d2.getMonth() +1;\r\n            return diff <= 0 ? 0 : diff;\r\n        }\r\n\r\n        UserExperiences.forEach((uexp)=>{\r\n            const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\r\n            let d1 = new Date(uexp.startDate.split(' ')[1], months.indexOf(uexp.startDate.split(' ')[0].toUpperCase()));\r\n            let d2 = uexp.isPresent ? new Date() : new Date(uexp.endDate.split(' ')[1], months.indexOf(uexp.endDate.split(' ')[0].toUpperCase()));\r\n            \r\n            exp += monthDiff(d1, d2);\r\n        });\r\n\r\n    }\r\n    return exp ? (exp/12).toFixed(1) : exp;\r\n}\r\n\r\nexport { \r\n    UserDetails, \r\n    UserContacts,\r\n    UserExperiences,\r\n    UserProjects,\r\n    PersonalProjects,\r\n    UserSkills\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\n\r\nclass Download extends Component {\r\n    render() {\r\n        const {btnClass, linkClass, value, type, tooltip, children} = this.props;\r\n        let icon = type === ICONTYPE.FILEDOWNLOAD ? faFileDownload : null;\r\n        return (\r\n            <button className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                    {children}\r\n                </a>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nDownload.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\nexport default Download;","import React, { Component } from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faUserSecret, faMapMarked} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport resume from '../../../Data/profile.pdf';\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\nimport {UserDetails} from '../../../Helpers/DataValidator';\r\nimport DownloadButton from '../../Buttons/DownloadButton/DownloadButton';\r\nimport './UserCard.css';\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        const cssClass = \"user-card \".concat(this.props.cssClass);\r\n        const knownAs = UserDetails.KnownAs.length ? \"(Known as \".concat(UserDetails.KnownAs, ')') : '';\r\n        return (\r\n            <div className={cssClass}>\r\n                <div className=\"user-icon\" title={UserDetails.KnownAs}>\r\n                    <FontAwesomeIcon icon={faUserSecret}/>\r\n                </div>\r\n                <div className=\"user-details user-name user-friendly-name\">\r\n                    {UserDetails.FriendlyName} \r\n                </div>\r\n                <div className=\"user-details user-name user-known-as\">\r\n                    {knownAs}\r\n                </div>\r\n                <div className=\"user-details user-name user-known-as\">\r\n                    {UserDetails.JobTitle}\r\n                </div>\r\n                <div className=\"user-details user-title\">\r\n                    {UserDetails.subTitle}\r\n                </div>\r\n                <div className=\"user-details user-based-in\">\r\n                    <FontAwesomeIcon icon={faMapMarked}/>\r\n                    <span className=\"iconed-label\">{UserDetails.Location}</span>\r\n                </div>\r\n                <div className=\"user-details download-wrapper\">\r\n                    <DownloadButton type={ICONTYPE.FILEDOWNLOAD}\r\n                        value={resume}\r\n                        btnClass=\"download-button resume\"\r\n                        linkClass=\"button-link\"\r\n                        tooltip=\"Download resume\">\r\n                        <span className=\"iconed-label\">Download Resume</span>                        \r\n                    </DownloadButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {UserDetails} from '../../../Helpers/DataValidator';\r\nimport {DESCRIPTIONFOR} from '../../../Helpers/Enums';\r\n\r\nclass Description extends Component {\r\n    render() {\r\n        const {cssClass, descriptionFor} = this.props;\r\n        return (\r\n            <div className={cssClass}>\r\n                <p dangerouslySetInnerHTML={{__html:`${this.getText(descriptionFor)}`}}></p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getText(key){\r\n        switch(key){\r\n            case DESCRIPTIONFOR.USERDESCRIPTION:\r\n                return UserDetails.Description.replace('{autoexp}', UserDetails.Experience());\r\n            default: return key;\r\n        }\r\n    }\r\n}\r\n\r\nDescription.propTypes = {\r\n    cssClass: PropTypes.string,\r\n    descriptionFor:PropTypes.string\r\n}\r\n\r\nexport default Description;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {UserSkills} from '../../../Helpers/DataValidator';\r\nimport Description from '../../Display/Description/Description';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {bar} = this.props;\r\n        return (\r\n            <div className=\"skill-card\">\r\n                {this.getSkill(bar)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSkill(bar){\r\n        if(!bar){\r\n            if(UserSkills.length){\r\n                let skillsText = '<strong>Core Competencies : </strong>'\r\n                UserSkills.forEach((skill, index) => {\r\n                    skillsText = skillsText.concat('<br/><em><u>', skill.header, '</u></em>');\r\n\r\n                    if(skill.topics && skill.topics.length){\r\n                        let topics = skill.topics.map(tpcs => tpcs.name);\r\n\r\n                        if(topics.length){\r\n                            skillsText = skillsText.concat('<em> : </em>', topics.toString().replace(/,/g, ', '));\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return (\r\n                    <Description cssClass=\"skills-text\" descriptionFor={skillsText}></Description>\r\n                );\r\n            } \r\n            return null;\r\n        } else {\r\n            const charts = UserSkills.map((skill, index) => {\r\n                const className = ''.concat('chart ', skill.header.toLowerCase());\r\n                return (\r\n                    <div key={index+1} className={className}>\r\n                        <span className=\"chart__title\">{skill.header}</span>\r\n                        <ul className=\"chart--horiz\">\r\n                            {this.getSkillTopics(skill)}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"skills\">\r\n                    {charts}\r\n                    {this.getScoreLevels()}\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    getSkillTopics(skill){\r\n        const topics = skill.topics.map((tpc, index) => {\r\n            const width = tpc.score.toString().concat('%');\r\n            return (\r\n                <li key={index+1} className=\"chart__bar\" style={{width: `${width}`}}>\r\n                    <span className=\"chart__label\">\r\n                        {tpc.name}\r\n                    </span>\r\n                </li>\r\n            );    \r\n        });\r\n\r\n        return topics;\r\n    }\r\n\r\n    getScoreLevels(){\r\n        if(!UserSkills.length) return (\r\n            <span className=\"no-skills\">Skills not found!</span>\r\n        );\r\n        return(\r\n            <ul className=\"lines\">\r\n                <li className=\"line l--0\">\r\n                    <span className=\"line__label\">\r\n                        Started\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--25\">\r\n                    <span className=\"line__label\">\r\n                        Beginner\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--50\">\r\n                    <span className=\"line__label\">\r\n                        Itermediate\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--75\">\r\n                    <span className=\"line__label\">\r\n                        Advanced\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--100\">\r\n                    <span className=\"line__label\">\r\n                        Expert\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nSkillCard.propTypes = {\r\n    bar : PropTypes.bool\r\n}\r\nexport default SkillCard;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nimport './AnimatedVisibility.css';\r\n\r\n\r\nclass AnimatedVisibility extends Component {\r\n    render() {\r\n        const visibilitySensorProps = { \r\n            partialVisibility: true, \r\n            offset: { \r\n                bottom: 50 \r\n            } \r\n        };\r\n        const {children} = this.props;\r\n        return (\r\n            <div className=\"animated-visibility-container\">\r\n                <VisibilitySensor {...visibilitySensorProps} onChange={this.props.notifyChange}>\r\n                    <Fragment>\r\n                        {children}\r\n                    </Fragment>\r\n                </VisibilitySensor>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedVisibility.propTypes = {\r\n    notifyChange : PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ])\r\n};\r\nexport default AnimatedVisibility;","import React, { Component } from 'react';\r\n\r\nimport UserCard from \"../Cards/UserCard/UserCard\";\r\nimport Description from '../Display/Description/Description';\r\nimport {DESCRIPTIONFOR} from '../../Helpers/Enums';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nimport './About.css';\r\nimport AnimatedVisibility from '../AnimatedVisibility/AnimatedVisibility';\r\n\r\nclass About extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n    render() {\r\n        const {visible} = this.state;\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"content-wrapper\">\r\n                    <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                        <UserCard cssClass={`${visible ? 'about-content bounce-in' : 'about-content is-hidden'}`}/>\r\n\r\n                        <Description cssClass={`${visible ? 'about-content about-description bounce-in' : 'about-content about-description is-hidden'}`}\r\n                                descriptionFor={DESCRIPTIONFOR.USERDESCRIPTION}/>\r\n                            \r\n                        <div className={`${visible ? 'about-content bounce-in' : 'about-content is-hidden'}`}>\r\n                            <SkillCard bar={false}/>\r\n                        </div>\r\n                    </AnimatedVisibility>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Timeline.css';\r\n\r\nconst Timeline = ({ children, className, lineColor }) => (\r\n    <div className={classNames(className, 'timeline')} style={{ color: `${lineColor}` }}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]).isRequired,\r\n    className: PropTypes.string,\r\n    lineColor: PropTypes.string\r\n};\r\n\r\nTimeline.defaultProps = {\r\n    className: '',\r\n    lineColor: '#000'\r\n};\r\n\r\nexport default Timeline;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AnimatedVisibility from '../../AnimatedVisibility/AnimatedVisibility';\r\nimport './StoryCard.css';\r\n\r\n\r\nclass StoryCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n\r\n    render(){\r\n        let {when, where, who, whom, count, theme, children} = this.props,\r\n            {visible } = this.state;\r\n\r\n        if(whom.length > 0){\r\n            whom = '@ '.concat(whom, ', ', where);\r\n        }\r\n\r\n        return ( \r\n            <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                <div className=\"story-caption-wrapper\" style={{color:`${theme}`}}>\r\n                    <div className={`${visible ? 'bounce-in' : 'is-hidden'}`}>\r\n                        <span className=\"story-caption-container\">\r\n                            <time className=\"story-caption\"\r\n                                style={{background:`${theme}`}}\r\n                                title={when}>\r\n                                {when}\r\n                            </time>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"story-continer\">\r\n                    <div className={`story-content ${ visible ? 'bounce-in' : 'is-hidden'} ${children === '' ? 'empty' : ''}`}\r\n                        style={{borderColor:`${theme}`}}>\r\n                        <h3 style={{color:`${theme}`}}>{who}</h3>\r\n                        <h4 style={{color:`${theme}`}}>{whom}</h4>\r\n                        <hr/>\r\n                        {this.getProjectCount(count, theme)}\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </AnimatedVisibility>\r\n        );\r\n    }\r\n\r\n    getProjectCount(count, theme){\r\n        if(count > 0){\r\n            return (\r\n                <div className=\"project-count\" style={{background:`${theme}`}} title=\"Number of projects undertaken\">{count}</div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nStoryCard.propTypes = {\r\n    when : PropTypes.string,\r\n    where:PropTypes.string,\r\n    who:PropTypes.string,\r\n    whom:PropTypes.string,\r\n    count: PropTypes.number,\r\n    theme: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ])\r\n}\r\n\r\nStoryCard.defaultProps = {\r\n    when : '',\r\n    where:'',\r\n    who:'',\r\n    whom:'',\r\n    theme: '#ddd',\r\n    children: ''\r\n}\r\n\r\nexport default StoryCard;","import './Experience.css';\r\nimport Timeline from '../Timeline/Timeline';\r\nimport StoryCard from '../Cards/StoryCard/StoryCard';\r\nimport {UserExperiences, UserProjects} from '../../Helpers/DataValidator';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Experience extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"content-wrapper\">\r\n                    <Timeline lineColor={'#ddd'}>\r\n                        {this.getStories()}\r\n                    </Timeline>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n\r\n    addAchievements(exp){\r\n        let achievements = null;\r\n        if(exp.achievements && exp.achievements.length){\r\n            let achDetails = exp.achievements.map((achievement, index) => {\r\n                return (\r\n                    <li key={index.toString()}>{achievement.details}</li>\r\n                );\r\n            });\r\n            achievements = (\r\n                <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    <ol>\r\n                        {achDetails}\r\n                    </ol>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return achievements;\r\n    }\r\n\r\n    addOtherResponsibilities(exp){\r\n        return (exp.other ? (\r\n            <div>\r\n                <h5>Other responsibilities</h5>\r\n                <p>{exp.other}</p>\r\n            </div>\r\n        ): null);\r\n    }\r\n\r\n    getStories(){\r\n        if(!UserExperiences.length) return (\r\n            <span className=\"no-experiences\">No experience found!</span>\r\n        );\r\n        let stories = UserExperiences.map((exp, ind)=>{\r\n            let dto = this.dto(exp);\r\n            let when = dto.startDate.concat(' - ', dto.isPresent ? 'Present' : dto.endDate)\r\n            if(dto.startDate.length === 0 && (!dto.endDate || dto.endDate.length === 0)){\r\n                when = '';\r\n            }\r\n            return (\r\n                <StoryCard key={ind.toString()} theme={dto.theme}\r\n                    when= {when}\r\n                    who={dto.jobTitle}\r\n                    whom={dto.company}\r\n                    where={dto.office}\r\n                    count={this.getProjectCount(dto.key)}>\r\n                    <p>{dto.description}</p>\r\n                    {this.addAchievements(dto)}  \r\n                    {this.addOtherResponsibilities(dto)}  \r\n                </StoryCard>\r\n            );\r\n        });\r\n\r\n        return stories;\r\n    }\r\n    getProjectCount(key){\r\n        let count = 0;\r\n        UserProjects.forEach(project => {\r\n            if(key === project.companyKey){\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n    dto(exp){\r\n        return {\r\n            \"company\": exp.company || \"\",\r\n            \"office\": exp.office || \"\",\r\n            \"jobTitle\": exp.jobTitle || \"\",\r\n            \"isPresent\": exp.isPresent || false,\r\n            \"startDate\": exp.startDate || \"\",\r\n            \"endDate\" : exp.endDate || \"\",\r\n            \"description\": exp.description || \"\",\r\n            \"achievements\" : exp.achievements || [],\r\n            \"other\": exp.other || null,\r\n            \"key\":exp.misc.key,\r\n            \"theme\":exp.misc && exp.misc.theme ? exp.misc.theme: \"#000\"\r\n        };\r\n    }\r\n}\r\n\r\nexport default Experience;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhone, faEnvelope, faLaptop, faLaptopCode } from '@fortawesome/free-solid-svg-icons';\r\nimport {faLinkedinIn, faGithub} from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\n\r\nclass ActionButton extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.stopPropagation = this.stopPropagation.bind(this);\r\n    }\r\n    \r\n    stopPropagation(e){\r\n        e.stopPropagation();\r\n        // show toast msg \r\n    }\r\n\r\n    render() {\r\n        const {btnClass, linkClass, value, children, type, tooltip} = this.props;\r\n        let icon = this.getIcon(type);\r\n        return (\r\n            <div className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}\r\n                    onClick={this.stopPropagation}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                    {children}\r\n                </a>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    getIcon(type){\r\n        switch(type){\r\n            case ICONTYPE.PHONE:\r\n                return faPhone;\r\n            case ICONTYPE.EMAIL:\r\n                return faEnvelope;\r\n            case ICONTYPE.GITHUB:\r\n                return faGithub;\r\n            case ICONTYPE.LINKEDIN:\r\n                return faLinkedinIn;\r\n            case ICONTYPE.DEMO:\r\n                return faLaptop;\r\n            case ICONTYPE.CODE:\r\n                return faLaptopCode;\r\n            default: break;\r\n        }\r\n    }\r\n}\r\n\r\nActionButton.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\n\r\nexport default ActionButton;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Description from '../../Display/Description/Description';\r\nimport './ProjectCard.css';\r\nimport AnimatedVisibility from '../../AnimatedVisibility/AnimatedVisibility';\r\nimport ActionButton from '../../Buttons/ActionButton/ActionButton';\r\nimport {ICONTYPE} from '../../../Helpers/Enums';\r\n\r\nclass ProjectCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {visible : false}\r\n    }\r\n    \r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n\r\n    render() {\r\n        const {project, theme, children, index} = this.props;\r\n        const {visible} = this.state;\r\n        return (\r\n            <AnimatedVisibility notifyChange={(isVisible) => this.onSensorChange(isVisible)}>\r\n                <div className={`${visible ? 'bounce-in project-card' : 'is-hidden project-card'}`} style={{borderColor:`${theme}`}}>\r\n                    {this.getProjectTitle(project, 'project-header project-title', index, theme)}\r\n                    {children}\r\n                    {this.getElementFor('About Project', project.description)}\r\n                    {this.getSubProjects(project)}\r\n                    <div className=\"project-links\">\r\n                        {this.getDemoLink(project.demo)}\r\n                        {this.getSourceLink(project.source)}\r\n                    </div>\r\n                    <Tags tags={project.tags ? project.tags.toString() : null} theme={theme}/>\r\n                </div>\r\n            </AnimatedVisibility>\r\n        );\r\n    }\r\n    getProjectTitle(project, className, key, theme){\r\n        if(project.title.length && project.startDate.length){\r\n            const duration = project.companyKey ? ' ('.concat(project.startDate, ' - ', project.isPresent ? 'Present' : project.endDate, ' )') : ' ('.concat(project.startDate, ')');\r\n            return (\r\n                <div className={className} key={key} style={{background:`${theme}`}}>\r\n                    {project.title}\r\n                    <small className=\"project-duration\">{duration}</small>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSubProjects(project){\r\n        const subProjects = project.subProjects.map((subProjs, index)=> {\r\n            const title = this.getProjectTitle(subProjs, 'sub-project-title', index);\r\n            if(title){\r\n                if(index === 0){\r\n                    return [(<div key=\"-1\" className=\"sub-project-header\"><strong>Sub-projects</strong></div>), title]\r\n                }\r\n                return title;\r\n            }\r\n            return null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"project-content sub-projects\">\r\n                {subProjects}\r\n            </div>\r\n        );\r\n    }\r\n    getElementFor(type, text){\r\n        if(text.length){\r\n            return (\r\n                <Description cssClass={type.concat(' project-content')} descriptionFor={`${'<strong>'.concat(type,'  : </strong>')} ${text}`}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n    getSourceLink(link){\r\n        if(link && link.length){\r\n            return (\r\n                <ActionButton type={ICONTYPE.CODE}\r\n                            value={link} \r\n                            btnClass=\"project-link code\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"View source\">\r\n                            <span className=\"action-text\">Source</span> \r\n                </ActionButton>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    getDemoLink(link){\r\n        if(link && link.length){\r\n            return (\r\n                <ActionButton type={ICONTYPE.DEMO}\r\n                            value={link} \r\n                            btnClass=\"project-link demo\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"View demo\">\r\n                            <span className=\"action-text\">Demo</span> \r\n                </ActionButton>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nProjectCard.propTypes = {\r\n    project : PropTypes.instanceOf(Object),\r\n    theme : PropTypes.string,\r\n    index : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nconst Tags = (props) => {\r\n    if(!props.tags) return null;\r\n\r\n    const tags = props.tags.split(',').map((tag, index) => <span className=\"tag-chips\" key={index}  style={{background:`${props.theme}`}}>{tag}</span>);\r\n    return (\r\n        <div className=\"project-tags\">\r\n            {tags}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import React, { Component } from 'react';\r\n\r\nimport {UserProjects,  UserExperiences} from '../../Helpers/DataValidator';\r\nimport ProjectCard from '../Cards/ProjectCard/ProjectCard';\r\n\r\nclass Work extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getProjectCards()}\r\n            </div>\r\n        );\r\n    }\r\n    getProjectCards(){\r\n        if(!UserProjects.length) return (\r\n            <span className=\"no-projects\">No projects found!</span>\r\n        );\r\n        return UserProjects.map((project, index) =>{\r\n            if(!project.companyKey) return null;\r\n            const options = this.getOptions(project.companyKey);\r\n            return (\r\n                <ProjectCard key={index+1} index={(index+1).toString()} project={project} theme={options.theme}>\r\n                    <div className=\"project-header project-company\" style={{background:`${options.theme}`}}>{options.company}</div>\r\n                </ProjectCard>\r\n            );\r\n        });\r\n    }\r\n    \r\n    getOptions(companyKey){\r\n        const experience = UserExperiences.find(function(exp) {\r\n            return (exp.misc.key === companyKey);\r\n        });\r\n        \r\n        return { \r\n            company: experience ? experience.company : '',\r\n            theme: experience ? experience.misc.theme : '#000'\r\n        };\r\n    }\r\n}\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\n\r\nimport {UserProjects} from '../../Helpers/DataValidator';\r\nimport ProjectCard from '../Cards/ProjectCard/ProjectCard';\r\n\r\nclass Personal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getProjectCards()}\r\n            </div>\r\n        );\r\n    }\r\n    getProjectCards(){\r\n        if(!UserProjects.length){\r\n            return <span className=\"no-projects\">No projects found!</span>;\r\n        }\r\n\r\n        return UserProjects.map((project, index) =>{\r\n            if(project.companyKey) return null;\r\n            return (\r\n                <ProjectCard key={index+1} index={(index+1).toString()} project={project} theme='#000'>\r\n                    <div className=\"project-header project-company\" style={{background:'#000'}}>Personal</div>\r\n                </ProjectCard>\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default Personal;","import React, { Component } from 'react';\r\n\r\nimport Work from './Work';\r\nimport Personal from './Personal';\r\nimport {PROJECTSTYPE} from '../../Helpers/Enums';\r\n\r\nimport './Projects.css';\r\n\r\nclass Projects extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            type : PROJECTSTYPE.WORK\r\n        };\r\n    }\r\n    setProjectType(type){\r\n        this.setState({\r\n            type:type\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"toolbar\">\r\n                    <span onClick={() => this.setProjectType(PROJECTSTYPE.WORK)} className={this.state.type === PROJECTSTYPE.WORK ? \"toolbar-button active\" : \"toolbar-button\"}>Work</span>\r\n                    <span onClick={() => this.setProjectType(PROJECTSTYPE.PERSONAL)} className={this.state.type === PROJECTSTYPE.PERSONAL ? \"toolbar-button active\" : \"toolbar-button\"}>Personal</span>\r\n                </div>\r\n                <div className=\"content-wrapper\">\r\n                    {this.getProjectCards()}\r\n                </div>            \r\n            </article>\r\n        );\r\n    }\r\n    getProjectCards(){\r\n        switch(this.state.type){\r\n            case PROJECTSTYPE.WORK:\r\n                return <Work/>;\r\n            case PROJECTSTYPE.PERSONAL:\r\n                return <Personal/>;\r\n            default: return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Projects;","import './Skills.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nclass Skills extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"content-wrapper\">\r\n                    <SkillCard bar={true}/>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport {MENU} from '../../Helpers/Enums';\r\nimport About from '../About/About';\r\nimport Experience from '../Experience/Experience';\r\nimport Projects from '../Projects/Projects';\r\nimport Skills from '../Skills/Skills';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        if(this.props.route === MENU.ABOUT){\r\n            return (<About/>);\r\n        } else if(this.props.route === MENU.EXPERIENCE){\r\n            return (<Experience/>);\r\n        } else if(this.props.route === MENU.PROJECTS){\r\n            return (<Projects/>);\r\n        } else if(this.props.route === MENU.SKILLS){\r\n            return (<Skills/>);\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nimport ActionButton from '../Buttons/ActionButton/ActionButton';\r\nimport {UserContacts} from '../../Helpers/DataValidator';\r\nimport {ICONTYPE} from '../../Helpers/Enums';\r\n\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <ActionButton type={ICONTYPE.PHONE}\r\n                            value={'tel:'.concat(UserContacts.Phone)} \r\n                            btnClass=\"disc phone\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"Click to ring me\">\r\n                </ActionButton>\r\n                <ActionButton type={ICONTYPE.EMAIL}\r\n                            value={'mailto:'.concat(UserContacts.Email)} \r\n                            btnClass=\"disc email\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"Click to open email client\">\r\n                </ActionButton>\r\n                <ActionButton type={ICONTYPE.LINKEDIN}\r\n                            value={UserContacts.LinkedIn} \r\n                            btnClass=\"disc linkedin\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"Visit my linkedIn profile\">\r\n                </ActionButton>\r\n                <ActionButton type={ICONTYPE.GITHUB}\r\n                            value={UserContacts.Github} \r\n                            btnClass=\"disc github\" \r\n                            linkClass=\"button-link\"\r\n                            tooltip=\"Visit my github\">\r\n                </ActionButton>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\nimport {MENU} from '../../Helpers/Enums';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state= {\n      route : MENU.ABOUT\n    }\n  }\n  render() {\n    return (\n      <div className=\"personal-profile\">\n        <Header route={this.state.route} setRoute={this.setRoute.bind(this)} />\n        <Main route={this.state.route}/>\n        <Footer/>\n      </div>\n    );\n  }\n  setRoute(route) {\n    this.setState({\n      route : route\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}