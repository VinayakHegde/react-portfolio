{"version":3,"sources":["Data/profile.pdf","Components/Helpers/Contants.js","Components/Nav/Nav.js","Components/Footer/Footer.js","Components/Buttons/ActionButton/ActionButton.js","Components/Buttons/DownloadButton/DownloadButton.js","Components/Cards/UserCard/UserCard.js","Components/Display/Description/Description.js","Components/Cards/SkillCard/SkillCard.js","Components/About/About.js","Components/Timeline/Timeline.js","Components/Cards/StoryCard/StoryCard.js","Components/Experience/Experience.js","Components/Cards/ProjectCard/ProjectCard.js","Components/Projects/Projects.js","Components/Skills/Skills.js","Components/Main/Main.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONSTANTS","NAV","ABOUT","EXPERIENCE","PROJECTS","SKILLS","ICONTYPE","PHONE","EMAIL","FILEDOWNLOAD","DESCRIPTIONFOR","USERDESCRIPTION","Nav","evt","this","props","setRoute","target","dataset","react_default","a","createElement","className","onClick","bind","data-route","CONST","route","Component","Footer","ActionButton","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stopPropagation","assertThisInitialized","e","_this$props","btnClass","linkClass","value","children","type","tooltip","icon","faPhone","faEnvelope","rel","href","title","index_es","Download","faFileDownload","UserCard","contact","phone","defineValueFor","email","cssClass","concat","data","user","knownAs","faUser","getUserFriendlyName","faMapMarked","based","social","linkedIn","faLinkedinIn","gitHub","faGithub","DownloadButton","resume","Buttons_ActionButton_ActionButton","link","display","firstName","lastName","isRaw","countryCode","number","replace","_this2","raw","prefix","length","Description","descriptionFor","dangerouslySetInnerHTML","__html","getText","key","description","SkillCard","bar","getSkill","charts","skills","map","skill","index","name","toLowerCase","getSkillChips","libraries","getSkillLevels","skillsText","forEach","lib","toString","Display_Description_Description","width","score","style","About","Cards_UserCard_UserCard","Cards_SkillCard_SkillCard","Timeline","_ref","animate","lineColor","classNames","timeline--animate","color","defaultProps","StoryCard","onSensorChange","state","visible","isVisible","setState","when","where","who","whom","count","theme","visibilitySensorProps","empty","visibility_sensor_default","assign","onChange","react","background","borderColor","getProjectCount","partialVisibility","offset","bottom","Experience","Components_Timeline_Timeline","getStories","exp","achievements","achDetails","achievement","details","other","experience","ind","dto","startDate","isPresent","endDate","Cards_StoryCard_StoryCard","jobTitle","company","office","addAchievements","addOtherResponsibilities","projects","project","companyKey","misc","ProjectCard","console","log","getProjectTitle","getElementFor","getSubProjects","programming","tools","subProjects","subProjs","text","Projects","getProjectCards","options","getOptions","Cards_ProjectCard_ProjectCard","find","Skills","Main","Components_About_About","Components_Experience_Experience","Components_Projects_Projects","Components_Skills_Skills","App","Components_Nav_Nav","Components_Main_Main","Components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28c15f11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.a28a89b1.pdf\";","const CONSTANTS = {\r\n    NAV : {\r\n        ABOUT : 'ABOUT',\r\n        EXPERIENCE: 'EXPERIENCE', \r\n        PROJECTS: 'PROJECTS', \r\n        SKILLS: 'SKILLS' \r\n    },\r\n    ICONTYPE:{\r\n        PHONE : 'PHONE',\r\n        EMAIL: 'EMAIL',\r\n        FILEDOWNLOAD : 'FILEDOWNLOAD'\r\n    },\r\n    DESCRIPTIONFOR:{\r\n        USERDESCRIPTION: 'USERDESCRIPTION'\r\n    }\r\n};\r\n\r\nexport default CONSTANTS;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CONST from '../Helpers/Contants';\r\nimport './Nav.css';\r\n\r\nclass Nav extends Component {\r\n    onClick(evt){\r\n        this.props.setRoute(evt.target.dataset['route']);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"navigation-bar\">\r\n                <ul>\r\n                    <li onClick={this.onClick.bind(this)} \r\n                        data-route={CONST.NAV.ABOUT}\r\n                        className={this.props.route === CONST.NAV.ABOUT ? 'active-route' : 'inactive-route'}>\r\n                        {CONST.NAV.ABOUT}\r\n                    </li>\r\n                    <li onClick={this.onClick.bind(this)} \r\n                        data-route={CONST.NAV.EXPERIENCE}\r\n                        className={this.props.route === CONST.NAV.EXPERIENCE ? 'active-route' : 'inactive-route'}>\r\n                        {CONST.NAV.EXPERIENCE}\r\n                    </li>\r\n                    <li onClick={this.onClick.bind(this)} \r\n                        data-route={CONST.NAV.PROJECTS}\r\n                        className={this.props.route === CONST.NAV.PROJECTS ? 'active-route' : 'inactive-route'}>\r\n                        {CONST.NAV.PROJECTS}\r\n                    </li>\r\n                    <li onClick={this.onClick.bind(this)} \r\n                        data-route={CONST.NAV.SKILLS}\r\n                        className={this.props.route === CONST.NAV.SKILLS ? 'active-route' : 'inactive-route'}>\r\n                        {CONST.NAV.SKILLS}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNav.propTypes = {\r\n    setRoute : PropTypes.func,\r\n    route : PropTypes.string\r\n};\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                &copy; Do I reserve any rights on the code? Damn no, go ahead and copy from github\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport CONSTANTS from '../../Helpers/Contants';\r\n\r\nclass ActionButton extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.stopPropagation = this.stopPropagation.bind(this);\r\n    }\r\n    \r\n    stopPropagation(e){\r\n        e.stopPropagation();\r\n        // show toast msg \r\n    }\r\n\r\n    render() {\r\n        const {btnClass, linkClass, value, children, type, tooltip} = this.props;\r\n        let icon = type === CONSTANTS.ICONTYPE.PHONE ? faPhone : faEnvelope;\r\n        return (\r\n            <button className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}\r\n                    onClick={this.stopPropagation}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                </a>\r\n                {children}\r\n            </button>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nActionButton.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\n\r\nexport default ActionButton;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport CONSTANTS from '../../Helpers/Contants';\r\n\r\nclass Download extends Component {\r\n    render() {\r\n        const {btnClass, linkClass, value, type, tooltip, children} = this.props;\r\n        let icon = type === CONSTANTS.ICONTYPE.FILEDOWNLOAD ? faFileDownload : null;\r\n        return (\r\n            <button className={btnClass} >\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" \r\n                    className={linkClass}\r\n                    href={value}  \r\n                    title={tooltip}>\r\n                    <FontAwesomeIcon icon={icon}/>\r\n                    {children}\r\n                </a>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nDownload.propTypes = {\r\n    type : PropTypes.string,\r\n    value : PropTypes.string,\r\n    btnClass : PropTypes.string,\r\n    linkClass : PropTypes.string,\r\n    tooltip : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n}\r\nexport default Download;","import React, { Component } from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faUser, faMapMarked} from '@fortawesome/free-solid-svg-icons';\r\nimport {faLinkedinIn, faGithub} from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport data from '../../../Data/profile.json';\r\nimport resume from '../../../Data/profile.pdf';\r\n\r\nimport './UserCard.css';\r\nimport ActionButton from '../../Buttons/ActionButton/ActionButton';\r\nimport DownloadButton from '../../Buttons/DownloadButton/DownloadButton';\r\n\r\nimport CONSTANTS from '../../Helpers/Contants';\r\n\r\nclass UserCard extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.contact = {\r\n            phone : new this.defineValueFor(CONSTANTS.ICONTYPE.PHONE),\r\n            email : new this.defineValueFor(CONSTANTS.ICONTYPE.EMAIL)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const cssClass = \"user-card \".concat(this.props.cssClass);\r\n        return (\r\n            <div className={cssClass}>\r\n                <div className=\"user-icon\" title={data.user.knownAs}>\r\n                    <FontAwesomeIcon icon={faUser}/>\r\n                </div>\r\n                <div className=\"user-details user-name user-friendly-name\">\r\n                    {this.getUserFriendlyName()} \r\n                </div>\r\n                <div className=\"user-details user-name user-known-as\">\r\n                    (known as {data.user.knownAs})\r\n                </div>\r\n                <div className=\"user-details user-title\">\r\n                    {data.user.title}\r\n                </div>\r\n                <div className=\"user-details user-based-in\">\r\n                    <FontAwesomeIcon icon={faMapMarked}/>\r\n                    <span className=\"iconed-label\">{data.user.based}</span>\r\n                </div>\r\n                \r\n                <div className=\"user-details user-contact-social\">\r\n                    <a className=\"user-contact-link social\" target=\"_blank\" rel=\"noopener noreferrer\" \r\n                        href={data.user.contact.social.linkedIn}>\r\n                        <FontAwesomeIcon icon={faLinkedinIn}/>\r\n                    </a>  \r\n                    <a className=\"user-contact-link social\" target=\"_blank\" rel=\"noopener noreferrer\" \r\n                        href={data.user.contact.social.gitHub}>\r\n                        <FontAwesomeIcon icon={faGithub}/>\r\n                    </a> \r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"user-details user-contact-wrapper\">\r\n                    <DownloadButton type={CONSTANTS.ICONTYPE.FILEDOWNLOAD}\r\n                        value={resume}\r\n                        btnClass=\"user-contact-button resume\"\r\n                        linkClass=\"user-contact-link\"\r\n                        tooltip=\"Download resume\">\r\n                        <span className=\"iconed-label\">Download Resume</span>                        \r\n                    </DownloadButton>\r\n                    <ActionButton type={CONSTANTS.ICONTYPE.PHONE}\r\n                                    value={this.contact.phone.link('tel:')} \r\n                                    btnClass=\"user-contact-button phone\" \r\n                                    linkClass=\"user-contact-link\"\r\n                                    tooltip=\"Click to ring me\">\r\n                        <span className=\"iconed-label\">{this.contact.phone.display}</span>\r\n                    </ActionButton>\r\n                    <ActionButton type={CONSTANTS.ICONTYPE.EMAIL}\r\n                                    value={this.contact.email.link('mailto:')} \r\n                                    btnClass=\"user-contact-button email\" \r\n                                    linkClass=\"user-contact-link\"\r\n                                    tooltip=\"Click to open email client\">\r\n                        <span className=\"iconed-label\">{this.contact.email.display}</span>\r\n                    </ActionButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getUserFriendlyName(){\r\n        return ''.concat(data.user.firstName, ' ', data.user.lastName);\r\n    }\r\n\r\n    getUserPhoneNumber(isRaw){\r\n        if(isRaw){\r\n            return '+'.concat(data.user.contact.phone.countryCode, data.user.contact.phone.number.replace(/'-'/g, ''));\r\n        }\r\n        return '+'.concat(data.user.contact.phone.countryCode, ' (0) ', data.user.contact.phone.number);\r\n    }\r\n\r\n    \r\n\r\n    defineValueFor(type){\r\n        switch(type){\r\n            case CONSTANTS.ICONTYPE.EMAIL:\r\n                this.display = data.user.contact.email;\r\n                this.raw = data.user.contact.email;\r\n                break;\r\n            default: \r\n                this.display = '+'.concat(data.user.contact.phone.countryCode, ' (0) ', data.user.contact.phone.number);;\r\n                this.raw = '+'.concat(data.user.contact.phone.countryCode, data.user.contact.phone.number.replace(/'-'/g, ''));\r\n                break;\r\n        }\r\n        \r\n        this.link = prefix => {\r\n            if(prefix && prefix.length){\r\n                return prefix.concat(this.raw);\r\n            }\r\n            return this.raw;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport data from '../../../Data/profile.json';\r\nimport CONSTANTS from '../../Helpers/Contants';\r\n\r\nclass Description extends Component {\r\n    render() {\r\n        const {cssClass, descriptionFor} = this.props;\r\n        return (\r\n            <div className={cssClass}>\r\n                <p dangerouslySetInnerHTML={{__html:`${this.getText(descriptionFor)}`}}></p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getText(key){\r\n        switch(key){\r\n            case CONSTANTS.DESCRIPTIONFOR.USERDESCRIPTION:\r\n            return data.user.description;\r\n            default: return key;\r\n        }\r\n    }\r\n}\r\n\r\nDescription.propTypes = {\r\n    cssClass: PropTypes.string,\r\n    descriptionFor:PropTypes.string\r\n}\r\n\r\nexport default Description;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport data from '../../../Data/profile.json';\r\nimport Description from '../../Display/Description/Description';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {bar} = this.props;\r\n        return (\r\n            <div className=\"skill-card\">\r\n                {this.getSkill(bar)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSkill(bar){\r\n        if(!bar){\r\n            let skillsText = '<strong>Core Competencies : </strong>'\r\n            data.skills.forEach((skill, index) => {\r\n                skillsText = skillsText.concat('<br/><em><u>' ,skill.name, '</u></em>');\r\n\r\n                if(skill.libraries && skill.libraries.length){\r\n                    let libraries = skill.libraries.map(lib => lib.name);\r\n\r\n                    if(libraries.length){\r\n                        skillsText = skillsText.concat('<em> : </em>', libraries.toString().replace(/,/g, ', '));\r\n                    }\r\n                }\r\n            });\r\n\r\n            return (\r\n                <Description cssClass=\"skills-text\" descriptionFor={skillsText}></Description>\r\n            );\r\n        } else {\r\n            const charts = data.skills.map((skill, index) => {\r\n                const className = ''.concat('chart ', skill.name.toLowerCase());\r\n                return (\r\n                    <div key={index+1} className={className}>\r\n                        <span className=\"chart__title\">{skill.name}</span>\r\n                        <ul className=\"chart--horiz\">\r\n                            {this.getSkillChips(skill.libraries)}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"skills\">\r\n                    {charts}\r\n                    {this.getSkillLevels()}\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    getSkillChips(libraries){\r\n        const chips = libraries.map((lib, index) => {\r\n            const width = lib.score.toString().concat('%');\r\n            return (\r\n                <li key={index+1} className=\"chart__bar\" style={{width: `${width}`}}>\r\n                    <span className=\"chart__label\">\r\n                        {lib.name}\r\n                    </span>\r\n                </li>\r\n            );    \r\n        });\r\n\r\n        return chips;\r\n    }\r\n\r\n    getSkillLevels(){\r\n        return(\r\n            <ul className=\"lines\">\r\n                <li className=\"line l--0\">\r\n                    <span className=\"line__label\">\r\n                        Started\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--25\">\r\n                    <span className=\"line__label\">\r\n                        Beginner\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--50\">\r\n                    <span className=\"line__label\">\r\n                        Itermediate\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--75\">\r\n                    <span className=\"line__label\">\r\n                        Advanced\r\n                    </span>\r\n                </li>\r\n                <li className=\"line l--100\">\r\n                    <span className=\"line__label\">\r\n                        Expert\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nSkillCard.propTypes = {\r\n    bar : PropTypes.bool\r\n}\r\nexport default SkillCard;","import './About.css';\r\nimport UserCard from \"../Cards/UserCard/UserCard\";\r\nimport Description from '../Display/Description/Description';\r\nimport CONSTANTS from '../Helpers/Contants';\r\n\r\nimport React, { Component } from 'react';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        const skillCardBar = false;\r\n        return (\r\n            <article className=\"profile-content about\">\r\n                <UserCard cssClass=\"about-user-card\"/>\r\n                <div className=\"about-content \">\r\n                    <Description cssClass=\"about-description\"\r\n                        descriptionFor={CONSTANTS.DESCRIPTIONFOR.USERDESCRIPTION}/>\r\n                    <SkillCard bar={skillCardBar}/>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './Timeline.css';\r\n\r\nconst Timeline = ({ animate, children, className, lineColor }) => (\r\n    <div className=\"timeline-wrapper\">\r\n        <div className={classNames(className, 'timeline', {\r\n            'timeline--animate': animate,\r\n            })} style={{ color: `${lineColor}` }}>\r\n                {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]).isRequired,\r\n    className: PropTypes.string,\r\n    lineColor: PropTypes.string,\r\n    animate: PropTypes.bool\r\n};\r\n\r\nTimeline.defaultProps = {\r\n    animate: true,\r\n    className: '',\r\n    lineColor: '#000'\r\n};\r\n\r\nexport default Timeline;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\nimport './StoryCard.css';\r\n\r\n\r\nclass StoryCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSensorChange = this.onSensorChange.bind(this);\r\n        this.state = { visible: false };\r\n    }\r\n\r\n    onSensorChange(isVisible){\r\n        isVisible && this.setState({visible:true});\r\n    }\r\n\r\n    render(){\r\n        let {when, where, who, whom, count, theme, children, visibilitySensorProps} = this.props,\r\n            {visible } = this.state;\r\n\r\n        if(whom.length > 0){\r\n            whom = '@ '.concat(whom, ', ', where);\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('story', {'empty': children === ''})} style={{color:`${theme}`}}>\r\n                <VisibilitySensor {...visibilitySensorProps} onChange={this.onSensorChange}>\r\n                    <Fragment>\r\n                        <div className=\"story-caption-wrapper\">\r\n                            <div className={`${visible ? 'bounce-in' : 'is-hidden'}`}>\r\n                                <span className=\"story-caption-container\">\r\n                                    <time className=\"story-caption\"\r\n                                        style={{background:`${theme}`}}\r\n                                        title={when}>\r\n                                        {when}\r\n                                    </time>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"story-continer\">\r\n                            <div className={`story-content ${ visible ? 'bounce-in' : 'is-hidden'}`}\r\n                                style={{borderColor:`${theme}`}}>\r\n                                <h3 style={{color:`${theme}`}}>{who}</h3>\r\n                                <h4 style={{color:`${theme}`}}>{whom}</h4>\r\n                                <hr/>\r\n                                {this.getProjectCount(count, theme)}\r\n                                {children}\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                </VisibilitySensor>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getProjectCount(count, theme){\r\n        if(count > 0){\r\n            return (\r\n                <div className=\"project-count\" style={{background:`${theme}`}} title=\"Number of projects undertaken\">{count}</div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nStoryCard.propTypes = {\r\n    when : PropTypes.string,\r\n    where:PropTypes.string,\r\n    who:PropTypes.string,\r\n    whom:PropTypes.string,\r\n    count: PropTypes.number,\r\n    theme: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]),\r\n    visibilitySensorProps: PropTypes.shape({})\r\n}\r\n\r\nStoryCard.defaultProps = {\r\n    when : '',\r\n    where:'',\r\n    who:'',\r\n    whom:'',\r\n    theme: '#ddd',\r\n    children: '',\r\n    visibilitySensorProps: { \r\n        partialVisibility: true, \r\n        offset: { \r\n            bottom: 50 \r\n        } \r\n    }\r\n}\r\n\r\nexport default StoryCard;","import './Experience.css';\r\nimport Timeline from '../Timeline/Timeline';\r\nimport StoryCard from '../Cards/StoryCard/StoryCard';\r\nimport data from '../../Data/profile.json';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Experience extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <Timeline lineColor={'#ddd'}>\r\n                    {this.getStories()}\r\n                </Timeline>\r\n            </article>\r\n        );\r\n    }\r\n\r\n    addAchievements(exp){\r\n        let achievements = null;\r\n        if(exp.achievements && exp.achievements.length){\r\n            let achDetails = exp.achievements.map((achievement, index) => {\r\n                return (\r\n                    <li key={index.toString()}>{achievement.details}</li>\r\n                );\r\n            });\r\n            achievements = (\r\n                <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    <ol>\r\n                        {achDetails}\r\n                    </ol>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return achievements;\r\n    }\r\n\r\n    addOtherResponsibilities(exp){\r\n        return (exp.other ? (\r\n            <div>\r\n                <h5>Other responsibilities</h5>\r\n                <p>{exp.other}</p>\r\n            </div>\r\n        ): null);\r\n    }\r\n\r\n    getStories(){\r\n        let stories = data.experience.map((exp, ind)=>{\r\n            let dto = this.dto(exp);\r\n            let when = dto.startDate.concat(' - ', dto.isPresent ? 'Present' : dto.endDate)\r\n            if(dto.startDate.length === 0 && (!dto.endDate || dto.endDate.length === 0)){\r\n                when = '';\r\n            }\r\n            return (\r\n                <StoryCard key={ind.toString()} theme={dto.theme}\r\n                    when= {when}\r\n                    who={dto.jobTitle}\r\n                    whom={dto.company}\r\n                    where={dto.office}\r\n                    count={this.getProjectCount(dto.key)}>\r\n                    <p>{dto.description}</p>\r\n                    {this.addAchievements(dto)}  \r\n                    {this.addOtherResponsibilities(dto)}  \r\n                </StoryCard>\r\n            );\r\n        });\r\n\r\n        return stories;\r\n    }\r\n    getProjectCount(key){\r\n        let count = 0;\r\n        data.projects.forEach(project => {\r\n            if(key === project.companyKey){\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n    dto(exp){\r\n        return {\r\n            \"company\": exp.company || \"\",\r\n            \"office\": exp.office || \"\",\r\n            \"jobTitle\": exp.jobTitle || \"\",\r\n            \"isPresent\": exp.isPresent || false,\r\n            \"startDate\": exp.startDate || \"\",\r\n            \"endDate\" : exp.endDate || \"\",\r\n            \"description\": exp.description || \"\",\r\n            \"achievements\" : exp.achievements || [],\r\n            \"other\": exp.other || null,\r\n            \"key\":exp.misc.key,\r\n            \"theme\":exp.misc && exp.misc.theme ? exp.misc.theme: \"#000\"\r\n        };\r\n    }\r\n}\r\n\r\nexport default Experience;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Description from '../../Display/Description/Description';\r\nimport './ProjectCard.css';\r\n\r\nclass ProjectCard extends Component {\r\n    render() {\r\n        const {project, theme, children, index} = this.props;\r\n        console.log(project);\r\n        return (\r\n            <div className=\"project-card\" style={{borderColor:`${theme}`}}>\r\n                {this.getProjectTitle(project, 'project-header project-title', index, theme)}\r\n                {children}\r\n                {this.getElementFor('About Project', project.description)}\r\n                {this.getSubProjects(project)}\r\n                {this.getElementFor('Programming', project.programming)}\r\n                {this.getElementFor('Tools', project.tools)}\r\n            </div>\r\n        );\r\n    }\r\n    getProjectTitle(project, className, key, theme){\r\n        if(project.title.length && project.startDate.length){\r\n            return (\r\n                <div className={className} key={key} style={{background:`${theme}`}}>\r\n                    {project.title}\r\n                    <small className=\"project-duration\">{' ('.concat(project.startDate, ' - ', project.isPresent ? 'Present' : project.endDate, ' )')}</small>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSubProjects(project){\r\n        const subProjects = project.subProjects.map((subProjs, index)=> {\r\n            const title = this.getProjectTitle(subProjs, 'sub-project-title', index);\r\n            if(title){\r\n                if(index === 0){\r\n                    return [(<div key=\"-1\" className=\"sub-project-header\"><strong>Sub-projects</strong></div>), title]\r\n                }\r\n                return title;\r\n            }\r\n            return null;\r\n        });\r\n\r\n        return (\r\n            <div className=\"project-content sub-projects\">\r\n                {subProjects}\r\n            </div>\r\n        );\r\n    }\r\n    getElementFor(type, text){\r\n        if(text.length){\r\n            return (\r\n                <Description cssClass={type.concat(' project-content')} descriptionFor={`${'<strong>'.concat(type,'  : </strong>')} ${text}`}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nProjectCard.propTypes = {\r\n    project : PropTypes.instanceOf(Object),\r\n    theme : PropTypes.string,\r\n    index : PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default ProjectCard;","import './Projects.css';\r\nimport ProjectCard from '../Cards/ProjectCard/ProjectCard';\r\nimport data from '../../Data/profile.json';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                {this.getProjectCards()}\r\n            </article>\r\n        );\r\n    }\r\n    getProjectCards(){\r\n        return data.projects.map((project, index) =>{\r\n            const options = this.getOptions(project.companyKey);\r\n            return (\r\n                <ProjectCard key={index+1} index={(index+1).toString()} project={project} theme={options.theme}>\r\n                    <div className=\"project-header project-company\" style={{background:`${options.theme}`}}>{options.company}</div>\r\n                </ProjectCard>\r\n            );\r\n        });\r\n    }\r\n    getOptions(companyKey){\r\n        const experience = data.experience.find(function(exp) {\r\n            return (exp.misc.key === companyKey);\r\n        });\r\n        \r\n        return { \r\n            company: experience ? experience.company : '',\r\n            theme: experience ? experience.misc.theme : '#000'\r\n        };\r\n    }\r\n}\r\n\r\nexport default Projects;","import './Skills.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport SkillCard from '../Cards/SkillCard/SkillCard';\r\n\r\nclass Skills extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"profile-content\">\r\n                <div className=\"skills-wrapper\">\r\n                    <SkillCard bar={true}/>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport CONST from '../Helpers/Contants';\r\nimport About from '../About/About';\r\nimport Experience from '../Experience/Experience';\r\nimport Projects from '../Projects/Projects';\r\nimport Skills from '../Skills/Skills';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        if(this.props.route === CONST.NAV.ABOUT){\r\n            return (<About/>);\r\n        } else if(this.props.route === CONST.NAV.EXPERIENCE){\r\n            return (<Experience/>);\r\n        } else if(this.props.route === CONST.NAV.PROJECTS){\r\n            return (<Projects/>);\r\n        } else if(this.props.route === CONST.NAV.SKILLS){\r\n            return (<Skills/>);\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport Main from '../Main/Main';\nimport './App.css';\nimport CONST from '../Helpers/Contants';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state= {\n      route : CONST.NAV.SKILLS\n    }\n  }\n  render() {\n    return (\n      <div className=\"personal-profile\">\n        <Nav route={this.state.route} setRoute={this.setRoute.bind(this)} />\n        <Main route={this.state.route}/>\n        <Footer/>\n      </div>\n    );\n  }\n  setRoute(route) {\n    this.setState({\n      route : route\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}