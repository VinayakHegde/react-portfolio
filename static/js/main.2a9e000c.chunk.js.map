{"version":3,"sources":["Data/vinayak.nandi@gmail.com.doc","Helpers/Enums.js","Components/Icon/Icon.jsx","Components/DiscMenu/Disc.jsx","Components/DiscMenu/DiscGroup.jsx","Components/DiscMenu/DiscLabel.jsx","Components/DiscMenu/DiscMenu.jsx","Components/Header/Header.jsx","Components/AnimatedVisibility/AnimatedVisibility.jsx","Helpers/DataValidator.js","Components/Buttons/DownloadButton/DownloadButton.jsx","Components/Cards/UserCard/UserCard.jsx","Components/Description/Description.jsx","Components/Cards/SkillCard/SkillChart.jsx","Components/Cards/SkillCard/SkillDescription.jsx","Components/Cards/SkillCard/SkillCard.jsx","Components/About/About.jsx","Components/Timeline/Timeline.jsx","Components/Cards/StoryCard/StoryCard.jsx","Components/Experience/Experience.jsx","Components/Buttons/ActionButton/ActionButton.jsx","Components/Cards/ProjectCard/Tags.jsx","Components/Cards/ProjectCard/ProjectCard.jsx","Components/Projects/Work.jsx","Components/Projects/Personal.jsx","Components/Projects/Projects.jsx","Components/Skills/Skills.jsx","Components/Main/Main.jsx","Components/Footer/Footer.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","MENU","ABOUT","EXPERIENCE","PROJECTS","SKILLS","PROJECTSTYPE","ICONTYPE","DESCRIPTIONFOR","Icon","_ref","icon","type","faWhatsapp","faEnvelope","faGithub","faLinkedinIn","faLaptop","faLaptopCode","faUserSecret","faMapMarked","faFileDownload","faProjectDiagram","faBriefcase","faTools","faHome","react_default","a","createElement","index_es","Disc","className","style","onClick","children","Object","assign","classNames","DiscGroup","active","DiscLabel","text","DiscMenu","onItemClick","_useState","useState","_useState2","slicedToArray","setActive","menus","keys","map","key","springOption","stiffness","damping","staggeredMetric","bottom","opacity","defaultStaggeredMotion","motionMatric","scale","styleMotion","spring","menuClicked","item","react_motion","defaultStyles","styles","prevMotions","_","i","length","interpolatingStyles","DiscMenu_DiscGroup","DiscMenu_Disc","objectSpread","pointerEvents","DiscMenu_DiscLabel","Components_Icon_Icon","defaultStyle","transform","Header","route","setRoute","Components_DiscMenu_DiscMenu","AnimatedVisibility","notifyChange","visibility_sensor_default","partialVisibility","offset","onChange","react","UserDetails","FirstName","data","user","firstName","LastName","lastName","FriendlyName","concat","KnownAs","knownAs","Location","location","JobTitle","jobTitle","SubTitle","subTitle","Description","description","UserContacts","Mobile","contact","phone","Email","email","LinkedIn","social","linkedIn","Github","gitHub","UserExperiences","experiences","UserProjects","projects","UserSkills","skills","personalProjects","Experience","exp","forEach","uexp","months","d1","Date","startDate","split","indexOf","toUpperCase","d2","isPresent","endDate","diff","getFullYear","getMonth","monthDiff","toFixed","Download","btnClass","linkClass","value","tooltip","target","rel","href","title","UserCard","cssClass","cssClassName","DownloadButton","resume","descriptionFor","dangerouslySetInnerHTML","__html","replace","getText","SkillChart","skill","index","header","toLowerCase","topics","tpc","width","score","toString","name","SkillDescription","skillsText","tpcs","Components_Description_Description","SkillCard","chart","SkillCard_SkillChart","SkillCard_SkillDescription","About","visible","setVisible","animationClass","Components_AnimatedVisibility_AnimatedVisibility","isVisible","Cards_UserCard_UserCard","Cards_SkillCard_SkillCard","Timeline","lineColor","color","defaultProps","StoryCard","when","where","who","whom","count","theme","background","borderColor","getProjectCount","project","companyKey","Components_Timeline_Timeline","ind","dto","company","office","achievements","other","misc","dataToObject","Cards_StoryCard_StoryCard","achievement","details","ActionButton","e","stopPropagation","Tags","tags","tag","getProjectTitle","ProjectCard","subProjects","subProjs","demo","Buttons_ActionButton_ActionButton","source","ProjectCard_Tags","Work","experience","find","options","Cards_ProjectCard_ProjectCard","Personal","Projects","setType","Projects_Work","Projects_Personal","Skills","Main","Components_About_About","Components_Experience_Experience","Components_Projects_Projects","Components_Skills_Skills","Footer","App","Components_Header_Header","Components_Main_Main","Components_Footer_Footer","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a9e000c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vinayak.nandi@gmail.com.a790ae30.doc\";","const MENU = {\r\n  ABOUT: \"ABOUT\",\r\n  EXPERIENCE: \"EXPERIENCE\",\r\n  PROJECTS: \"PROJECTS\",\r\n  SKILLS: \"SKILLS\"\r\n};\r\nconst PROJECTSTYPE = {\r\n  WORK: \"Work\",\r\n  PERSONAL: \"Personal\"\r\n};\r\nconst ICONTYPE = {\r\n  PHONE: \"PHONE\",\r\n  EMAIL: \"EMAIL\",\r\n  FILEDOWNLOAD: \"FILEDOWNLOAD\",\r\n  GITHUB: \"GITHUB\",\r\n  LINKEDIN: \"LINKEDIN\",\r\n  DEMO: \"DEMO\",\r\n  CODE: \"CODE\",\r\n  MAP: \"MAP\",\r\n  USER: \"USER\"\r\n};\r\nconst DESCRIPTIONFOR = {\r\n  USERDESCRIPTION: \"USERDESCRIPTION\"\r\n};\r\n\r\nexport { MENU, PROJECTSTYPE, ICONTYPE, DESCRIPTIONFOR };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLinkedinIn,\r\n  faGithub,\r\n  faWhatsapp\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faEnvelope,\r\n  faLaptop,\r\n  faLaptopCode,\r\n  faBriefcase,\r\n  faProjectDiagram,\r\n  faTools,\r\n  faHome,\r\n  faUserSecret,\r\n  faMapMarked,\r\n  faFileDownload\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ICONTYPE, MENU } from \"Helpers/Enums\";\r\n\r\nconst Icon = ({ type }) => {\r\n  let icon = \"\";\r\n  switch (type) {\r\n    case ICONTYPE.PHONE:\r\n      icon = faWhatsapp;\r\n      break;\r\n    case ICONTYPE.EMAIL:\r\n      icon = faEnvelope;\r\n      break;\r\n    case ICONTYPE.GITHUB:\r\n      icon = faGithub;\r\n      break;\r\n    case ICONTYPE.LINKEDIN:\r\n      icon = faLinkedinIn;\r\n      break;\r\n    case ICONTYPE.DEMO:\r\n      icon = faLaptop;\r\n      break;\r\n    case ICONTYPE.CODE:\r\n      icon = faLaptopCode;\r\n      break;\r\n    case ICONTYPE.USER:\r\n      icon = faUserSecret;\r\n      break;\r\n    case ICONTYPE.MAP:\r\n      icon = faMapMarked;\r\n      break;\r\n    case ICONTYPE.FILEDOWNLOAD:\r\n      icon = faFileDownload;\r\n      break;\r\n    case MENU.PROJECTS:\r\n      icon = faProjectDiagram;\r\n      break;\r\n    case MENU.EXPERIENCE:\r\n      icon = faBriefcase;\r\n      break;\r\n    case MENU.SKILLS:\r\n      icon = faTools;\r\n      break;\r\n    default:\r\n      icon = faHome;\r\n      break;\r\n  }\r\n\r\n  return <FontAwesomeIcon {...{ icon }} />;\r\n};\r\n\r\nIcon.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Disc = ({ className, style, onClick, children }) => (\r\n  <div className={classNames(\"disc\", className)} {...{ style, onClick }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDisc.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Disc;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscGroup = ({ active, style, children }) => (\r\n  <div className={classNames(\"disc-group\", active)} {...{ style }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDiscGroup.propTypes = {\r\n  active: PropTypes.string,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default DiscGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscLabel = ({ text, style }) => (\r\n  <span className=\"disc-label\" {...{ style }}>\r\n    {text}\r\n  </span>\r\n);\r\n\r\nDiscLabel.propTypes = {\r\n  text: PropTypes.string,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default DiscLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Motion, StaggeredMotion, spring } from \"react-motion\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport Icon from \"Components/Icon\";\r\nimport Disc from \"./Disc\";\r\nimport DiscGroup from \"./DiscGroup\";\r\nimport DiscLabel from \"./DiscLabel\";\r\nimport \"./DiscMenu.scss\";\r\n\r\nconst DiscMenu = ({ onItemClick }) => {\r\n  const [active, setActive] = useState(false);\r\n  const menus = Object.keys(MENU).map(key => MENU[key]);\r\n  const springOption = { stiffness: 330, damping: 20 };\r\n  const staggeredMetric = { bottom: -45, opacity: 0 };\r\n  const defaultStaggeredMotion = menus.map(() => staggeredMetric);\r\n  const motionMatric = { scale: 0.675 };\r\n  const styleMotion = {\r\n    scale: spring(active ? 1 : motionMatric.scale, springOption)\r\n  };\r\n  const menuClicked = item => {\r\n    setActive(!active);\r\n    if (item && onItemClick) onItemClick(item);\r\n  };\r\n  const nextStaggeredMotion = prevMotions =>\r\n    prevMotions.map((_, i) =>\r\n      i === prevMotions.length - 1\r\n        ? {\r\n            bottom: spring(active ? 0 : staggeredMetric.bottom, springOption),\r\n            opacity: spring(active ? 1 : staggeredMetric.opacity, springOption)\r\n          }\r\n        : {\r\n            bottom: spring(prevMotions[i + 1].bottom, springOption),\r\n            opacity: spring(prevMotions[i + 1].opacity, springOption)\r\n          }\r\n    );\r\n  return (\r\n    <div className=\"disc-menu-container\">\r\n      <StaggeredMotion\r\n        defaultStyles={defaultStaggeredMotion}\r\n        styles={nextStaggeredMotion}\r\n      >\r\n        {interpolatingStyles => (\r\n          <DiscGroup active={active ? \"active\" : \"inactive\"}>\r\n            {interpolatingStyles.map((style, i) => (\r\n              <Disc\r\n                key={menus[i]}\r\n                onClick={() => menuClicked(menus[i])}\r\n                style={{\r\n                  ...{ style, pointerEvents: active ? \"auto\" : \"none\" }\r\n                }}\r\n              >\r\n                <DiscLabel {...{ text: menus[i] }} />\r\n                <Icon {...{ type: menus[i] }} />\r\n              </Disc>\r\n            ))}\r\n          </DiscGroup>\r\n        )}\r\n      </StaggeredMotion>\r\n\r\n      <Motion defaultStyle={motionMatric} style={styleMotion}>\r\n        {interpolatingStyles => (\r\n          <Disc\r\n            className=\"large\"\r\n            onClick={() => menuClicked()}\r\n            style={{ transform: \"scale(\" + interpolatingStyles.scale + \")\" }}\r\n          >\r\n            <span\r\n              className={active ? \"main-disc-icon active\" : \"main-disc-icon\"}\r\n            ></span>\r\n          </Disc>\r\n        )}\r\n      </Motion>\r\n    </div>\r\n  );\r\n};\r\n\r\nDiscMenu.propTypes = {\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default DiscMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DiscMenu from \"Components/DiscMenu\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = ({ route, setRoute }) => (\r\n  <header className=\"header-bar\">\r\n    {route}\r\n    <DiscMenu onItemClick={setRoute} />\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  setRoute: PropTypes.func,\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport \"./AnimatedVisibility.scss\";\r\n\r\nconst AnimatedVisibility = ({ children, notifyChange }) => (\r\n  <div className=\"animated-visibility-container\">\r\n    <VisibilitySensor\r\n      {...{\r\n        partialVisibility: true,\r\n        offset: {\r\n          bottom: 50\r\n        },\r\n        onChange: notifyChange\r\n      }}\r\n    >\r\n      <Fragment>{children}</Fragment>\r\n    </VisibilitySensor>\r\n  </div>\r\n);\r\n\r\nAnimatedVisibility.propTypes = {\r\n  notifyChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default AnimatedVisibility;\r\n","import data from \"Data/profile.json\";\r\n\r\nconst UserDetails = {\r\n  FirstName: data.user ? data.user.firstName || \"\" : \"\",\r\n  LastName: data.user ? data.user.lastName || \"\" : \"\",\r\n  FriendlyName: data.user\r\n    ? (data.user.firstName || \"\").concat(\" \", data.user.lastName || \"\")\r\n    : \"\",\r\n  KnownAs: data.user ? data.user.knownAs || \"\" : \"\",\r\n  Location: data.user ? data.user.location || \"\" : \"\",\r\n  JobTitle: data.user ? data.user.jobTitle || \"\" : \"\",\r\n  SubTitle: data.user ? data.user.subTitle || \"\" : \"\",\r\n  Description: data.user ? data.user.description || \"\" : \"\"\r\n};\r\n\r\nconst UserContacts = {\r\n  Mobile: data.user && data.user.contact ? data.user.contact.phone || \"\" : \"\",\r\n  Email: data.user && data.user.contact ? data.user.contact.email || \"\" : \"\",\r\n  LinkedIn:\r\n    data.user && data.user.contact && data.user.contact.social\r\n      ? data.user.contact.social.linkedIn || \"\"\r\n      : \"\",\r\n  Github:\r\n    data.user && data.user.contact && data.user.contact.social\r\n      ? data.user.contact.social.gitHub || \"\"\r\n      : \"\"\r\n};\r\n\r\nconst UserExperiences = data.experiences || [];\r\nconst UserProjects = data.projects || [];\r\nconst UserSkills = data.skills || [];\r\nconst PersonalProjects = data.personalProjects || [];\r\n\r\nUserDetails.Experience = () => {\r\n  let exp = 0;\r\n  if (UserExperiences.length > 0) {\r\n    const monthDiff = (d1, d2) => {\r\n      let diff = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n      diff -= d1.getMonth();\r\n      diff += d2.getMonth() + 1;\r\n      return diff <= 0 ? 0 : diff;\r\n    };\r\n\r\n    UserExperiences.forEach(uexp => {\r\n      const months = [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\"\r\n      ];\r\n      const d1 = new Date(\r\n        uexp.startDate.split(\" \")[1],\r\n        months.indexOf(uexp.startDate.split(\" \")[0].toUpperCase())\r\n      );\r\n      const d2 = uexp.isPresent\r\n        ? new Date()\r\n        : new Date(\r\n            uexp.endDate.split(\" \")[1],\r\n            months.indexOf(uexp.endDate.split(\" \")[0].toUpperCase())\r\n          );\r\n\r\n      exp += monthDiff(d1, d2);\r\n    });\r\n  }\r\n  return exp ? (exp / 12).toFixed(1) : exp;\r\n};\r\n\r\nexport {\r\n  UserDetails,\r\n  UserContacts,\r\n  UserExperiences,\r\n  UserProjects,\r\n  PersonalProjects,\r\n  UserSkills\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Download = ({ btnClass, linkClass, value, tooltip, children }) => (\r\n  <button className={btnClass}>\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className={linkClass}\r\n      href={value}\r\n      title={tooltip}\r\n    >\r\n      {children}\r\n    </a>\r\n  </button>\r\n);\r\n\r\nDownload.propTypes = {\r\n  value: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  linkClass: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\nexport default Download;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport resume from \"Data/vinayak.nandi@gmail.com.doc\";\r\nimport DownloadButton from \"Components/Buttons/DownloadButton\";\r\nimport Icon from \"Components/Icon\";\r\nimport \"./UserCard.scss\";\r\n\r\nconst UserCard = ({ cssClass }) => {\r\n  const cssClassName = \"user-card \".concat(cssClass);\r\n  const knownAs = UserDetails.KnownAs.length\r\n    ? \"(Known as \".concat(UserDetails.KnownAs, \")\")\r\n    : \"\";\r\n  return (\r\n    <div className={cssClassName}>\r\n      <div className=\"user-icon\" title={UserDetails.KnownAs}>\r\n        <Icon type={ICONTYPE.USER} />\r\n      </div>\r\n      <div className=\"user-details user-name user-friendly-name\">\r\n        {UserDetails.FriendlyName}\r\n      </div>\r\n      <div className=\"user-details user-name user-known-as\">{knownAs}</div>\r\n      <div className=\"user-details user-name user-known-as\">\r\n        {UserDetails.JobTitle}\r\n      </div>\r\n      <div className=\"user-details user-title\">{UserDetails.subTitle}</div>\r\n      <div className=\"user-details user-based-in\">\r\n        <Icon type={ICONTYPE.MAP} />\r\n        <span className=\"iconed-label\">{UserDetails.Location}</span>\r\n      </div>\r\n      <div className=\"user-details download-wrapper\">\r\n        <DownloadButton\r\n          value={resume}\r\n          btnClass=\"download-button resume\"\r\n          linkClass=\"button-link\"\r\n          tooltip=\"Download resume\"\r\n        >\r\n          <Icon type={ICONTYPE.FILEDOWNLOAD} />\r\n          <span className=\"iconed-label\">Download Resume</span>\r\n        </DownloadButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  cssClass: PropTypes.string\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\n\r\nconst Description = ({ cssClass, descriptionFor }) => {\r\n  const getText = key => {\r\n    switch (key) {\r\n      case DESCRIPTIONFOR.USERDESCRIPTION:\r\n        return UserDetails.Description.replace(\r\n          \"{autoexp}\",\r\n          UserDetails.Experience()\r\n        );\r\n      default:\r\n        return key;\r\n    }\r\n  };\r\n  return (\r\n    <div className={cssClass}>\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: `${getText(descriptionFor)}`\r\n        }}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nDescription.propTypes = {\r\n  cssClass: PropTypes.string,\r\n  descriptionFor: PropTypes.string\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\n\r\nconst SkillChart = () => (\r\n  <div className=\"skills\">\r\n    {UserSkills.map((skill, index) => {\r\n      const className = \"\".concat(\"chart \", skill.header.toLowerCase());\r\n      return (\r\n        <div key={`skill-${index}`} className={className}>\r\n          <span className=\"chart__title\">{skill.header}</span>\r\n          <ul className=\"chart--horiz\">\r\n            {skill.topics.map((tpc, index) => {\r\n              const width = tpc.score.toString().concat(\"%\");\r\n              return (\r\n                <li\r\n                  key={index + 1}\r\n                  className=\"chart__bar\"\r\n                  style={{ width: `${width}` }}\r\n                >\r\n                  <span className=\"chart__label\">{tpc.name}</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    })}\r\n    {!UserSkills.length && <span className=\"no-skills\">Skills not found!</span>}\r\n    {UserSkills.length && (\r\n      <ul className=\"lines\">\r\n        <li className=\"line l--0\">\r\n          <span className=\"line__label\">Started</span>\r\n        </li>\r\n        <li className=\"line l--25\">\r\n          <span className=\"line__label\">Beginner</span>\r\n        </li>\r\n        <li className=\"line l--50\">\r\n          <span className=\"line__label\">Itermediate</span>\r\n        </li>\r\n        <li className=\"line l--75\">\r\n          <span className=\"line__label\">Advanced</span>\r\n        </li>\r\n        <li className=\"line l--100\">\r\n          <span className=\"line__label\">Expert</span>\r\n        </li>\r\n      </ul>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default SkillChart;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\nimport Description from \"Components/Description\";\r\n\r\nconst SkillDescription = () => {\r\n  if (UserSkills.length) {\r\n    let skillsText = \"<strong>Core Competencies : </strong>\";\r\n    UserSkills.forEach(skill => {\r\n      skillsText = skillsText.concat(\"<br/><em><u>\", skill.header, \"</u></em>\");\r\n\r\n      if (skill.topics && skill.topics.length) {\r\n        let topics = skill.topics.map(tpcs => tpcs.name);\r\n\r\n        if (topics.length) {\r\n          skillsText = skillsText.concat(\r\n            \"<em> : </em>\",\r\n            topics.toString().replace(/,/g, \", \")\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Description\r\n        {...{\r\n          cssClass: \"skills-text\",\r\n          descriptionFor: skillsText\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default SkillDescription;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SkillChart from \"./SkillChart\";\r\nimport SkillDescription from \"./SkillDescription\";\r\nimport \"./SkillCard.scss\";\r\n\r\nconst SkillCard = ({ chart }) => (\r\n  <div className=\"skill-card\">\r\n    {chart && <SkillChart />}\r\n    {!chart && <SkillDescription />}\r\n  </div>\r\n);\r\n\r\nSkillCard.propTypes = {\r\n  chart: PropTypes.bool\r\n};\r\nexport default SkillCard;\r\n","import React, { useState } from \"react\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport UserCard from \"Components/Cards/UserCard/UserCard\";\r\nimport Description from \"Components/Description\";\r\nimport SkillCard from \"Components/Cards/SkillCard/SkillCard\";\r\n\r\nimport \"./About.scss\";\r\n\r\nconst About = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const animationClass = visible ? \"bounce-in\" : \"is-hidden\";\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <AnimatedVisibility\r\n        {...{\r\n          notifyChange: isVisible => setVisible({ visible: isVisible })\r\n        }}\r\n      >\r\n        <UserCard\r\n          {...{\r\n            cssClass: `about-content ${animationClass}`\r\n          }}\r\n        />\r\n        <Description\r\n          {...{\r\n            cssClass: `about-content about-description ${animationClass}`,\r\n            descriptionFor: DESCRIPTIONFOR.USERDESCRIPTION\r\n          }}\r\n        />\r\n\r\n        <div className={`about-content ${animationClass}`}>\r\n          <SkillCard />\r\n        </div>\r\n      </AnimatedVisibility>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport \"./Timeline.scss\";\r\n\r\nconst Timeline = ({ children, className, lineColor }) => (\r\n  <div\r\n    className={classNames(className, \"timeline\")}\r\n    style={{ color: `${lineColor}` }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired,\r\n  className: PropTypes.string,\r\n  lineColor: PropTypes.string\r\n};\r\n\r\nTimeline.defaultProps = {\r\n  className: \"\",\r\n  lineColor: \"#000\"\r\n};\r\n\r\nexport default Timeline;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport \"./StoryCard.scss\";\r\n\r\nconst StoryCard = ({ when, where, who, whom, count, theme, children }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <AnimatedVisibility\r\n      notifyChange={isVisible => isVisible && setVisible(true)}\r\n    >\r\n      <div className=\"story-caption-wrapper\" style={{ color: `${theme}` }}>\r\n        <div className={`${visible ? \"bounce-in\" : \"is-hidden\"}`}>\r\n          <span className=\"story-caption-container\">\r\n            <time\r\n              className=\"story-caption\"\r\n              style={{ background: `${theme}` }}\r\n              title={when}\r\n            >\r\n              {when}\r\n            </time>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"story-continer\">\r\n        <div\r\n          className={`story-content ${visible ? \"bounce-in\" : \"is-hidden\"} ${\r\n            !children ? \"empty\" : \"\"\r\n          }`}\r\n          style={{ borderColor: `${theme}` }}\r\n        >\r\n          <h3 style={{ color: `${theme}` }}>{who}</h3>\r\n          <h4 style={{ color: `${theme}` }}>\r\n            {whom.length ? `@ ${whom}, ${where}` : \"\"}\r\n          </h4>\r\n          <hr />\r\n          {count > 0 && (\r\n            <div\r\n              className=\"project-count\"\r\n              style={{ background: `${theme}` }}\r\n              title=\"Number of projects undertaken\"\r\n            >\r\n              {count}\r\n            </div>\r\n          )}\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nStoryCard.propTypes = {\r\n  when: PropTypes.string,\r\n  where: PropTypes.string,\r\n  who: PropTypes.string,\r\n  whom: PropTypes.string,\r\n  count: PropTypes.number,\r\n  theme: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nStoryCard.defaultProps = {\r\n  when: \"\",\r\n  where: \"\",\r\n  who: \"\",\r\n  whom: \"\",\r\n  theme: \"#ddd\",\r\n  children: null\r\n};\r\n\r\nexport default StoryCard;\r\n","import React from \"react\";\r\nimport Timeline from \"Components/Timeline\";\r\nimport StoryCard from \"Components/Cards/StoryCard\";\r\nimport { UserExperiences, UserProjects } from \"Helpers/DataValidator\";\r\nimport \"./Experience.scss\";\r\n\r\nconst getProjectCount = key => {\r\n  let count = 0;\r\n  UserProjects.forEach(project => {\r\n    if (key === project.companyKey) {\r\n      count++;\r\n    }\r\n  });\r\n  return count;\r\n};\r\n\r\nconst dataToObject = exp => ({\r\n  company: exp.company || \"\",\r\n  office: exp.office || \"\",\r\n  jobTitle: exp.jobTitle || \"\",\r\n  isPresent: exp.isPresent || false,\r\n  startDate: exp.startDate || \"\",\r\n  endDate: exp.endDate || \"\",\r\n  description: exp.description || \"\",\r\n  achievements: exp.achievements || [],\r\n  other: exp.other || \"\",\r\n  key: exp.misc.key,\r\n  theme: exp.misc && exp.misc.theme ? exp.misc.theme : \"#000\"\r\n});\r\n\r\nconst Experience = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <Timeline lineColor={\"#ddd\"}>\r\n        {UserExperiences.length &&\r\n          UserExperiences.map((exp, ind) => {\r\n            const dto = dataToObject(exp);\r\n            const when =\r\n              dto.startDate.length === 0 &&\r\n              (!dto.endDate || dto.endDate.length === 0)\r\n                ? \"\"\r\n                : `${dto.startDate} - ${\r\n                    dto.isPresent ? \"Present\" : dto.endDate\r\n                  }`;\r\n            const { theme, jobTitle: who, company: whom, office: where } = dto;\r\n            return (\r\n              <StoryCard\r\n                key={ind}\r\n                {...{\r\n                  theme,\r\n                  when,\r\n                  who,\r\n                  whom,\r\n                  where,\r\n                  count: getProjectCount(dto.key)\r\n                }}\r\n              >\r\n                <p>{dto.description}</p>\r\n                {dto.achievements && dto.achievements.length > 0 && (\r\n                  <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    <ol>\r\n                      {dto.achievements.map((achievement, index) => (\r\n                        <li key={index.toString()}>{achievement.details}</li>\r\n                      ))}\r\n                    </ol>\r\n                  </div>\r\n                )}\r\n                {dto.other.length > 0 && (\r\n                  <div>\r\n                    <h5>Other responsibilities</h5>\r\n                    <p>{dto.other}</p>\r\n                  </div>\r\n                )}\r\n              </StoryCard>\r\n            );\r\n          })}\r\n        {!UserExperiences.length && (\r\n          <span className=\"no-experiences\">No experience found!</span>\r\n        )}\r\n      </Timeline>\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"Components/Icon\";\r\n\r\nconst ActionButton = ({\r\n  btnClass,\r\n  linkClass,\r\n  value,\r\n  children,\r\n  type,\r\n  tooltip\r\n}) => {\r\n  return (\r\n    <div className={btnClass}>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className={linkClass}\r\n        href={value}\r\n        title={tooltip}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {type && <Icon {...{ type }} />}\r\n        {children}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nActionButton.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  linkClass: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Tags = ({ tags, theme }) => {\r\n  if (!tags) return null;\r\n\r\n  return (\r\n    <div className=\"project-tags\">\r\n      {tags.split(\",\").map((tag, index) => (\r\n        <span\r\n          className=\"tag-chips\"\r\n          key={index}\r\n          style={{ background: `${theme}` }}\r\n        >\r\n          {tag}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  tags: PropTypes.string,\r\n  theme: PropTypes.string\r\n};\r\n\r\nexport default Tags;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Description from \"Components/Description\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport ActionButton from \"Components/Buttons/ActionButton\";\r\nimport Icon from \"Components/Icon\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport Tags from \"./Tags\";\r\nimport \"./ProjectCard.scss\";\r\n\r\nconst getProjectTitle = (project, className, key, theme) => {\r\n  if (project.title.length && project.startDate.length) {\r\n    const d1 = ` - ${project.isPresent ? \"Present\" : project.endDate}`;\r\n    return (\r\n      <div className={className} key={key} style={{ background: `${theme}` }}>\r\n        {project.title}\r\n        <small className=\"project-duration\">\r\n          {` (${project.startDate}${project.companyKey ? d1 : \"\"})`}\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst ProjectCard = ({ project, theme, children, index }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <AnimatedVisibility\r\n      notifyChange={isVisible => isVisible && setVisible(true)}\r\n    >\r\n      <div\r\n        className={`project-card ${visible ? \"bounce-in \" : \"is-hidden\"}`}\r\n        style={{ borderColor: `${theme}` }}\r\n      >\r\n        {getProjectTitle(project, \"project-header project-title\", index, theme)}\r\n        {children}\r\n        {project.description.length && (\r\n          <Description\r\n            {...{\r\n              cssClass: `about-project project-content`,\r\n              descriptionFor: `<strong>About Project : </strong> ${project.description}`\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"project-content sub-projects\">\r\n          {project.subProjects.map((subProjs, index) => {\r\n            const title = getProjectTitle(subProjs, \"sub-project-title\", index);\r\n            if (title) {\r\n              if (index === 0) {\r\n                return [\r\n                  <div key=\"-1\" className=\"sub-project-header\">\r\n                    <strong>Sub-projects</strong>\r\n                  </div>,\r\n                  title\r\n                ];\r\n              }\r\n              return title;\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div className=\"project-links\">\r\n          {project.demo && project.demo.length && (\r\n            <ActionButton\r\n              value={project.demo}\r\n              btnClass=\"project-link demo\"\r\n              linkClass=\"button-link\"\r\n              tooltip=\"View demo\"\r\n            >\r\n              <Icon type={ICONTYPE.DEMO} />\r\n              <span className=\"action-text\">Demo</span>\r\n            </ActionButton>\r\n          )}\r\n          {project.source && project.source.length && (\r\n            <ActionButton\r\n              value={project.source}\r\n              btnClass=\"project-link code\"\r\n              linkClass=\"button-link\"\r\n              tooltip=\"View source\"\r\n            >\r\n              <Icon type={ICONTYPE.CODE} />\r\n              <span className=\"action-text\">Source</span>\r\n            </ActionButton>\r\n          )}\r\n        </div>\r\n        <Tags\r\n          {...{ tags: project.tags ? project.tags.toString() : null, theme }}\r\n        />\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.instanceOf(Object),\r\n  theme: PropTypes.string,\r\n  index: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport { UserProjects, UserExperiences } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Work = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (!project.companyKey) return null;\r\n      const experience = UserExperiences.find(\r\n        exp => exp.misc.key === project.companyKey\r\n      );\r\n      const options = experience\r\n        ? {\r\n            company: experience.company || \"\",\r\n            theme: experience.misc.theme || \"#000\"\r\n          }\r\n        : {\r\n            company: \"\",\r\n            theme: \"#000\"\r\n          };\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme={options.theme}\r\n        >\r\n          <div\r\n            className=\"project-header project-company\"\r\n            style={{ background: `${options.theme}` }}\r\n          >\r\n            {options.company}\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Work;\r\n","import React from \"react\";\r\n\r\nimport { UserProjects } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Personal = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (project.companyKey) return null;\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme=\"#000\"\r\n        >\r\n          <div\r\n            className=\"project-header project-company\"\r\n            style={{ background: \"#000\" }}\r\n          >\r\n            Personal\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Personal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Work from \"./Work\";\r\nimport Personal from \"./Personal\";\r\nimport { PROJECTSTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Projects.scss\";\r\n\r\nconst Projects = () => {\r\n  const [type, setType] = useState(PROJECTSTYPE.WORK);\r\n\r\n  return (\r\n    <article className=\"profile-content\">\r\n      <div className=\"toolbar\">\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.WORK)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.WORK ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Work\r\n        </span>\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.PERSONAL)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.PERSONAL ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Personal\r\n        </span>\r\n      </div>\r\n      <div className=\"content-wrapper\">\r\n        {type === PROJECTSTYPE.WORK && <Work />}\r\n        {type === PROJECTSTYPE.PERSONAL && <Personal />}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport SkillCard from \"Components/Cards/SkillCard\";\r\nimport \"./Skills.scss\";\r\n\r\nconst Skills = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <SkillCard chart />\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport About from \"Components/About/About\";\r\nimport Experience from \"Components/Experience/Experience\";\r\nimport Projects from \"Components/Projects/Projects\";\r\nimport Skills from \"Components/Skills/Skills\";\r\nimport \"./Main.scss\";\r\n\r\nconst Main = ({ route }) => (\r\n  <article className=\"profile-content\">\r\n    {route === MENU.ABOUT && <About />}\r\n    {route === MENU.EXPERIENCE && <Experience />}\r\n    {route === MENU.PROJECTS && <Projects />}\r\n    {route === MENU.SKILLS && <Skills />}\r\n  </article>\r\n);\r\n\r\nMain.propTypes = {\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport ActionButton from \"Components/Buttons/ActionButton\";\r\nimport { UserContacts } from \"Helpers/DataValidator\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <ActionButton\r\n      type={ICONTYPE.PHONE}\r\n      value={`https://wa.me/${UserContacts.Mobile}?text=Hi%20Vinnie,%20I%20am%20impressed%20with%20your%20experience%20and%20skillset.%20Can%20we%20talk?`}\r\n      btnClass=\"disc phone\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Whatsapp me\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.EMAIL}\r\n      value={`mailto:${UserContacts.Email}`}\r\n      btnClass=\"disc email\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Email me\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.LINKEDIN}\r\n      value={UserContacts.LinkedIn}\r\n      btnClass=\"disc linkedin\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Visit my linkedIn profile\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.GITHUB}\r\n      value={UserContacts.Github}\r\n      btnClass=\"disc github\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Visit my github\"\r\n    />\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"Components/Header\";\r\nimport Main from \"Components/Main\";\r\nimport Footer from \"Components/Footer\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState(\"ABOUT\");\r\n  return (\r\n    <div className=\"personal-profile\">\r\n      <Header {...{ route, setRoute }} />\r\n      <Main {...{ route }} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}