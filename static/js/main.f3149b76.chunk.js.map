{"version":3,"sources":["Data/vinayak.nandi@gmail.com.doc","Helpers/Enums.js","Components/Icon/Icon.jsx","Components/DiscMenu/Disc.jsx","Components/DiscMenu/DiscGroup.jsx","Components/DiscMenu/DiscLabel.jsx","Components/DiscMenu/DiscMenu.jsx","Components/Header/Header.jsx","Components/AnimatedVisibility/AnimatedVisibility.jsx","Helpers/DataValidator.js","Components/Button/Button.jsx","Components/Cards/UserCard/UserCard.jsx","Components/Description/Description.jsx","Components/Cards/SkillCard/SkillChart.jsx","Components/Cards/SkillCard/SkillDescription.jsx","Components/Cards/SkillCard/SkillCard.jsx","hooks/useCssClass.js","Components/About/About.jsx","Components/Timeline/Timeline.jsx","Components/Cards/StoryCard/StoryCard.jsx","Components/Experience/Experience.jsx","Components/Tags/Tags.jsx","Components/Cards/ProjectCard/ProjectCard.jsx","Components/Projects/Work.jsx","Components/Projects/Personal.jsx","Components/Projects/Projects.jsx","Components/Skills/Skills.jsx","Components/Main/Main.jsx","Components/Footer/Footer.jsx","hooks/useLocalStorage.js","Components/App/App.jsx","index.js"],"names":["module","exports","MENU","ABOUT","EXPERIENCE","PROJECTS","SKILLS","PROJECTSTYPE","ICONTYPE","DESCRIPTIONFOR","Icon","icon","type","faWhatsapp","faEnvelope","faGithub","faLinkedinIn","faLaptop","faLaptopCode","faUserSecret","faMapMarked","faFileDownload","faProjectDiagram","faBriefcase","faTools","faHome","Disc","className","style","onClick","children","classNames","DiscGroup","active","DiscLabel","text","DiscMenu","onItemClick","useState","setActive","menus","Object","keys","map","key","springOption","stiffness","damping","staggeredMetric","bottom","opacity","defaultStaggeredMotion","motionMatric","scale","styleMotion","spring","menuClicked","item","defaultStyles","styles","prevMotions","_","i","length","interpolatingStyles","pointerEvents","defaultStyle","transform","Header","route","setRoute","AnimatedVisibility","setCssClass","partialVisibility","offset","onChange","isSet","UserDetails","FirstName","bio","LastName","FriendlyName","KnownAs","Location","JobTitle","SubTitle","Description","UserContacts","Mobile","phone","Email","email","LinkedIn","social","linkedIn","Github","gitHub","UserExperiences","experience","exp","assign","misc","UserProjects","concat","project","projects","proj","companyKey","Number","UserSkills","skill","header","Experience","forEach","uexp","months","d1","Date","startDate","split","indexOf","toUpperCase","d2","isPresent","endDate","diff","getFullYear","getMonth","monthDiff","toFixed","Button","btnClass","linkClass","value","tooltip","target","rel","href","title","e","stopPropagation","UserCard","cssClass","cssClassName","knownAs","subTitle","resume","descriptionFor","dangerouslySetInnerHTML","__html","replace","getText","SkillChart","index","toLowerCase","topics","tpc","width","score","toString","name","SkillDescription","skillsText","tpcs","SkillCard","chart","useCssClass","initialClass","setClass","newClass","About","Timeline","lineColor","color","defaultProps","StoryCard","when","where","who","whom","count","theme","background","borderColor","ind","dto","company","office","jobTitle","description","achievements","other","dataToObject","filter","achievement","details","Tags","tags","tag","getProjectTitle","ProjectCard","subProjects","subProjs","demo","source","Work","find","options","Personal","Projects","setType","Skills","Main","Footer","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","error","setItem","itemToStore","Function","stringify","Error","App","ReactDOM","render","document","getElementById"],"mappings":"khjBAAAA,EAAOC,QAAU,IAA0B,qD,wcCArCC,EAAO,CACXC,MAAO,QACPC,WAAY,aACZC,SAAU,WACVC,OAAQ,UAEJC,EACE,OADFA,EAEM,WAENC,EACG,QADHA,EAEG,QAFHA,EAGU,eAHVA,EAII,SAJJA,EAKM,WALNA,EAME,OANFA,EAOE,OAPFA,EAQC,MARDA,EASE,OAEFC,EACa,kB,uBCqDJC,EAnDF,SAAC,GAAc,IACtBC,EAAO,GACX,OAFyB,EAAXC,MAGZ,KAAKJ,EACHG,EAAOE,IACP,MACF,KAAKL,EACHG,EAAOG,IACP,MACF,KAAKN,EACHG,EAAOI,IACP,MACF,KAAKP,EACHG,EAAOK,IACP,MACF,KAAKR,EACHG,EAAOM,IACP,MACF,KAAKT,EACHG,EAAOO,IACP,MACF,KAAKV,EACHG,EAAOQ,IACP,MACF,KAAKX,EACHG,EAAOS,IACP,MACF,KAAKZ,EACHG,EAAOU,IACP,MACF,KAAKnB,EAAKG,SACRM,EAAOW,IACP,MACF,KAAKpB,EAAKE,WACRO,EAAOY,IACP,MACF,KAAKrB,EAAKI,OACRK,EAAOa,IACP,MACF,QACEb,EAAOc,IAIX,OAAO,kBAAC,IAAoB,CAAEd,U,gBCnDjBe,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,SAA9B,OACX,uCAAKH,UAAWI,IAAW,OAAQJ,IAAgB,CAAEC,QAAOC,YACzDC,ICUUE,EAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQL,EAAX,EAAWA,MAAOE,EAAlB,EAAkBA,SAAlB,OAChB,uCAAKH,UAAWI,IAAW,aAAcE,IAAa,CAAEL,UACrDE,ICQUI,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMP,EAAT,EAASA,MAAT,OAChB,wCAAMD,UAAU,cAAiB,CAAEC,UAChCO,I,+jBCML,I,EAuEeC,EAvEE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACRC,oBAAS,GADD,mBAC7BL,EAD6B,KACrBM,EADqB,KAE9BC,EAAQC,OAAOC,KAAKxC,GAAMyC,KAAI,SAAAC,GAAG,OAAI1C,EAAK0C,MAC1CC,EAAe,CAAEC,UAAW,IAAKC,QAAS,IAC1CC,EAAkB,CAAEC,QAAS,GAAIC,QAAS,GAC1CC,EAAyBX,EAAMG,KAAI,kBAAMK,KACzCI,EAAe,CAAEC,MAAO,MACxBC,EAAc,CAClBD,MAAOE,iBAAOtB,EAAS,EAAImB,EAAaC,MAAOR,IAE3CW,EAAc,SAAAC,GAClBlB,GAAWN,GACPwB,GAAQpB,GAAaA,EAAYoB,IAcvC,OACE,yBAAK9B,UAAU,uBACb,kBAAC,kBAAD,CACE+B,cAAeP,EACfQ,OAhBsB,SAAAC,GAAW,OACrCA,EAAYjB,KAAI,SAACkB,EAAGC,GAAJ,OACdA,IAAMF,EAAYG,OAAS,EACvB,CACEd,OAAQM,iBAAOtB,EAAS,EAAIe,EAAgBC,OAAQJ,GACpDK,QAASK,iBAAOtB,EAAS,EAAIe,EAAgBE,QAASL,IAExD,CACEI,OAAQM,iBAAOK,EAAYE,EAAI,GAAGb,OAAQJ,GAC1CK,QAASK,iBAAOK,EAAYE,EAAI,GAAGZ,QAASL,UAS/C,SAAAmB,GAAmB,OAClB,kBAAC,EAAD,CAAW/B,OAAQA,EAAS,SAAW,YACpC+B,EAAoBrB,KAAI,SAACf,EAAOkC,GAAR,OACvB,kBAAC,EAAD,CACElB,IAAKJ,EAAMsB,GACXjC,QAAS,kBAAM2B,EAAYhB,EAAMsB,KACjClC,MAAK,KACA,CAAEA,QAAOqC,cAAehC,EAAS,OAAS,UAG/C,kBAAC,EAAc,CAAEE,KAAMK,EAAMsB,KAC7B,kBAAC,EAAS,CAAElD,KAAM4B,EAAMsB,aAOlC,kBAAC,SAAD,CAAQI,aAAcd,EAAcxB,MAAO0B,IACxC,SAAAU,GAAmB,OAClB,kBAAC,EAAD,CACErC,UAAU,QACVE,QAAS,kBAAM2B,KACf5B,MAAO,CAAEuC,UAAW,SAAWH,EAAoBX,MAAQ,MAE3D,0BACE1B,UAAWM,EAAS,wBAA0B,yBCpD7CmC,G,MAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,4BAAQ3C,UAAU,cACf0C,EACD,kBAAC,EAAD,CAAUhC,YAAaiC,O,iBCoBZC,G,MAtBY,SAAC,GAAD,IAAGzC,EAAH,EAAGA,SAAU0C,EAAb,EAAaA,YAAb,OACzB,yBAAK7C,UAAU,wBACb,kBAAC,IAAqB,CACpB8C,mBAAmB,EACnBC,OAAQ,CACNzB,OAAQ,IAEV0B,SAAU,SAAAC,GAAK,OAAIA,GAASJ,EAAY,eAExC,kBAAC,WAAD,KAAW1C,O,gmBCVjB,IAAM+C,EAAc,CAClBC,UAAWC,KAAiB,GAC5BC,SAAUD,KAAgB,GAC1BE,aAAa,GAAD,OAAKF,KAAiB,GAAtB,YAA4BA,KAAgB,IACxDG,QAASH,KAAe,GACxBI,SAAUJ,KAAgB,GAC1BK,SAAUL,KAAgB,GAC1BM,SAAUN,KAAgB,GAC1BO,YAAaP,KAAmB,IAG5BQ,EAAe,CACnBC,OAAQT,IAAYU,OAAS,GAC7BC,MAAOX,IAAYY,OAAS,GAC5BC,SAAUb,IAAYc,OAAOC,UAAY,GACzCC,OAAQhB,IAAYc,OAAOG,QAAU,IAGjCC,EAAkBxD,OAAOC,KAAKwD,GAAYvD,KAAI,SAAAC,GAClD,IAAMuD,EAAMD,EAAWtD,GACvB,OAAOH,OAAO2D,OAAO,GAAID,EAAK,CAAEE,KAAK,KAAMF,EAAIE,KAAX,CAAiBzD,aAGjD0D,GAAe,MAAGC,OAAH,oBAChB9D,OAAOC,KAAK8D,GAAS7D,KAAI,SAAAC,GAAQ,IAAD,EAC3B6D,EAAWD,EAAQ5D,GACzB,OAAO,MAAG2D,OAAH,oBACFE,EAAS9D,KAAI,SAAA+D,GAAI,YACfA,EADe,CAElBC,WAAYC,OAAOhE,GAAO,EAAIA,EAAM,iBAMtCiE,EAAapE,OAAOC,KAAKoE,GAAOnE,KAAI,SAAAC,GAAG,OAC3CH,OAAO2D,OAAO,GAAIU,EAAMlE,GAAM,CAAEmE,OAAQnE,OAG1CiC,EAAYmC,WAAa,WACvB,IAAIb,EAAM,EACV,GAAIF,EAAgBlC,OAAS,EAAG,CAQ9BkC,EAAgBgB,SAAQ,SAAAC,GACtB,IAAMC,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEIC,EAAK,IAAIC,KACbH,EAAKI,UAAUC,MAAM,KAAK,GAC1BJ,EAAOK,QAAQN,EAAKI,UAAUC,MAAM,KAAK,GAAGE,gBAExCC,EAAKR,EAAKS,UACZ,IAAIN,KACJ,IAAIA,KACFH,EAAKU,QAAQL,MAAM,KAAK,GACxBJ,EAAOK,QAAQN,EAAKU,QAAQL,MAAM,KAAK,GAAGE,gBAGhDtB,GAjCgB,SAACiB,EAAIM,GACrB,IAAIG,EAA+C,IAAvCH,EAAGI,cAAgBV,EAAGU,eAGlC,OAFAD,GAAQT,EAAGW,YACXF,GAAQH,EAAGK,WAAa,IACT,EAAI,EAAIF,EA6BhBG,CAAUZ,EAAIM,MAGzB,OAAOvB,GAAOA,EAAM,IAAI8B,QAAQ,GAAK9B,G,qBC1CxB+B,GArCA,SAAC,GAOT,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,MACAvG,EAGI,EAHJA,SACAlB,EAEI,EAFJA,KACA0H,EACI,EADJA,QAEA,OACE,yBAAK3G,UAAWwG,GACd,uBACEI,OAAO,SACPC,IAAI,sBACJ7G,UAAWyG,EACXK,KAAMJ,EACNK,MAAOJ,EACPzG,QAAS,SAAA8G,GAAC,OAAIA,EAAEC,oBAEfhI,GAAQ,kBAAC,EAAS,CAAEA,SACpBkB,KCyBM+G,I,MAtCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAe,cAAcxC,OAAOuC,GACpCE,EAAUnE,EAAYK,QAAQnB,OAChC,aAAawC,OAAO1B,EAAYK,QAAS,KACzC,GACJ,OACE,yBAAKvD,UAAWoH,GACd,yBAAKpH,UAAU,gDACZkD,EAAYI,cAEf,yBAAKtD,UAAU,2CAA2CqH,GAC1D,yBAAKrH,UAAU,2CACZkD,EAAYO,UAEf,yBAAKzD,UAAU,6BAA6BkD,EAAYoE,UACxD,yBAAKtH,UAAU,gCACb,kBAAC,EAAD,CAAMf,KAAMJ,IACZ,0BAAMmB,UAAU,gBAAgBkD,EAAYM,WAE9C,yBAAKxD,UAAU,mCACb,kBAAC,GAAW,CACV0G,MAAOa,IACPf,SAAU,0BACVC,UAAW,cACXE,QAAS,kBACT1H,KAAMJ,GAEN,0BAAMmB,UAAU,gBAAhB,wBCHK2D,GA5BK,SAAC,GAAkC,IAAhCwD,EAA+B,EAA/BA,SAAUK,EAAqB,EAArBA,eAY/B,OACE,yBAAKxH,UAAWmH,GACd,uBACEM,wBAAyB,CACvBC,OAAO,GAAD,OAfE,SAAAzG,GACd,OAAQA,GACN,KAAKnC,EACH,OAAOoE,EAAYS,YAAYgE,QAC7B,YACAzE,EAAYmC,cAEhB,QACE,OAAOpE,GAOM2G,CAAQJ,SC4BdK,GA/CI,kBACjB,yBAAK7H,UAAU,UACZkF,EAAWlE,KAAI,SAACmE,EAAO2C,GACtB,IAAM9H,EAAY,GAAG4E,OAAO,SAAUO,EAAMC,OAAO2C,eACnD,OACE,yBAAK9G,IAAG,gBAAW6G,GAAS9H,UAAWA,GACrC,0BAAMA,UAAU,gBAAgBmF,EAAMC,QACtC,wBAAIpF,UAAU,gBACXmF,EAAM6C,OAAOhH,KAAI,SAACiH,EAAKH,GACtB,IAAMI,EAAQD,EAAIE,MAAMC,WAAWxD,OAAO,KAC1C,OACE,wBACE3D,IAAK6G,EAAQ,EACb9H,UAAU,aACVC,MAAO,CAAEiI,MAAM,GAAD,OAAKA,KAEnB,0BAAMlI,UAAU,gBAAgBiI,EAAII,gBAQhDnD,EAAW9C,QAAU,0BAAMpC,UAAU,aAAhB,qBACtBkF,EAAW9C,QACV,wBAAIpC,UAAU,SACZ,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,eAAhB,YAEF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,eAAhB,aAEF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,eAAhB,gBAEF,wBAAIA,UAAU,cACZ,0BAAMA,UAAU,eAAhB,aAEF,wBAAIA,UAAU,eACZ,0BAAMA,UAAU,eAAhB,cCTKsI,GA9BU,WACvB,GAAIpD,EAAW9C,OAAQ,CACrB,IAAImG,EAAa,wCAgBjB,OAfArD,EAAWI,SAAQ,SAAAH,GAGjB,GAFAoD,EAAaA,EAAW3D,OAAO,eAAgBO,EAAMC,OAAQ,aAEzDD,EAAM6C,QAAU7C,EAAM6C,OAAO5F,OAAQ,CACvC,IAAI4F,EAAS7C,EAAM6C,OAAOhH,KAAI,SAAAwH,GAAI,OAAIA,EAAKH,QAEvCL,EAAO5F,SACTmG,EAAaA,EAAW3D,OACtB,eACAoD,EAAOI,WAAWT,QAAQ,KAAM,YAOtC,kBAAC,GACK,CACFR,SAAU,cACVK,eAAgBe,IAKxB,OAAO,MCdME,I,MAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAK1I,UAAU,cACZ0I,GAAS,kBAAC,GAAD,OACRA,GAAS,kBAAC,GAAD,SCFAC,GANK,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACTjI,mBAASiI,GADA,mBAClCzB,EADkC,KACxBtE,EADwB,KAEnCgG,EAAW,SAAAC,GAAQ,OAAIjG,EAAYiG,IACzC,MAAO,CAAC3B,EAAU0B,IC+BLE,I,MA1BD,WAAO,IAAD,EACcJ,KADd,mBACXxB,EADW,KACDtE,EADC,KAGlB,OACE,yBAAK7C,UAAU,mBACb,kBAAC,EAAuB,CAAC6C,eACvB,kBAAC,GACK,CACFsE,SAAS,iBAAD,OAAmBA,KAG/B,kBAAC,GACK,CACFA,SAAS,mCAAD,OAAqCA,GAC7CK,eAAgB1I,IAIpB,yBAAKkB,UAAS,wBAAmBmH,IAC/B,kBAAC,GAAD,WCxBJ6B,I,MAAW,SAAC,GAAD,IAAG7I,EAAH,EAAGA,SAAUH,EAAb,EAAaA,UAAWiJ,EAAxB,EAAwBA,UAAxB,OACf,yBACEjJ,UAAWI,IAAWJ,EAAW,YACjCC,MAAO,CAAEiJ,MAAM,GAAD,OAAKD,KAElB9I,KAaL6I,GAASG,aAAe,CACtBnJ,UAAW,GACXiJ,UAAW,QAGED,UCpBTI,I,MAAY,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOvJ,EAAe,EAAfA,SAAe,EACxCwI,KADwC,mBACjExB,EADiE,KACvDtE,EADuD,KAGxE,OACE,kBAAC,EAAuB,CAACA,eACvB,yBAAK7C,UAAS,sCAAiCmH,GAAYlH,MAAO,CAAEiJ,MAAM,GAAD,OAAKQ,KAC5E,6BACE,0BAAM1J,UAAU,iCACd,0BACEA,UAAU,qBACVC,MAAO,CAAE0J,WAAW,GAAD,OAAKD,IACxB3C,MAAOsC,GAENA,MAKT,yBAAKrJ,UAAS,8BAAyBmH,IACrC,yBACEnH,UAAS,6BACNG,EAAqB,GAAV,SAEdF,MAAO,CAAE2J,YAAY,GAAD,OAAKF,KAEzB,wBAAIzJ,MAAO,CAAEiJ,MAAM,GAAD,OAAKQ,KAAYH,GACnC,wBAAItJ,MAAO,CAAEiJ,MAAM,GAAD,OAAKQ,KACpBF,EAAKpH,OAAL,YAAmBoH,EAAnB,aAA4BF,GAAU,IAEzC,6BACCG,EAAQ,GACP,yBACEzJ,UAAU,gBACVC,MAAO,CAAE0J,WAAW,GAAD,OAAKD,IACxB3C,MAAM,iCAEL0C,GAGJtJ,OAoBXiJ,GAAUD,aAAe,CACvBE,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNE,MAAO,OACPvJ,SAAU,MAGGiJ,U,qOCtEf,IA8Ee/D,GA5DI,kBACjB,6BAASrF,UAAU,mBACjB,yBAAKA,UAAU,mBACb,kBAAC,GAAD,CAAUiJ,UAAW,QAClB3E,EAAgBlC,QACfkC,EAAgBtD,KAAI,SAACwD,EAAKqF,GACxB,IAxBY5I,EAwBN6I,EApBG,SAAAtF,GAAG,MAAK,CAC3BuF,QAASvF,EAAIuF,SAAW,GACxBC,OAAQxF,EAAIwF,QAAU,GACtBC,SAAUzF,EAAIyF,UAAY,GAC1BjE,UAAWxB,EAAIwB,YAAa,EAC5BL,UAAWnB,EAAImB,WAAa,GAC5BM,QAASzB,EAAIyB,SAAW,GACxBiE,YAAa1F,EAAI0F,aAAe,GAChCC,aAAc3F,EAAI2F,cAAgB,GAClCC,MAAO5F,EAAI4F,OAAS,GACpBnJ,IAAKuD,EAAIE,KAAKzD,IACdyI,MAAOlF,EAAIE,MAAQF,EAAIE,KAAKgF,MAAQlF,EAAIE,KAAKgF,MAAQ,QAS/BW,CAAa7F,GACnB6E,EACqB,IAAzBS,EAAInE,UAAUvD,QACZ0H,EAAI7D,SAAkC,IAAvB6D,EAAI7D,QAAQ7D,OAD7B,UAGO0H,EAAInE,UAHX,cAIMmE,EAAI9D,UAAY,UAAY8D,EAAI7D,SAFlC,GAIEyD,EAAuDI,EAAvDJ,MAAiBH,EAAsCO,EAAhDG,SAAwBT,EAAwBM,EAAjCC,QAAuBT,EAAUQ,EAAlBE,OAC7C,OACE,kBAAC,GAAD,eACE/I,IAAK4I,G,2VADP,EAGIH,QACAL,OACAE,MACAC,OACAF,UAzCMrI,EA0Ca6I,EAAI7I,IA1CT,CAAEwI,MAAO9E,EAAa2F,QACpD,SAAAzF,GAAO,OAAK5D,IAAQ4D,EAAQG,cAC5B5C,WA2Cc,2BAAI0H,EAAII,aACPJ,EAAIK,cAAgBL,EAAIK,aAAa/H,OAAS,GAC7C,6BACE,sDACC0H,EAAIK,aAAa/H,OAAS,GACzB,4BACG0H,EAAIK,aAAanJ,KAAI,SAACuJ,EAAazC,GAAd,OACpB,wBAAI7G,IAAK6G,EAAMM,YAAamC,EAAYC,aAIjB,IAA5BV,EAAIK,aAAa/H,QAChB,2BAAI0H,EAAIK,aAAa,GAAGK,UAI7BV,EAAIM,MAAMhI,OAAS,GAClB,6BACE,sDACA,2BAAI0H,EAAIM,aAMlB9F,EAAgBlC,QAChB,0BAAMpC,UAAU,kBAAhB,4BCjDKyK,I,MAvBF,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMhB,EAAY,EAAZA,MACpB,OAAKgB,EAGH,yBAAK1K,UAAU,kBACZ0K,EAAK9E,MAAM,KAAK5E,KAAI,SAAC2J,EAAK7C,GAAN,OACnB,0BACE9H,UAAU,aACViB,IAAK6G,EACL7H,MAAO,CAAE0J,WAAW,GAAD,OAAKD,KAEvBiB,OAVS,OCMdC,I,MAAkB,SAAC/F,EAAS7E,EAAWiB,EAAKyI,GAChD,GAAI7E,EAAQkC,MAAM3E,QAAUyC,EAAQc,UAAUvD,OAAQ,CACpD,IAAMqD,EAAE,aAASZ,EAAQmB,UAAY,UAAYnB,EAAQoB,SACzD,OACE,yBAAKjG,UAAWA,EAAWiB,IAAKA,EAAKhB,MAAO,CAAE0J,WAAW,GAAD,OAAKD,KAC1D7E,EAAQkC,MACT,2BAAO/G,UAAU,qBAAjB,YACQ6E,EAAQc,WADhB,OAC4Bd,EAAQG,WAAaS,EAAK,GADtD,OAON,OAAO,OAiFMoF,GA9EK,SAAC,GAAyC,IAAvChG,EAAsC,EAAtCA,QAAS6E,EAA6B,EAA7BA,MAAOvJ,EAAsB,EAAtBA,SAAU2H,EAAY,EAAZA,MAAY,EAC3Ba,KAD2B,mBACpDxB,EADoD,KAC1CtE,EAD0C,KAG3D,OACE,kBAAC,EAAuB,CAACA,eACvB,yBACE7C,UAAS,wBAAmBmH,GAC5BlH,MAAO,CAAE2J,YAAY,GAAD,OAAKF,KAExBkB,GAAgB/F,EAAS,iCAAkCiD,EAAO4B,GAClEvJ,EACA0E,EAAQqF,YAAY9H,QACnB,kBAAC,GACK,CACF+E,SAAS,iCACTK,eAAe,qCAAD,OAAuC3C,EAAQqF,eAInE,yBAAKlK,UAAU,iCACZ6E,EAAQiG,YAAY9J,KAAI,SAAC+J,EAAUjD,GAClC,IAAMf,EAAQ6D,GAAgBG,EAAU,qBAAsBjD,GAC9D,OAAIf,EACY,IAAVe,EACK,CACL,yBAAK7G,IAAI,KAAKjB,UAAU,uBACtB,iDAEF+G,GAGGA,EAEF,SAGX,yBAAK/G,UAAU,kBACZ6E,EAAQmG,MAAQnG,EAAQmG,KAAK5I,QAC5B,kBAAC,GAAW,CACVsE,MAAO7B,EAAQmG,KACfxE,SAAU,qBACVC,UAAW,cACXE,QAAS,YACT1H,KAAMJ,GAEN,0BAAMmB,UAAU,eAAhB,SAGH6E,EAAQoG,QAAUpG,EAAQoG,OAAO7I,QAChC,kBAAC,GAAW,CACVsE,MAAO7B,EAAQoG,OACfzE,SAAU,qBACVC,UAAW,cACXE,QAAS,cACT1H,KAAMJ,GAEN,0BAAMmB,UAAU,eAAhB,YAIN,kBAAC,GACK,CAAE0K,KAAM7F,EAAQ6F,KAAO7F,EAAQ6F,KAAKtC,WAAa,KAAMsB,aCjDtDwB,GApCF,WACX,OAAIvG,EAAavC,OACRuC,EAAa3D,KAAI,SAAC6D,EAASiD,GAChC,IAAKjD,EAAQG,WAAY,OAAO,KAChC,IAAMT,EAAaD,EAAgB6G,MACjC,SAAA3G,GAAG,OAAIA,EAAIE,KAAKzD,MAAQ4D,EAAQG,cAE5BoG,EAAU7G,EACZ,CACEwF,QAASxF,EAAWwF,SAAW,GAC/BL,MAAOnF,EAAWG,KAAKgF,OAAS,QAElC,CACEK,QAAS,GACTL,MAAO,QAEb,OACE,kBAAC,GAAD,CACEzI,IAAK6G,EACLA,OAAQA,EAAQ,GAAGM,WACnBvD,QAASA,EACT6E,MAAO0B,EAAQ1B,OAEf,yBACE1J,UAAU,mCACVC,MAAO,CAAE0J,WAAW,GAAD,OAAKyB,EAAQ1B,SAE/B0B,EAAQrB,aAMZ,0BAAM/J,UAAU,eAAhB,uBCRMqL,GAxBE,WACf,OAAI1G,EAAavC,OACRuC,EAAa3D,KAAI,SAAC6D,EAASiD,GAChC,OAAIjD,EAAQG,WAAmB,KAE7B,kBAAC,GAAD,CACE/D,IAAK6G,EACLA,OAAQA,EAAQ,GAAGM,WACnBvD,QAASA,EACT6E,MAAM,QAEN,yBACE1J,UAAU,mCACVC,MAAO,CAAE0J,WAAY,SAFvB,gBAUD,0BAAM3J,UAAU,eAAhB,uBCaMsL,I,MA/BE,WAAO,IAAD,EACG3K,mBAAS/B,GADZ,mBACdK,EADc,KACRsM,EADQ,KAGrB,OACE,6BAASvL,UAAU,mBACjB,yBAAKA,UAAU,WACb,0BACEE,QAAS,kBAAMqL,EAAQ3M,IACvBoB,UAAS,yBACPf,IAASL,EAAoB,SAAW,KAH5C,QAQA,0BACEsB,QAAS,kBAAMqL,EAAQ3M,IACvBoB,UAAS,yBACPf,IAASL,EAAwB,SAAW,KAHhD,aASF,yBAAKoB,UAAU,mBACZf,IAASL,GAAqB,kBAAC,GAAD,MAC9BK,IAASL,GAAyB,kBAAC,GAAD,UCrB5B4M,I,MARA,kBACb,6BAASxL,UAAU,mBACjB,yBAAKA,UAAU,mBACb,kBAAC,GAAD,CAAW0I,OAAK,QCeP+C,I,MAbF,SAAC,GAAD,IAAG/I,EAAH,EAAGA,MAAH,OACX,6BAAS1C,UAAU,mBAChB0C,IAAUnE,EAAKC,OAAS,kBAAC,GAAD,MACxBkE,IAAUnE,EAAKE,YAAc,kBAAC,GAAD,MAC7BiE,IAAUnE,EAAKG,UAAY,kBAAC,GAAD,MAC3BgE,IAAUnE,EAAKI,QAAU,kBAAC,GAAD,SC2Bf+M,I,MAjCA,kBACb,4BAAQ1L,UAAU,UAChB,kBAAC,GAAW,CACVf,KAAMJ,EACN6H,MAAM,iBAAD,OAAmB9C,EAAaC,OAAhC,2GACL2C,SAAU,qBACVC,UAAW,cACXE,QAAS,gBAEX,kBAAC,GAAW,CACV1H,KAAMJ,EACN6H,MAAM,UAAD,OAAY9C,EAAaG,OAC9ByC,SAAU,qBACVC,UAAW,cACXE,QAAS,aAEX,kBAAC,GAAW,CACV1H,KAAMJ,EACN6H,MAAO9C,EAAaK,SACpBuC,SAAU,wBACVC,UAAW,cACXE,QAAS,8BAEX,kBAAC,GAAW,CACV1H,KAAMJ,EACN6H,MAAO9C,EAAaQ,OACpBoC,SAAU,sBACVC,UAAW,cACXE,QAAS,uBCTAgF,GAzBS,SAAC,GAAyB,IAAxB1K,EAAuB,EAAvBA,IAAK2K,EAAkB,EAAlBA,aAAkB,EACvBjL,oBAAS,WAC/B,IACE,IAAM+F,EAAQmF,OAAOC,aAAaC,QAAQ9K,GAC1C,OAAOyF,EAAQsF,KAAKC,MAAMvF,GAASkF,EACnC,MAAOM,GACP,OAAON,MANoC,mBACxC9J,EADwC,KAClCqK,EADkC,KAsB/C,MAAO,CAACrK,EAZa,SAAA4E,GACnB,IACE,IAAM0F,EAAc1F,aAAiB2F,SACjC3F,EAAM5E,GACN4E,EACJyF,EAAQC,GACRP,OAAOC,aAAaK,QAAQlL,EAAK+K,KAAKM,UAAUF,IAChD,MAAOF,GACP,IAAIK,MAAJ,qDAAwDL,QCG/CM,I,MAdH,WAAO,IAAD,EACUb,GAAgB,CACxC1K,IAAK,QACL2K,aAAc,UAHA,mBACTlJ,EADS,KACFC,EADE,KAKhB,OACE,yBAAK3C,UAAU,oBACb,kBAAC,EAAW,CAAE0C,QAAOC,aACrB,kBAAC,GAAS,CAAED,UACZ,kBAAC,GAAD,SCbN+J,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f3149b76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vinayak.nandi@gmail.com.4da79502.doc\";","const MENU = {\r\n  ABOUT: \"ABOUT\",\r\n  EXPERIENCE: \"EXPERIENCE\",\r\n  PROJECTS: \"PROJECTS\",\r\n  SKILLS: \"SKILLS\"\r\n};\r\nconst PROJECTSTYPE = {\r\n  WORK: \"Work\",\r\n  PERSONAL: \"Personal\"\r\n};\r\nconst ICONTYPE = {\r\n  PHONE: \"PHONE\",\r\n  EMAIL: \"EMAIL\",\r\n  FILEDOWNLOAD: \"FILEDOWNLOAD\",\r\n  GITHUB: \"GITHUB\",\r\n  LINKEDIN: \"LINKEDIN\",\r\n  DEMO: \"DEMO\",\r\n  CODE: \"CODE\",\r\n  MAP: \"MAP\",\r\n  USER: \"USER\"\r\n};\r\nconst DESCRIPTIONFOR = {\r\n  USERDESCRIPTION: \"USERDESCRIPTION\"\r\n};\r\n\r\nexport { MENU, PROJECTSTYPE, ICONTYPE, DESCRIPTIONFOR };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLinkedinIn,\r\n  faGithub,\r\n  faWhatsapp\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faEnvelope,\r\n  faLaptop,\r\n  faLaptopCode,\r\n  faBriefcase,\r\n  faProjectDiagram,\r\n  faTools,\r\n  faHome,\r\n  faUserSecret,\r\n  faMapMarked,\r\n  faFileDownload\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ICONTYPE, MENU } from \"Helpers/Enums\";\r\n\r\nconst Icon = ({ type }) => {\r\n  let icon = \"\";\r\n  switch (type) {\r\n    case ICONTYPE.PHONE:\r\n      icon = faWhatsapp;\r\n      break;\r\n    case ICONTYPE.EMAIL:\r\n      icon = faEnvelope;\r\n      break;\r\n    case ICONTYPE.GITHUB:\r\n      icon = faGithub;\r\n      break;\r\n    case ICONTYPE.LINKEDIN:\r\n      icon = faLinkedinIn;\r\n      break;\r\n    case ICONTYPE.DEMO:\r\n      icon = faLaptop;\r\n      break;\r\n    case ICONTYPE.CODE:\r\n      icon = faLaptopCode;\r\n      break;\r\n    case ICONTYPE.USER:\r\n      icon = faUserSecret;\r\n      break;\r\n    case ICONTYPE.MAP:\r\n      icon = faMapMarked;\r\n      break;\r\n    case ICONTYPE.FILEDOWNLOAD:\r\n      icon = faFileDownload;\r\n      break;\r\n    case MENU.PROJECTS:\r\n      icon = faProjectDiagram;\r\n      break;\r\n    case MENU.EXPERIENCE:\r\n      icon = faBriefcase;\r\n      break;\r\n    case MENU.SKILLS:\r\n      icon = faTools;\r\n      break;\r\n    default:\r\n      icon = faHome;\r\n      break;\r\n  }\r\n\r\n  return <FontAwesomeIcon {...{ icon }} />;\r\n};\r\n\r\nIcon.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Disc = ({ className, style, onClick, children }) => (\r\n  <div className={classNames(\"disc\", className)} {...{ style, onClick }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDisc.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Disc;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscGroup = ({ active, style, children }) => (\r\n  <div className={classNames(\"disc-group\", active)} {...{ style }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDiscGroup.propTypes = {\r\n  active: PropTypes.string,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default DiscGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscLabel = ({ text, style }) => (\r\n  <span className=\"disc-label\" {...{ style }}>\r\n    {text}\r\n  </span>\r\n);\r\n\r\nDiscLabel.propTypes = {\r\n  text: PropTypes.string,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default DiscLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Motion, StaggeredMotion, spring } from \"react-motion\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport Icon from \"Components/Icon\";\r\nimport Disc from \"./Disc\";\r\nimport DiscGroup from \"./DiscGroup\";\r\nimport DiscLabel from \"./DiscLabel\";\r\nimport \"./DiscMenu.scss\";\r\n\r\nconst DiscMenu = ({ onItemClick }) => {\r\n  const [active, setActive] = useState(false);\r\n  const menus = Object.keys(MENU).map(key => MENU[key]);\r\n  const springOption = { stiffness: 330, damping: 20 };\r\n  const staggeredMetric = { bottom: -45, opacity: 0 };\r\n  const defaultStaggeredMotion = menus.map(() => staggeredMetric);\r\n  const motionMatric = { scale: 0.675 };\r\n  const styleMotion = {\r\n    scale: spring(active ? 1 : motionMatric.scale, springOption)\r\n  };\r\n  const menuClicked = item => {\r\n    setActive(!active);\r\n    if (item && onItemClick) onItemClick(item);\r\n  };\r\n  const nextStaggeredMotion = prevMotions =>\r\n    prevMotions.map((_, i) =>\r\n      i === prevMotions.length - 1\r\n        ? {\r\n            bottom: spring(active ? 0 : staggeredMetric.bottom, springOption),\r\n            opacity: spring(active ? 1 : staggeredMetric.opacity, springOption)\r\n          }\r\n        : {\r\n            bottom: spring(prevMotions[i + 1].bottom, springOption),\r\n            opacity: spring(prevMotions[i + 1].opacity, springOption)\r\n          }\r\n    );\r\n  return (\r\n    <div className=\"disc-menu-container\">\r\n      <StaggeredMotion\r\n        defaultStyles={defaultStaggeredMotion}\r\n        styles={nextStaggeredMotion}\r\n      >\r\n        {interpolatingStyles => (\r\n          <DiscGroup active={active ? \"active\" : \"inactive\"}>\r\n            {interpolatingStyles.map((style, i) => (\r\n              <Disc\r\n                key={menus[i]}\r\n                onClick={() => menuClicked(menus[i])}\r\n                style={{\r\n                  ...{ style, pointerEvents: active ? \"auto\" : \"none\" }\r\n                }}\r\n              >\r\n                <DiscLabel {...{ text: menus[i] }} />\r\n                <Icon {...{ type: menus[i] }} />\r\n              </Disc>\r\n            ))}\r\n          </DiscGroup>\r\n        )}\r\n      </StaggeredMotion>\r\n\r\n      <Motion defaultStyle={motionMatric} style={styleMotion}>\r\n        {interpolatingStyles => (\r\n          <Disc\r\n            className=\"large\"\r\n            onClick={() => menuClicked()}\r\n            style={{ transform: \"scale(\" + interpolatingStyles.scale + \")\" }}\r\n          >\r\n            <span\r\n              className={active ? \"main-disc-icon active\" : \"main-disc-icon\"}\r\n            ></span>\r\n          </Disc>\r\n        )}\r\n      </Motion>\r\n    </div>\r\n  );\r\n};\r\n\r\nDiscMenu.propTypes = {\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default DiscMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DiscMenu from \"Components/DiscMenu\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = ({ route, setRoute }) => (\r\n  <header className=\"header-bar\">\r\n    {route}\r\n    <DiscMenu onItemClick={setRoute} />\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  setRoute: PropTypes.func,\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport \"./AnimatedVisibility.scss\";\r\n\r\nconst AnimatedVisibility = ({ children, setCssClass }) => (\r\n  <div className=\"animation__container\">\r\n    <VisibilitySensor {...{\r\n      partialVisibility: true,\r\n      offset: {\r\n        bottom: 50\r\n      },\r\n      onChange: isSet => isSet && setCssClass('bounce-in')\r\n    }}>\r\n      <Fragment>{children}</Fragment>\r\n    </VisibilitySensor>\r\n  </div>\r\n);\r\n\r\nAnimatedVisibility.propTypes = {\r\n  setCssClass: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default AnimatedVisibility;\r\n","import * as bio from \"Data/bio.json\";\r\nimport experience from \"Data/experience.json\";\r\nimport project from \"Data/project.json\";\r\nimport skill from \"Data/skill.json\";\r\n\r\nconst UserDetails = {\r\n  FirstName: bio.firstName || \"\",\r\n  LastName: bio.lastName || \"\",\r\n  FriendlyName: `${bio.firstName || \"\"} ${bio.lastName || \"\"}`,\r\n  KnownAs: bio.knownAs || \"\",\r\n  Location: bio.location || \"\",\r\n  JobTitle: bio.jobTitle || \"\",\r\n  SubTitle: bio.subTitle || \"\",\r\n  Description: bio.description || \"\"\r\n};\r\n\r\nconst UserContacts = {\r\n  Mobile: bio.contact.phone || \"\",\r\n  Email: bio.contact.email || \"\",\r\n  LinkedIn: bio.contact.social.linkedIn || \"\",\r\n  Github: bio.contact.social.gitHub || \"\"\r\n};\r\n\r\nconst UserExperiences = Object.keys(experience).map(key => {\r\n  const exp = experience[key];\r\n  return Object.assign({}, exp, { misc: { ...exp.misc, key } });\r\n});\r\n\r\nconst UserProjects = [].concat(\r\n  ...Object.keys(project).map(key => {\r\n    const projects = project[key];\r\n    return [].concat(\r\n      ...projects.map(proj => ({\r\n        ...proj,\r\n        companyKey: Number(key) > 0 ? key : null\r\n      }))\r\n    );\r\n  })\r\n);\r\n\r\nconst UserSkills = Object.keys(skill).map(key =>\r\n  Object.assign({}, skill[key], { header: key })\r\n);\r\n\r\nUserDetails.Experience = () => {\r\n  let exp = 0;\r\n  if (UserExperiences.length > 0) {\r\n    const monthDiff = (d1, d2) => {\r\n      let diff = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n      diff -= d1.getMonth();\r\n      diff += d2.getMonth() + 1;\r\n      return diff <= 0 ? 0 : diff;\r\n    };\r\n\r\n    UserExperiences.forEach(uexp => {\r\n      const months = [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\"\r\n      ];\r\n      const d1 = new Date(\r\n        uexp.startDate.split(\" \")[1],\r\n        months.indexOf(uexp.startDate.split(\" \")[0].toUpperCase())\r\n      );\r\n      const d2 = uexp.isPresent\r\n        ? new Date()\r\n        : new Date(\r\n            uexp.endDate.split(\" \")[1],\r\n            months.indexOf(uexp.endDate.split(\" \")[0].toUpperCase())\r\n          );\r\n\r\n      exp += monthDiff(d1, d2);\r\n    });\r\n  }\r\n  return exp ? (exp / 12).toFixed(1) : exp;\r\n};\r\n\r\nexport { UserDetails, UserContacts, UserExperiences, UserProjects, UserSkills };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"Components/Icon\";\r\n\r\nconst Button = ({\r\n  btnClass,\r\n  linkClass,\r\n  value,\r\n  children,\r\n  type,\r\n  tooltip\r\n}) => {\r\n  return (\r\n    <div className={btnClass}>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className={linkClass}\r\n        href={value}\r\n        title={tooltip}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {type && <Icon {...{ type }} />}\r\n        {children}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  linkClass: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport resume from \"Data/vinayak.nandi@gmail.com.doc\";\r\nimport Button from \"Components/Button\";\r\nimport Icon from \"Components/Icon\";\r\nimport \"./UserCard.scss\";\r\n\r\nconst UserCard = ({ cssClass }) => {\r\n  const cssClassName = \"user__card \".concat(cssClass);\r\n  const knownAs = UserDetails.KnownAs.length\r\n    ? \"(Known as \".concat(UserDetails.KnownAs, \")\")\r\n    : \"\";\r\n  return (\r\n    <div className={cssClassName}>\r\n      <div className=\"user__details user__name user__friendly-name\">\r\n        {UserDetails.FriendlyName}\r\n      </div>\r\n      <div className=\"user__details user__name user__known-as\">{knownAs}</div>\r\n      <div className=\"user__details user__name user__known-as\">\r\n        {UserDetails.JobTitle}\r\n      </div>\r\n      <div className=\"user__details user__title\">{UserDetails.subTitle}</div>\r\n      <div className=\"user__details user__based-in\">\r\n        <Icon type={ICONTYPE.MAP} />\r\n        <span className=\"iconed-label\">{UserDetails.Location}</span>\r\n      </div>\r\n      <div className=\"user__details download__wrapper\">\r\n        <Button {...{\r\n          value: resume,\r\n          btnClass: \"download__button resume\",\r\n          linkClass: \"button-link\",\r\n          tooltip: \"Download resume\",\r\n          type: ICONTYPE.FILEDOWNLOAD\r\n        }}>\r\n          <span className=\"iconed-label\">Download Resume</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  cssClass: PropTypes.string\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\n\r\nconst Description = ({ cssClass, descriptionFor }) => {\r\n  const getText = key => {\r\n    switch (key) {\r\n      case DESCRIPTIONFOR.USERDESCRIPTION:\r\n        return UserDetails.Description.replace(\r\n          \"{autoexp}\",\r\n          UserDetails.Experience()\r\n        );\r\n      default:\r\n        return key;\r\n    }\r\n  };\r\n  return (\r\n    <div className={cssClass}>\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: `${getText(descriptionFor)}`\r\n        }}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nDescription.propTypes = {\r\n  cssClass: PropTypes.string,\r\n  descriptionFor: PropTypes.string\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\n\r\nconst SkillChart = () => (\r\n  <div className=\"skills\">\r\n    {UserSkills.map((skill, index) => {\r\n      const className = \"\".concat(\"chart \", skill.header.toLowerCase());\r\n      return (\r\n        <div key={`skill-${index}`} className={className}>\r\n          <span className=\"chart__title\">{skill.header}</span>\r\n          <ul className=\"chart--horiz\">\r\n            {skill.topics.map((tpc, index) => {\r\n              const width = tpc.score.toString().concat(\"%\");\r\n              return (\r\n                <li\r\n                  key={index + 1}\r\n                  className=\"chart__bar\"\r\n                  style={{ width: `${width}` }}\r\n                >\r\n                  <span className=\"chart__label\">{tpc.name}</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    })}\r\n    {!UserSkills.length && <span className=\"no-skills\">Skills not found!</span>}\r\n    {UserSkills.length && (\r\n      <ul className=\"lines\">\r\n        <li className=\"line l--0\">\r\n          <span className=\"line__label\">Started</span>\r\n        </li>\r\n        <li className=\"line l--25\">\r\n          <span className=\"line__label\">Beginner</span>\r\n        </li>\r\n        <li className=\"line l--50\">\r\n          <span className=\"line__label\">Itermediate</span>\r\n        </li>\r\n        <li className=\"line l--75\">\r\n          <span className=\"line__label\">Advanced</span>\r\n        </li>\r\n        <li className=\"line l--100\">\r\n          <span className=\"line__label\">Expert</span>\r\n        </li>\r\n      </ul>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default SkillChart;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\nimport Description from \"Components/Description\";\r\n\r\nconst SkillDescription = () => {\r\n  if (UserSkills.length) {\r\n    let skillsText = \"<strong>Core Competencies : </strong>\";\r\n    UserSkills.forEach(skill => {\r\n      skillsText = skillsText.concat(\"<br/><em><u>\", skill.header, \"</u></em>\");\r\n\r\n      if (skill.topics && skill.topics.length) {\r\n        let topics = skill.topics.map(tpcs => tpcs.name);\r\n\r\n        if (topics.length) {\r\n          skillsText = skillsText.concat(\r\n            \"<em> : </em>\",\r\n            topics.toString().replace(/,/g, \", \")\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Description\r\n        {...{\r\n          cssClass: \"skills-text\",\r\n          descriptionFor: skillsText\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default SkillDescription;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SkillChart from \"./SkillChart\";\r\nimport SkillDescription from \"./SkillDescription\";\r\nimport \"./SkillCard.scss\";\r\n\r\nconst SkillCard = ({ chart }) => (\r\n  <div className=\"skill-card\">\r\n    {chart && <SkillChart />}\r\n    {!chart && <SkillDescription />}\r\n  </div>\r\n);\r\n\r\nSkillCard.propTypes = {\r\n  chart: PropTypes.bool\r\n};\r\nexport default SkillCard;\r\n","import {useState} from 'react';\r\n\r\nconst useCssClass = (initialClass = '') => {\r\n  const [cssClass, setCssClass] = useState(initialClass);\r\n  const setClass = newClass => setCssClass(newClass);\r\n  return [cssClass, setClass];\r\n};\r\n\r\nexport default useCssClass;","import React from \"react\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport UserCard from \"Components/Cards/UserCard/UserCard\";\r\nimport Description from \"Components/Description\";\r\nimport SkillCard from \"Components/Cards/SkillCard/SkillCard\";\r\nimport useCssClass from 'hooks/useCssClass';\r\n\r\nimport \"./About.scss\";\r\n\r\nconst About = () => {\r\n  const [cssClass, setCssClass] = useCssClass();\r\n  \r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <AnimatedVisibility {...{setCssClass}}>\r\n        <UserCard\r\n          {...{\r\n            cssClass: `about-content ${cssClass}`\r\n          }}\r\n        />\r\n        <Description\r\n          {...{\r\n            cssClass: `about-content about-description ${cssClass}`,\r\n            descriptionFor: DESCRIPTIONFOR.USERDESCRIPTION\r\n          }}\r\n        />\r\n\r\n        <div className={`about-content ${cssClass}`}>\r\n          <SkillCard />\r\n        </div>\r\n      </AnimatedVisibility>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport \"./Timeline.scss\";\r\n\r\nconst Timeline = ({ children, className, lineColor }) => (\r\n  <div\r\n    className={classNames(className, \"timeline\")}\r\n    style={{ color: `${lineColor}` }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired,\r\n  className: PropTypes.string,\r\n  lineColor: PropTypes.string\r\n};\r\n\r\nTimeline.defaultProps = {\r\n  className: \"\",\r\n  lineColor: \"#000\"\r\n};\r\n\r\nexport default Timeline;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport useCssClass from 'hooks/useCssClass';\r\n\r\nimport \"./StoryCard.scss\";\r\n\r\nconst StoryCard = ({ when, where, who, whom, count, theme, children }) => {\r\n  const [cssClass, setCssClass] = useCssClass();\r\n  \r\n  return (\r\n    <AnimatedVisibility {...{setCssClass}}>\r\n      <div className={`storycard__caption__wrapper ${cssClass}`} style={{ color: `${theme}` }}>\r\n        <div>\r\n          <span className=\"storycard__caption__container\">\r\n            <time\r\n              className=\"storycard__caption\"\r\n              style={{ background: `${theme}` }}\r\n              title={when}\r\n            >\r\n              {when}\r\n            </time>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={`storycard__continer ${cssClass}`}>\r\n        <div\r\n          className={`storycard__content ${\r\n            !children ? \"empty\" : \"\"\r\n          }`}\r\n          style={{ borderColor: `${theme}` }}\r\n        >\r\n          <h3 style={{ color: `${theme}` }}>{who}</h3>\r\n          <h4 style={{ color: `${theme}` }}>\r\n            {whom.length ? `@ ${whom}, ${where}` : \"\"}\r\n          </h4>\r\n          <hr />\r\n          {count > 0 && (\r\n            <div\r\n              className=\"project-count\"\r\n              style={{ background: `${theme}` }}\r\n              title=\"Number of projects undertaken\"\r\n            >\r\n              {count}\r\n            </div>\r\n          )}\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nStoryCard.propTypes = {\r\n  when: PropTypes.string,\r\n  where: PropTypes.string,\r\n  who: PropTypes.string,\r\n  whom: PropTypes.string,\r\n  count: PropTypes.number,\r\n  theme: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nStoryCard.defaultProps = {\r\n  when: \"\",\r\n  where: \"\",\r\n  who: \"\",\r\n  whom: \"\",\r\n  theme: \"#ddd\",\r\n  children: null\r\n};\r\n\r\nexport default StoryCard;\r\n","import React from \"react\";\r\nimport Timeline from \"Components/Timeline\";\r\nimport StoryCard from \"Components/Cards/StoryCard\";\r\nimport { UserExperiences, UserProjects } from \"Helpers/DataValidator\";\r\nimport \"./Experience.scss\";\r\n\r\nconst getProjectCount = key => ({ count: UserProjects.filter(\r\n  project => (key === project.companyKey)\r\n).length});\r\n\r\nconst dataToObject = exp => ({\r\n  company: exp.company || \"\",\r\n  office: exp.office || \"\",\r\n  jobTitle: exp.jobTitle || \"\",\r\n  isPresent: exp.isPresent || false,\r\n  startDate: exp.startDate || \"\",\r\n  endDate: exp.endDate || \"\",\r\n  description: exp.description || \"\",\r\n  achievements: exp.achievements || [],\r\n  other: exp.other || \"\",\r\n  key: exp.misc.key,\r\n  theme: exp.misc && exp.misc.theme ? exp.misc.theme : \"#000\"\r\n});\r\n\r\nconst Experience = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <Timeline lineColor={\"#ddd\"}>\r\n        {UserExperiences.length &&\r\n          UserExperiences.map((exp, ind) => {\r\n            const dto = dataToObject(exp);\r\n            const when =\r\n              dto.startDate.length === 0 &&\r\n              (!dto.endDate || dto.endDate.length === 0)\r\n                ? \"\"\r\n                : `${dto.startDate} - ${\r\n                    dto.isPresent ? \"Present\" : dto.endDate\r\n                  }`;\r\n            const { theme, jobTitle: who, company: whom, office: where } = dto;\r\n            return (\r\n              <StoryCard\r\n                key={ind}\r\n                {...{\r\n                  theme,\r\n                  when,\r\n                  who,\r\n                  whom,\r\n                  where,\r\n                  ...getProjectCount(dto.key)\r\n                }}\r\n              >\r\n                <p>{dto.description}</p>\r\n                {dto.achievements && dto.achievements.length > 0 && (\r\n                  <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    {dto.achievements.length > 1 &&\r\n                      <ol>\r\n                        {dto.achievements.map((achievement, index) => (\r\n                          <li key={index.toString()}>{achievement.details}</li>\r\n                        ))}\r\n                      </ol>\r\n                    }\r\n                    {dto.achievements.length === 1 &&\r\n                      <p>{dto.achievements[0].details}</p>\r\n                    }\r\n                  </div>\r\n                )}\r\n                {dto.other.length > 0 && (\r\n                  <div>\r\n                    <h5>Other responsibilities</h5>\r\n                    <p>{dto.other}</p>\r\n                  </div>\r\n                )}\r\n              </StoryCard>\r\n            );\r\n          })}\r\n        {!UserExperiences.length && (\r\n          <span className=\"no-experiences\">No experience found!</span>\r\n        )}\r\n      </Timeline>\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './Tags.scss';\r\n\r\nconst Tags = ({ tags, theme }) => {\r\n  if (!tags) return null;\r\n\r\n  return (\r\n    <div className=\"tag__container\">\r\n      {tags.split(\",\").map((tag, index) => (\r\n        <span\r\n          className=\"tag__chips\"\r\n          key={index}\r\n          style={{ background: `${theme}` }}\r\n        >\r\n          {tag}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  tags: PropTypes.string,\r\n  theme: PropTypes.string\r\n};\r\n\r\nexport default Tags;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Description from \"Components/Description\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport Button from \"Components/Button\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport Tags from \"Components/Tags\";\r\nimport useCssClass from 'hooks/useCssClass';\r\n\r\nimport \"./ProjectCard.scss\";\r\n\r\nconst getProjectTitle = (project, className, key, theme) => {\r\n  if (project.title.length && project.startDate.length) {\r\n    const d1 = ` - ${project.isPresent ? \"Present\" : project.endDate}`;\r\n    return (\r\n      <div className={className} key={key} style={{ background: `${theme}` }}>\r\n        {project.title}\r\n        <small className=\"project__duration\">\r\n          {` (${project.startDate}${project.companyKey ? d1 : \"\"})`}\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst ProjectCard = ({ project, theme, children, index }) => {\r\n  const [cssClass, setCssClass] = useCssClass();\r\n\r\n  return (\r\n    <AnimatedVisibility {...{setCssClass}}>\r\n      <div\r\n        className={`project__card ${cssClass}`}\r\n        style={{ borderColor: `${theme}` }}\r\n      >\r\n        {getProjectTitle(project, \"project__header project__title\", index, theme)}\r\n        {children}\r\n        {project.description.length && (\r\n          <Description\r\n            {...{\r\n              cssClass: `about-project project__content`,\r\n              descriptionFor: `<strong>About Project : </strong> ${project.description}`\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"project__content sub-projects\">\r\n          {project.subProjects.map((subProjs, index) => {\r\n            const title = getProjectTitle(subProjs, \"sub-project__title\", index);\r\n            if (title) {\r\n              if (index === 0) {\r\n                return [\r\n                  <div key=\"-1\" className=\"sub-project__header\">\r\n                    <strong>Sub-projects</strong>\r\n                  </div>,\r\n                  title\r\n                ];\r\n              }\r\n              return title;\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div className=\"project__links\">\r\n          {project.demo && project.demo.length && (\r\n            <Button {...{\r\n              value: project.demo,\r\n              btnClass: \"project__link demo\",\r\n              linkClass: \"button-link\",\r\n              tooltip: \"View demo\",\r\n              type: ICONTYPE.DEMO\r\n            }}>\r\n              <span className=\"action-text\">Demo</span>\r\n            </Button>\r\n          )}\r\n          {project.source && project.source.length && (\r\n            <Button {...{\r\n              value: project.source,\r\n              btnClass: \"project__link code\",\r\n              linkClass: \"button-link\",\r\n              tooltip: \"View source\",\r\n              type: ICONTYPE.CODE \r\n            }}>\r\n              <span className=\"action-text\">Source</span>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <Tags\r\n          {...{ tags: project.tags ? project.tags.toString() : null, theme }}\r\n        />\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.instanceOf(Object),\r\n  theme: PropTypes.string,\r\n  index: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport { UserProjects, UserExperiences } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Work = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (!project.companyKey) return null;\r\n      const experience = UserExperiences.find(\r\n        exp => exp.misc.key === project.companyKey\r\n      );\r\n      const options = experience\r\n        ? {\r\n            company: experience.company || \"\",\r\n            theme: experience.misc.theme || \"#000\"\r\n          }\r\n        : {\r\n            company: \"\",\r\n            theme: \"#000\"\r\n          };\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme={options.theme}\r\n        >\r\n          <div\r\n            className=\"project__header project__company\"\r\n            style={{ background: `${options.theme}` }}\r\n          >\r\n            {options.company}\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Work;\r\n","import React from \"react\";\r\n\r\nimport { UserProjects } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Personal = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (project.companyKey) return null;\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme=\"#000\"\r\n        >\r\n          <div\r\n            className=\"project__header project__company\"\r\n            style={{ background: \"#000\" }}\r\n          >\r\n            Personal\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Personal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Work from \"./Work\";\r\nimport Personal from \"./Personal\";\r\nimport { PROJECTSTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Projects.scss\";\r\n\r\nconst Projects = () => {\r\n  const [type, setType] = useState(PROJECTSTYPE.WORK);\r\n\r\n  return (\r\n    <article className=\"profile-content\">\r\n      <div className=\"toolbar\">\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.WORK)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.WORK ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Work\r\n        </span>\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.PERSONAL)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.PERSONAL ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Personal\r\n        </span>\r\n      </div>\r\n      <div className=\"content-wrapper\">\r\n        {type === PROJECTSTYPE.WORK && <Work />}\r\n        {type === PROJECTSTYPE.PERSONAL && <Personal />}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport SkillCard from \"Components/Cards/SkillCard\";\r\nimport \"./Skills.scss\";\r\n\r\nconst Skills = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <SkillCard chart />\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport About from \"Components/About/About\";\r\nimport Experience from \"Components/Experience/Experience\";\r\nimport Projects from \"Components/Projects/Projects\";\r\nimport Skills from \"Components/Skills/Skills\";\r\nimport \"./Main.scss\";\r\n\r\nconst Main = ({ route }) => (\r\n  <article className=\"profile-content\">\r\n    {route === MENU.ABOUT && <About />}\r\n    {route === MENU.EXPERIENCE && <Experience />}\r\n    {route === MENU.PROJECTS && <Projects />}\r\n    {route === MENU.SKILLS && <Skills />}\r\n  </article>\r\n);\r\n\r\nMain.propTypes = {\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport Button from \"Components/Button\";\r\nimport { UserContacts } from \"Helpers/DataValidator\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <Button {...{\r\n      type: ICONTYPE.PHONE,\r\n      value: `https://wa.me/${UserContacts.Mobile}?text=Hi%20Vinnie,%20I%20am%20impressed%20with%20your%20experience%20and%20skillset.%20Can%20we%20talk?`,\r\n      btnClass: \"footer__disc phone\",\r\n      linkClass: \"button-link\",\r\n      tooltip: \"Whatsapp me\"\r\n    }}/>\r\n    <Button {...{\r\n      type: ICONTYPE.EMAIL,\r\n      value: `mailto:${UserContacts.Email}`,\r\n      btnClass: \"footer__disc email\",\r\n      linkClass: \"button-link\",\r\n      tooltip: \"Email me\"\r\n    }}/>\r\n    <Button {...{\r\n      type: ICONTYPE.LINKEDIN,\r\n      value: UserContacts.LinkedIn,\r\n      btnClass: \"footer__disc linkedin\",\r\n      linkClass: \"button-link\",\r\n      tooltip: \"Visit my linkedIn profile\"\r\n    }}/>\r\n    <Button {...{\r\n      type: ICONTYPE.GITHUB,\r\n      value: UserContacts.Github,\r\n      btnClass: \"footer__disc github\",\r\n      linkClass: \"button-link\",\r\n      tooltip: \"Visit my github\"\r\n    }}/>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import {useState} from 'react';\r\n\r\nconst useLocalStorage = ({key, initialValue}) => {\r\n  const [item, setItem] = useState(() => {\r\n    try {\r\n      const value = window.localStorage.getItem(key);\r\n      return value ? JSON.parse(value) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setStoreItem = value => {\r\n    try {\r\n      const itemToStore = value instanceof Function \r\n        ? value(item) \r\n        : value;\r\n      setItem(itemToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(itemToStore));\r\n    } catch (error) {\r\n      new Error(`Error storing the route in local storage - ${error}`);\r\n    }\r\n  };\r\n\r\n  return [item, setStoreItem];\r\n};\r\n\r\nexport default useLocalStorage;","import React from \"react\";\r\n\r\nimport Header from \"Components/Header\";\r\nimport Main from \"Components/Main\";\r\nimport Footer from \"Components/Footer\";\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useLocalStorage({\r\n    key: \"route\", \r\n    initialValue: \"ABOUT\"\r\n  });\r\n  return (\r\n    <div className=\"personal-profile\">\r\n      <Header {...{ route, setRoute }} />\r\n      <Main {...{ route }} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}