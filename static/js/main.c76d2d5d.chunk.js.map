{"version":3,"sources":["Data/vinayak.nandi@gmail.com.doc","Helpers/Enums.js","Components/Icon/Icon.jsx","Components/DiscMenu/Disc.jsx","Components/DiscMenu/DiscGroup.jsx","Components/DiscMenu/DiscLabel.jsx","Components/DiscMenu/DiscMenu.jsx","Components/Header/Header.jsx","Components/AnimatedVisibility/AnimatedVisibility.jsx","Helpers/DataValidator.js","Components/Buttons/DownloadButton/DownloadButton.jsx","Components/Cards/UserCard/UserCard.jsx","Components/Description/Description.jsx","Components/Cards/SkillCard/SkillChart.jsx","Components/Cards/SkillCard/SkillDescription.jsx","Components/Cards/SkillCard/SkillCard.jsx","Components/About/About.jsx","Components/Timeline/Timeline.jsx","Components/Cards/StoryCard/StoryCard.jsx","Components/Experience/Experience.jsx","Components/Buttons/ActionButton/ActionButton.jsx","Components/Cards/ProjectCard/Tags.jsx","Components/Cards/ProjectCard/ProjectCard.jsx","Components/Projects/Work.jsx","Components/Projects/Personal.jsx","Components/Projects/Projects.jsx","Components/Skills/Skills.jsx","Components/Main/Main.jsx","Components/Footer/Footer.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","MENU","ABOUT","EXPERIENCE","PROJECTS","SKILLS","PROJECTSTYPE","ICONTYPE","DESCRIPTIONFOR","Icon","icon","type","faWhatsapp","faEnvelope","faGithub","faLinkedinIn","faLaptop","faLaptopCode","faUserSecret","faMapMarked","faFileDownload","faProjectDiagram","faBriefcase","faTools","faHome","Disc","className","style","onClick","children","classNames","DiscGroup","active","DiscLabel","text","DiscMenu","onItemClick","useState","setActive","menus","Object","keys","map","key","springOption","stiffness","damping","staggeredMetric","bottom","opacity","defaultStaggeredMotion","motionMatric","scale","styleMotion","spring","menuClicked","item","defaultStyles","styles","prevMotions","_","i","length","interpolatingStyles","pointerEvents","defaultStyle","transform","Header","route","setRoute","AnimatedVisibility","notifyChange","partialVisibility","offset","onChange","UserDetails","FirstName","bio","LastName","FriendlyName","KnownAs","Location","JobTitle","SubTitle","Description","UserContacts","Mobile","phone","Email","email","LinkedIn","social","linkedIn","Github","gitHub","UserExperiences","experience","exp","assign","misc","UserProjects","concat","project","projects","proj","companyKey","Number","UserSkills","skill","header","Experience","forEach","uexp","months","d1","Date","startDate","split","indexOf","toUpperCase","d2","isPresent","endDate","diff","getFullYear","getMonth","monthDiff","toFixed","Download","btnClass","linkClass","value","tooltip","target","rel","href","title","UserCard","cssClass","cssClassName","knownAs","subTitle","DownloadButton","resume","descriptionFor","dangerouslySetInnerHTML","__html","replace","getText","SkillChart","index","toLowerCase","topics","tpc","width","score","toString","name","SkillDescription","skillsText","tpcs","SkillCard","chart","About","visible","setVisible","animationClass","isVisible","Timeline","lineColor","color","defaultProps","StoryCard","when","where","who","whom","count","theme","background","borderColor","getProjectCount","ind","dto","company","office","jobTitle","description","achievements","other","dataToObject","achievement","details","ActionButton","e","stopPropagation","Tags","tags","tag","getProjectTitle","ProjectCard","subProjects","subProjs","demo","source","Work","find","options","Personal","Projects","setType","Skills","Main","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c76d2d5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vinayak.nandi@gmail.com.a790ae30.doc\";","const MENU = {\r\n  ABOUT: \"ABOUT\",\r\n  EXPERIENCE: \"EXPERIENCE\",\r\n  PROJECTS: \"PROJECTS\",\r\n  SKILLS: \"SKILLS\"\r\n};\r\nconst PROJECTSTYPE = {\r\n  WORK: \"Work\",\r\n  PERSONAL: \"Personal\"\r\n};\r\nconst ICONTYPE = {\r\n  PHONE: \"PHONE\",\r\n  EMAIL: \"EMAIL\",\r\n  FILEDOWNLOAD: \"FILEDOWNLOAD\",\r\n  GITHUB: \"GITHUB\",\r\n  LINKEDIN: \"LINKEDIN\",\r\n  DEMO: \"DEMO\",\r\n  CODE: \"CODE\",\r\n  MAP: \"MAP\",\r\n  USER: \"USER\"\r\n};\r\nconst DESCRIPTIONFOR = {\r\n  USERDESCRIPTION: \"USERDESCRIPTION\"\r\n};\r\n\r\nexport { MENU, PROJECTSTYPE, ICONTYPE, DESCRIPTIONFOR };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLinkedinIn,\r\n  faGithub,\r\n  faWhatsapp\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faEnvelope,\r\n  faLaptop,\r\n  faLaptopCode,\r\n  faBriefcase,\r\n  faProjectDiagram,\r\n  faTools,\r\n  faHome,\r\n  faUserSecret,\r\n  faMapMarked,\r\n  faFileDownload\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ICONTYPE, MENU } from \"Helpers/Enums\";\r\n\r\nconst Icon = ({ type }) => {\r\n  let icon = \"\";\r\n  switch (type) {\r\n    case ICONTYPE.PHONE:\r\n      icon = faWhatsapp;\r\n      break;\r\n    case ICONTYPE.EMAIL:\r\n      icon = faEnvelope;\r\n      break;\r\n    case ICONTYPE.GITHUB:\r\n      icon = faGithub;\r\n      break;\r\n    case ICONTYPE.LINKEDIN:\r\n      icon = faLinkedinIn;\r\n      break;\r\n    case ICONTYPE.DEMO:\r\n      icon = faLaptop;\r\n      break;\r\n    case ICONTYPE.CODE:\r\n      icon = faLaptopCode;\r\n      break;\r\n    case ICONTYPE.USER:\r\n      icon = faUserSecret;\r\n      break;\r\n    case ICONTYPE.MAP:\r\n      icon = faMapMarked;\r\n      break;\r\n    case ICONTYPE.FILEDOWNLOAD:\r\n      icon = faFileDownload;\r\n      break;\r\n    case MENU.PROJECTS:\r\n      icon = faProjectDiagram;\r\n      break;\r\n    case MENU.EXPERIENCE:\r\n      icon = faBriefcase;\r\n      break;\r\n    case MENU.SKILLS:\r\n      icon = faTools;\r\n      break;\r\n    default:\r\n      icon = faHome;\r\n      break;\r\n  }\r\n\r\n  return <FontAwesomeIcon {...{ icon }} />;\r\n};\r\n\r\nIcon.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Disc = ({ className, style, onClick, children }) => (\r\n  <div className={classNames(\"disc\", className)} {...{ style, onClick }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDisc.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Disc;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscGroup = ({ active, style, children }) => (\r\n  <div className={classNames(\"disc-group\", active)} {...{ style }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nDiscGroup.propTypes = {\r\n  active: PropTypes.string,\r\n  style: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default DiscGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DiscLabel = ({ text, style }) => (\r\n  <span className=\"disc-label\" {...{ style }}>\r\n    {text}\r\n  </span>\r\n);\r\n\r\nDiscLabel.propTypes = {\r\n  text: PropTypes.string,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default DiscLabel;\r\n","import React, { useState } from \"react\";\r\nimport { Motion, StaggeredMotion, spring } from \"react-motion\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport Icon from \"Components/Icon\";\r\nimport Disc from \"./Disc\";\r\nimport DiscGroup from \"./DiscGroup\";\r\nimport DiscLabel from \"./DiscLabel\";\r\nimport \"./DiscMenu.scss\";\r\n\r\nconst DiscMenu = ({ onItemClick }) => {\r\n  const [active, setActive] = useState(false);\r\n  const menus = Object.keys(MENU).map(key => MENU[key]);\r\n  const springOption = { stiffness: 330, damping: 20 };\r\n  const staggeredMetric = { bottom: -45, opacity: 0 };\r\n  const defaultStaggeredMotion = menus.map(() => staggeredMetric);\r\n  const motionMatric = { scale: 0.675 };\r\n  const styleMotion = {\r\n    scale: spring(active ? 1 : motionMatric.scale, springOption)\r\n  };\r\n  const menuClicked = item => {\r\n    setActive(!active);\r\n    if (item && onItemClick) onItemClick(item);\r\n  };\r\n  const nextStaggeredMotion = prevMotions =>\r\n    prevMotions.map((_, i) =>\r\n      i === prevMotions.length - 1\r\n        ? {\r\n            bottom: spring(active ? 0 : staggeredMetric.bottom, springOption),\r\n            opacity: spring(active ? 1 : staggeredMetric.opacity, springOption)\r\n          }\r\n        : {\r\n            bottom: spring(prevMotions[i + 1].bottom, springOption),\r\n            opacity: spring(prevMotions[i + 1].opacity, springOption)\r\n          }\r\n    );\r\n  return (\r\n    <div className=\"disc-menu-container\">\r\n      <StaggeredMotion\r\n        defaultStyles={defaultStaggeredMotion}\r\n        styles={nextStaggeredMotion}\r\n      >\r\n        {interpolatingStyles => (\r\n          <DiscGroup active={active ? \"active\" : \"inactive\"}>\r\n            {interpolatingStyles.map((style, i) => (\r\n              <Disc\r\n                key={menus[i]}\r\n                onClick={() => menuClicked(menus[i])}\r\n                style={{\r\n                  ...{ style, pointerEvents: active ? \"auto\" : \"none\" }\r\n                }}\r\n              >\r\n                <DiscLabel {...{ text: menus[i] }} />\r\n                <Icon {...{ type: menus[i] }} />\r\n              </Disc>\r\n            ))}\r\n          </DiscGroup>\r\n        )}\r\n      </StaggeredMotion>\r\n\r\n      <Motion defaultStyle={motionMatric} style={styleMotion}>\r\n        {interpolatingStyles => (\r\n          <Disc\r\n            className=\"large\"\r\n            onClick={() => menuClicked()}\r\n            style={{ transform: \"scale(\" + interpolatingStyles.scale + \")\" }}\r\n          >\r\n            <span\r\n              className={active ? \"main-disc-icon active\" : \"main-disc-icon\"}\r\n            ></span>\r\n          </Disc>\r\n        )}\r\n      </Motion>\r\n    </div>\r\n  );\r\n};\r\n\r\nDiscMenu.propTypes = {\r\n  onItemClick: PropTypes.func\r\n};\r\n\r\nexport default DiscMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DiscMenu from \"Components/DiscMenu\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = ({ route, setRoute }) => (\r\n  <header className=\"header-bar\">\r\n    {route}\r\n    <DiscMenu onItemClick={setRoute} />\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  setRoute: PropTypes.func,\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport \"./AnimatedVisibility.scss\";\r\n\r\nconst AnimatedVisibility = ({ children, notifyChange }) => (\r\n  <div className=\"animated-visibility-container\">\r\n    <VisibilitySensor\r\n      {...{\r\n        partialVisibility: true,\r\n        offset: {\r\n          bottom: 50\r\n        },\r\n        onChange: notifyChange\r\n      }}\r\n    >\r\n      <Fragment>{children}</Fragment>\r\n    </VisibilitySensor>\r\n  </div>\r\n);\r\n\r\nAnimatedVisibility.propTypes = {\r\n  notifyChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default AnimatedVisibility;\r\n","import * as bio from \"Data/bio.json\";\r\nimport experience from \"Data/experience.json\";\r\nimport project from \"Data/project.json\";\r\nimport skill from \"Data/skill.json\";\r\n\r\nconst UserDetails = {\r\n  FirstName: bio.firstName || \"\",\r\n  LastName: bio.lastName || \"\",\r\n  FriendlyName: `${bio.firstName || \"\"} ${bio.lastName || \"\"}`,\r\n  KnownAs: bio.knownAs || \"\",\r\n  Location: bio.location || \"\",\r\n  JobTitle: bio.jobTitle || \"\",\r\n  SubTitle: bio.subTitle || \"\",\r\n  Description: bio.description || \"\"\r\n};\r\n\r\nconst UserContacts = {\r\n  Mobile: bio.contact.phone || \"\",\r\n  Email: bio.contact.email || \"\",\r\n  LinkedIn: bio.contact.social.linkedIn || \"\",\r\n  Github: bio.contact.social.gitHub || \"\"\r\n};\r\n\r\nconst UserExperiences = Object.keys(experience).map(key => {\r\n  const exp = experience[key];\r\n  return Object.assign({}, exp, { misc: { ...exp.misc, key } });\r\n});\r\n\r\nconst UserProjects = [].concat(\r\n  ...Object.keys(project).map(key => {\r\n    const projects = project[key];\r\n    return [].concat(\r\n      ...projects.map(proj => ({\r\n        ...proj,\r\n        companyKey: Number(key) > 0 ? key : null\r\n      }))\r\n    );\r\n  })\r\n);\r\n\r\nconst UserSkills = Object.keys(skill).map(key =>\r\n  Object.assign({}, skill[key], { header: key })\r\n);\r\n\r\nUserDetails.Experience = () => {\r\n  let exp = 0;\r\n  if (UserExperiences.length > 0) {\r\n    const monthDiff = (d1, d2) => {\r\n      let diff = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n      diff -= d1.getMonth();\r\n      diff += d2.getMonth() + 1;\r\n      return diff <= 0 ? 0 : diff;\r\n    };\r\n\r\n    UserExperiences.forEach(uexp => {\r\n      const months = [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\"\r\n      ];\r\n      const d1 = new Date(\r\n        uexp.startDate.split(\" \")[1],\r\n        months.indexOf(uexp.startDate.split(\" \")[0].toUpperCase())\r\n      );\r\n      const d2 = uexp.isPresent\r\n        ? new Date()\r\n        : new Date(\r\n            uexp.endDate.split(\" \")[1],\r\n            months.indexOf(uexp.endDate.split(\" \")[0].toUpperCase())\r\n          );\r\n\r\n      exp += monthDiff(d1, d2);\r\n    });\r\n  }\r\n  return exp ? (exp / 12).toFixed(1) : exp;\r\n};\r\n\r\nexport { UserDetails, UserContacts, UserExperiences, UserProjects, UserSkills };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Download = ({ btnClass, linkClass, value, tooltip, children }) => (\r\n  <button className={btnClass}>\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className={linkClass}\r\n      href={value}\r\n      title={tooltip}\r\n    >\r\n      {children}\r\n    </a>\r\n  </button>\r\n);\r\n\r\nDownload.propTypes = {\r\n  value: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  linkClass: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\nexport default Download;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport resume from \"Data/vinayak.nandi@gmail.com.doc\";\r\nimport DownloadButton from \"Components/Buttons/DownloadButton\";\r\nimport Icon from \"Components/Icon\";\r\nimport \"./UserCard.scss\";\r\n\r\nconst UserCard = ({ cssClass }) => {\r\n  const cssClassName = \"user-card \".concat(cssClass);\r\n  const knownAs = UserDetails.KnownAs.length\r\n    ? \"(Known as \".concat(UserDetails.KnownAs, \")\")\r\n    : \"\";\r\n  return (\r\n    <div className={cssClassName}>\r\n      <div className=\"user-details user-name user-friendly-name\">\r\n        {UserDetails.FriendlyName}\r\n      </div>\r\n      <div className=\"user-details user-name user-known-as\">{knownAs}</div>\r\n      <div className=\"user-details user-name user-known-as\">\r\n        {UserDetails.JobTitle}\r\n      </div>\r\n      <div className=\"user-details user-title\">{UserDetails.subTitle}</div>\r\n      <div className=\"user-details user-based-in\">\r\n        <Icon type={ICONTYPE.MAP} />\r\n        <span className=\"iconed-label\">{UserDetails.Location}</span>\r\n      </div>\r\n      <div className=\"user-details download-wrapper\">\r\n        <DownloadButton\r\n          value={resume}\r\n          btnClass=\"download-button resume\"\r\n          linkClass=\"button-link\"\r\n          tooltip=\"Download resume\"\r\n        >\r\n          <Icon type={ICONTYPE.FILEDOWNLOAD} />\r\n          <span className=\"iconed-label\">Download Resume</span>\r\n        </DownloadButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  cssClass: PropTypes.string\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { UserDetails } from \"Helpers/DataValidator\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\n\r\nconst Description = ({ cssClass, descriptionFor }) => {\r\n  const getText = key => {\r\n    switch (key) {\r\n      case DESCRIPTIONFOR.USERDESCRIPTION:\r\n        return UserDetails.Description.replace(\r\n          \"{autoexp}\",\r\n          UserDetails.Experience()\r\n        );\r\n      default:\r\n        return key;\r\n    }\r\n  };\r\n  return (\r\n    <div className={cssClass}>\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: `${getText(descriptionFor)}`\r\n        }}\r\n      ></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nDescription.propTypes = {\r\n  cssClass: PropTypes.string,\r\n  descriptionFor: PropTypes.string\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\n\r\nconst SkillChart = () => (\r\n  <div className=\"skills\">\r\n    {UserSkills.map((skill, index) => {\r\n      const className = \"\".concat(\"chart \", skill.header.toLowerCase());\r\n      return (\r\n        <div key={`skill-${index}`} className={className}>\r\n          <span className=\"chart__title\">{skill.header}</span>\r\n          <ul className=\"chart--horiz\">\r\n            {skill.topics.map((tpc, index) => {\r\n              const width = tpc.score.toString().concat(\"%\");\r\n              return (\r\n                <li\r\n                  key={index + 1}\r\n                  className=\"chart__bar\"\r\n                  style={{ width: `${width}` }}\r\n                >\r\n                  <span className=\"chart__label\">{tpc.name}</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    })}\r\n    {!UserSkills.length && <span className=\"no-skills\">Skills not found!</span>}\r\n    {UserSkills.length && (\r\n      <ul className=\"lines\">\r\n        <li className=\"line l--0\">\r\n          <span className=\"line__label\">Started</span>\r\n        </li>\r\n        <li className=\"line l--25\">\r\n          <span className=\"line__label\">Beginner</span>\r\n        </li>\r\n        <li className=\"line l--50\">\r\n          <span className=\"line__label\">Itermediate</span>\r\n        </li>\r\n        <li className=\"line l--75\">\r\n          <span className=\"line__label\">Advanced</span>\r\n        </li>\r\n        <li className=\"line l--100\">\r\n          <span className=\"line__label\">Expert</span>\r\n        </li>\r\n      </ul>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default SkillChart;\r\n","import React from \"react\";\r\nimport { UserSkills } from \"Helpers/DataValidator\";\r\nimport Description from \"Components/Description\";\r\n\r\nconst SkillDescription = () => {\r\n  if (UserSkills.length) {\r\n    let skillsText = \"<strong>Core Competencies : </strong>\";\r\n    UserSkills.forEach(skill => {\r\n      skillsText = skillsText.concat(\"<br/><em><u>\", skill.header, \"</u></em>\");\r\n\r\n      if (skill.topics && skill.topics.length) {\r\n        let topics = skill.topics.map(tpcs => tpcs.name);\r\n\r\n        if (topics.length) {\r\n          skillsText = skillsText.concat(\r\n            \"<em> : </em>\",\r\n            topics.toString().replace(/,/g, \", \")\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Description\r\n        {...{\r\n          cssClass: \"skills-text\",\r\n          descriptionFor: skillsText\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default SkillDescription;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SkillChart from \"./SkillChart\";\r\nimport SkillDescription from \"./SkillDescription\";\r\nimport \"./SkillCard.scss\";\r\n\r\nconst SkillCard = ({ chart }) => (\r\n  <div className=\"skill-card\">\r\n    {chart && <SkillChart />}\r\n    {!chart && <SkillDescription />}\r\n  </div>\r\n);\r\n\r\nSkillCard.propTypes = {\r\n  chart: PropTypes.bool\r\n};\r\nexport default SkillCard;\r\n","import React, { useState } from \"react\";\r\nimport { DESCRIPTIONFOR } from \"Helpers/Enums\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport UserCard from \"Components/Cards/UserCard/UserCard\";\r\nimport Description from \"Components/Description\";\r\nimport SkillCard from \"Components/Cards/SkillCard/SkillCard\";\r\n\r\nimport \"./About.scss\";\r\n\r\nconst About = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const animationClass = visible ? \"bounce-in\" : \"is-hidden\";\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <AnimatedVisibility\r\n        {...{\r\n          notifyChange: isVisible => setVisible({ visible: isVisible })\r\n        }}\r\n      >\r\n        <UserCard\r\n          {...{\r\n            cssClass: `about-content ${animationClass}`\r\n          }}\r\n        />\r\n        <Description\r\n          {...{\r\n            cssClass: `about-content about-description ${animationClass}`,\r\n            descriptionFor: DESCRIPTIONFOR.USERDESCRIPTION\r\n          }}\r\n        />\r\n\r\n        <div className={`about-content ${animationClass}`}>\r\n          <SkillCard />\r\n        </div>\r\n      </AnimatedVisibility>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport \"./Timeline.scss\";\r\n\r\nconst Timeline = ({ children, className, lineColor }) => (\r\n  <div\r\n    className={classNames(className, \"timeline\")}\r\n    style={{ color: `${lineColor}` }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nTimeline.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired,\r\n  className: PropTypes.string,\r\n  lineColor: PropTypes.string\r\n};\r\n\r\nTimeline.defaultProps = {\r\n  className: \"\",\r\n  lineColor: \"#000\"\r\n};\r\n\r\nexport default Timeline;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport \"./StoryCard.scss\";\r\n\r\nconst StoryCard = ({ when, where, who, whom, count, theme, children }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <AnimatedVisibility\r\n      notifyChange={isVisible => isVisible && setVisible(true)}\r\n    >\r\n      <div className=\"story-caption-wrapper\" style={{ color: `${theme}` }}>\r\n        <div className={`${visible ? \"bounce-in\" : \"is-hidden\"}`}>\r\n          <span className=\"story-caption-container\">\r\n            <time\r\n              className=\"story-caption\"\r\n              style={{ background: `${theme}` }}\r\n              title={when}\r\n            >\r\n              {when}\r\n            </time>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"story-continer\">\r\n        <div\r\n          className={`story-content ${visible ? \"bounce-in\" : \"is-hidden\"} ${\r\n            !children ? \"empty\" : \"\"\r\n          }`}\r\n          style={{ borderColor: `${theme}` }}\r\n        >\r\n          <h3 style={{ color: `${theme}` }}>{who}</h3>\r\n          <h4 style={{ color: `${theme}` }}>\r\n            {whom.length ? `@ ${whom}, ${where}` : \"\"}\r\n          </h4>\r\n          <hr />\r\n          {count > 0 && (\r\n            <div\r\n              className=\"project-count\"\r\n              style={{ background: `${theme}` }}\r\n              title=\"Number of projects undertaken\"\r\n            >\r\n              {count}\r\n            </div>\r\n          )}\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nStoryCard.propTypes = {\r\n  when: PropTypes.string,\r\n  where: PropTypes.string,\r\n  who: PropTypes.string,\r\n  whom: PropTypes.string,\r\n  count: PropTypes.number,\r\n  theme: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nStoryCard.defaultProps = {\r\n  when: \"\",\r\n  where: \"\",\r\n  who: \"\",\r\n  whom: \"\",\r\n  theme: \"#ddd\",\r\n  children: null\r\n};\r\n\r\nexport default StoryCard;\r\n","import React from \"react\";\r\nimport Timeline from \"Components/Timeline\";\r\nimport StoryCard from \"Components/Cards/StoryCard\";\r\nimport { UserExperiences, UserProjects } from \"Helpers/DataValidator\";\r\nimport \"./Experience.scss\";\r\n\r\nconst getProjectCount = key => {\r\n  let count = 0;\r\n  UserProjects.forEach(project => {\r\n    if (key === project.companyKey) {\r\n      count++;\r\n    }\r\n  });\r\n  return count;\r\n};\r\n\r\nconst dataToObject = exp => ({\r\n  company: exp.company || \"\",\r\n  office: exp.office || \"\",\r\n  jobTitle: exp.jobTitle || \"\",\r\n  isPresent: exp.isPresent || false,\r\n  startDate: exp.startDate || \"\",\r\n  endDate: exp.endDate || \"\",\r\n  description: exp.description || \"\",\r\n  achievements: exp.achievements || [],\r\n  other: exp.other || \"\",\r\n  key: exp.misc.key,\r\n  theme: exp.misc && exp.misc.theme ? exp.misc.theme : \"#000\"\r\n});\r\n\r\nconst Experience = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <Timeline lineColor={\"#ddd\"}>\r\n        {UserExperiences.length &&\r\n          UserExperiences.map((exp, ind) => {\r\n            const dto = dataToObject(exp);\r\n            const when =\r\n              dto.startDate.length === 0 &&\r\n              (!dto.endDate || dto.endDate.length === 0)\r\n                ? \"\"\r\n                : `${dto.startDate} - ${\r\n                    dto.isPresent ? \"Present\" : dto.endDate\r\n                  }`;\r\n            const { theme, jobTitle: who, company: whom, office: where } = dto;\r\n            return (\r\n              <StoryCard\r\n                key={ind}\r\n                {...{\r\n                  theme,\r\n                  when,\r\n                  who,\r\n                  whom,\r\n                  where,\r\n                  count: getProjectCount(dto.key)\r\n                }}\r\n              >\r\n                <p>{dto.description}</p>\r\n                {dto.achievements && dto.achievements.length > 0 && (\r\n                  <div>\r\n                    <h4>Achievement highlights</h4>\r\n                    <ol>\r\n                      {dto.achievements.map((achievement, index) => (\r\n                        <li key={index.toString()}>{achievement.details}</li>\r\n                      ))}\r\n                    </ol>\r\n                  </div>\r\n                )}\r\n                {dto.other.length > 0 && (\r\n                  <div>\r\n                    <h5>Other responsibilities</h5>\r\n                    <p>{dto.other}</p>\r\n                  </div>\r\n                )}\r\n              </StoryCard>\r\n            );\r\n          })}\r\n        {!UserExperiences.length && (\r\n          <span className=\"no-experiences\">No experience found!</span>\r\n        )}\r\n      </Timeline>\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"Components/Icon\";\r\n\r\nconst ActionButton = ({\r\n  btnClass,\r\n  linkClass,\r\n  value,\r\n  children,\r\n  type,\r\n  tooltip\r\n}) => {\r\n  return (\r\n    <div className={btnClass}>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className={linkClass}\r\n        href={value}\r\n        title={tooltip}\r\n        onClick={e => e.stopPropagation()}\r\n      >\r\n        {type && <Icon {...{ type }} />}\r\n        {children}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nActionButton.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  linkClass: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ActionButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Tags = ({ tags, theme }) => {\r\n  if (!tags) return null;\r\n\r\n  return (\r\n    <div className=\"project-tags\">\r\n      {tags.split(\",\").map((tag, index) => (\r\n        <span\r\n          className=\"tag-chips\"\r\n          key={index}\r\n          style={{ background: `${theme}` }}\r\n        >\r\n          {tag}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  tags: PropTypes.string,\r\n  theme: PropTypes.string\r\n};\r\n\r\nexport default Tags;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Description from \"Components/Description\";\r\nimport AnimatedVisibility from \"Components/AnimatedVisibility\";\r\nimport ActionButton from \"Components/Buttons/ActionButton\";\r\nimport Icon from \"Components/Icon\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\nimport Tags from \"./Tags\";\r\nimport \"./ProjectCard.scss\";\r\n\r\nconst getProjectTitle = (project, className, key, theme) => {\r\n  if (project.title.length && project.startDate.length) {\r\n    const d1 = ` - ${project.isPresent ? \"Present\" : project.endDate}`;\r\n    return (\r\n      <div className={className} key={key} style={{ background: `${theme}` }}>\r\n        {project.title}\r\n        <small className=\"project-duration\">\r\n          {` (${project.startDate}${project.companyKey ? d1 : \"\"})`}\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst ProjectCard = ({ project, theme, children, index }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <AnimatedVisibility\r\n      notifyChange={isVisible => isVisible && setVisible(true)}\r\n    >\r\n      <div\r\n        className={`project-card ${visible ? \"bounce-in \" : \"is-hidden\"}`}\r\n        style={{ borderColor: `${theme}` }}\r\n      >\r\n        {getProjectTitle(project, \"project-header project-title\", index, theme)}\r\n        {children}\r\n        {project.description.length && (\r\n          <Description\r\n            {...{\r\n              cssClass: `about-project project-content`,\r\n              descriptionFor: `<strong>About Project : </strong> ${project.description}`\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"project-content sub-projects\">\r\n          {project.subProjects.map((subProjs, index) => {\r\n            const title = getProjectTitle(subProjs, \"sub-project-title\", index);\r\n            if (title) {\r\n              if (index === 0) {\r\n                return [\r\n                  <div key=\"-1\" className=\"sub-project-header\">\r\n                    <strong>Sub-projects</strong>\r\n                  </div>,\r\n                  title\r\n                ];\r\n              }\r\n              return title;\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div className=\"project-links\">\r\n          {project.demo && project.demo.length && (\r\n            <ActionButton\r\n              value={project.demo}\r\n              btnClass=\"project-link demo\"\r\n              linkClass=\"button-link\"\r\n              tooltip=\"View demo\"\r\n            >\r\n              <Icon type={ICONTYPE.DEMO} />\r\n              <span className=\"action-text\">Demo</span>\r\n            </ActionButton>\r\n          )}\r\n          {project.source && project.source.length && (\r\n            <ActionButton\r\n              value={project.source}\r\n              btnClass=\"project-link code\"\r\n              linkClass=\"button-link\"\r\n              tooltip=\"View source\"\r\n            >\r\n              <Icon type={ICONTYPE.CODE} />\r\n              <span className=\"action-text\">Source</span>\r\n            </ActionButton>\r\n          )}\r\n        </div>\r\n        <Tags\r\n          {...{ tags: project.tags ? project.tags.toString() : null, theme }}\r\n        />\r\n      </div>\r\n    </AnimatedVisibility>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.instanceOf(Object),\r\n  theme: PropTypes.string,\r\n  index: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport { UserProjects, UserExperiences } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Work = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (!project.companyKey) return null;\r\n      const experience = UserExperiences.find(\r\n        exp => exp.misc.key === project.companyKey\r\n      );\r\n      const options = experience\r\n        ? {\r\n            company: experience.company || \"\",\r\n            theme: experience.misc.theme || \"#000\"\r\n          }\r\n        : {\r\n            company: \"\",\r\n            theme: \"#000\"\r\n          };\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme={options.theme}\r\n        >\r\n          <div\r\n            className=\"project-header project-company\"\r\n            style={{ background: `${options.theme}` }}\r\n          >\r\n            {options.company}\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Work;\r\n","import React from \"react\";\r\n\r\nimport { UserProjects } from \"Helpers/DataValidator\";\r\nimport ProjectCard from \"Components/Cards/ProjectCard\";\r\n\r\nconst Personal = () => {\r\n  if (UserProjects.length) {\r\n    return UserProjects.map((project, index) => {\r\n      if (project.companyKey) return null;\r\n      return (\r\n        <ProjectCard\r\n          key={index}\r\n          index={(index + 1).toString()}\r\n          project={project}\r\n          theme=\"#000\"\r\n        >\r\n          <div\r\n            className=\"project-header project-company\"\r\n            style={{ background: \"#000\" }}\r\n          >\r\n            Personal\r\n          </div>\r\n        </ProjectCard>\r\n      );\r\n    });\r\n  }\r\n  return <span className=\"no-projects\">No projects found!</span>;\r\n};\r\n\r\nexport default Personal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Work from \"./Work\";\r\nimport Personal from \"./Personal\";\r\nimport { PROJECTSTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Projects.scss\";\r\n\r\nconst Projects = () => {\r\n  const [type, setType] = useState(PROJECTSTYPE.WORK);\r\n\r\n  return (\r\n    <article className=\"profile-content\">\r\n      <div className=\"toolbar\">\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.WORK)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.WORK ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Work\r\n        </span>\r\n        <span\r\n          onClick={() => setType(PROJECTSTYPE.PERSONAL)}\r\n          className={`toolbar-button ${\r\n            type === PROJECTSTYPE.PERSONAL ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          Personal\r\n        </span>\r\n      </div>\r\n      <div className=\"content-wrapper\">\r\n        {type === PROJECTSTYPE.WORK && <Work />}\r\n        {type === PROJECTSTYPE.PERSONAL && <Personal />}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport SkillCard from \"Components/Cards/SkillCard\";\r\nimport \"./Skills.scss\";\r\n\r\nconst Skills = () => (\r\n  <article className=\"profile-content\">\r\n    <div className=\"content-wrapper\">\r\n      <SkillCard chart />\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MENU } from \"Helpers/Enums\";\r\nimport About from \"Components/About/About\";\r\nimport Experience from \"Components/Experience/Experience\";\r\nimport Projects from \"Components/Projects/Projects\";\r\nimport Skills from \"Components/Skills/Skills\";\r\nimport \"./Main.scss\";\r\n\r\nconst Main = ({ route }) => (\r\n  <article className=\"profile-content\">\r\n    {route === MENU.ABOUT && <About />}\r\n    {route === MENU.EXPERIENCE && <Experience />}\r\n    {route === MENU.PROJECTS && <Projects />}\r\n    {route === MENU.SKILLS && <Skills />}\r\n  </article>\r\n);\r\n\r\nMain.propTypes = {\r\n  route: PropTypes.string\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport ActionButton from \"Components/Buttons/ActionButton\";\r\nimport { UserContacts } from \"Helpers/DataValidator\";\r\nimport { ICONTYPE } from \"Helpers/Enums\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <ActionButton\r\n      type={ICONTYPE.PHONE}\r\n      value={`https://wa.me/${UserContacts.Mobile}?text=Hi%20Vinnie,%20I%20am%20impressed%20with%20your%20experience%20and%20skillset.%20Can%20we%20talk?`}\r\n      btnClass=\"disc phone\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Whatsapp me\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.EMAIL}\r\n      value={`mailto:${UserContacts.Email}`}\r\n      btnClass=\"disc email\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Email me\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.LINKEDIN}\r\n      value={UserContacts.LinkedIn}\r\n      btnClass=\"disc linkedin\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Visit my linkedIn profile\"\r\n    />\r\n    <ActionButton\r\n      type={ICONTYPE.GITHUB}\r\n      value={UserContacts.Github}\r\n      btnClass=\"disc github\"\r\n      linkClass=\"button-link\"\r\n      tooltip=\"Visit my github\"\r\n    />\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"Components/Header\";\r\nimport Main from \"Components/Main\";\r\nimport Footer from \"Components/Footer\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const [route, setRoute] = useState(\"ABOUT\");\r\n  return (\r\n    <div className=\"personal-profile\">\r\n      <Header {...{ route, setRoute }} />\r\n      <Main {...{ route }} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}